<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>injection des r√©alisations par shopkeeper</name>
    <description />
    <extended_description />
    <trans_version />
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2020/12/27 22:27:30.301</created_date>
    <modified_user>-</modified_user>
    <modified_date>2020/12/27 22:27:30.301</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>injections des  r√©alisations par shopkeeper 
frequence  =  J-1 
nbr de requ√™te  = 5
les tables  sources =  transactions, product ,type_ptoduct 
                                     shopkeeper,shop,Facturiers_Transactions
                                      ,</note>
      <xloc>240</xloc>
      <yloc>16</yloc>
      <width>337</width>
      <heigth>106</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>bi</name>
    <server>51.38.62.93</server>
    <type>MSSQLNATIVE</type>
    <access>Native</access>
    <database>bi</database>
    <port>14332</port>
    <username>bi</username>
    <password>Encrypted 2f5c9d9ae53dda6a1ff00af5dd8abf6f4</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQLUseIntegratedSecurity</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>14332</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>ok 2</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>marchand  mois ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>marchand</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>mois facturier ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>recharge mois  ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>mois transfert ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>transport</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>transport 2</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>recharge,transport,change,wu,facuration,transfert par mois,marchand</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>transport 3 mois ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>wu mois ok</from>
      <to> shopkeeper_realisations</to>
      <enabled>N</enabled>
    </hop>
  </order>
  <step>
    <name> shopkeeper_realisations</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>shopkeeper_realisations</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>dinsertion</column_name>
        <stream_name>dinsertion</stream_name>
      </field>
      <field>
        <column_name>shopkeeper_id</column_name>
        <stream_name>shopkeeper_id</stream_name>
      </field>
      <field>
        <column_name>shopkeeper_name</column_name>
        <stream_name>shopkeeper_name</stream_name>
      </field>
      <field>
        <column_name>product</column_name>
        <stream_name>product</stream_name>
      </field>
      <field>
        <column_name>Type_product</column_name>
        <stream_name>Type_product</stream_name>
      </field>
      <field>
        <column_name>nShopId</column_name>
        <stream_name>nShopId</stream_name>
      </field>
      <field>
        <column_name>sShopId</column_name>
        <stream_name>sShopId</stream_name>
      </field>
      <field>
        <column_name>volume</column_name>
        <stream_name>volume</stream_name>
      </field>
      <field>
        <column_name>nbr</column_name>
        <stream_name>nbr</stream_name>
      </field>
      <field>
        <column_name>ProductType_id</column_name>
        <stream_name>ProductType_id</stream_name>
      </field>
      <field>
        <column_name>product_id</column_name>
        <stream_name>product_id</stream_name>
      </field>
      <field>
        <column_name>bFranchise</column_name>
        <stream_name>bFranchise</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>608</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>marchand</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select convert(date,m.created_date,103) as dinsertion,sh.nid as shopkeeper_id,sh.sFirstname + ' ' + sh.sLastName as shopkeeper_name, 'marchand' as product , 'marchand' as  Type_product
, shop_id as nShopId,s.sShopId ,sum(amount)as volume ,count(amount) as nbr,555 as ProductType_id,555 as product_id,bFranchise
  from Marchand_Transaction m
left join shop s
on s.nid = m.shop_id
left join ShopKeeper sh
on sh.nid = m.shop_keeper_id
left join Marchand_liste ml
on ml.sCodeMarchand = m.code_marchand
where year(m.created_date) =2022 and month(m.created_date) = 10
and  ml.sName  not in ('Cashplus Store','Tawssil','CTM MESSAGERIE','Versement RV','SIM orange','SIM inwi','CNSS AMO','Cpstore 2')

group by  convert(date,m.created_date,103),sh.nid,sh.sFirstname + ' ' + sh.sLastName,m.shop_id,s.sShopId,bFranchise
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>48</xloc>
      <yloc>112</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>marchand  mois ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select convert(date,m.created_date,103) as dinsertion,sh.nid as shopkeeper_id,sh.sFirstname + ' ' + sh.sLastName as shopkeeper_name, 'marchand' as product , 'marchand' as  Type_product
, shop_id as nShopId,s.sShopId ,sum(amount)as volume ,count(amount) as nbr,13 as ProductType_id,13 as product_id,bFranchise
  from Marchand_Transaction m
left join shop s
on s.nid = m.shop_id
left join ShopKeeper sh
on sh.nid = m.shop_keeper_id
left join Marchand_liste ml
on ml.sCodeMarchand = m.code_marchand
where year(m.created_date) =2022 and month(m.created_date) = 12
and  ml.sName  not in ('Cashplus Store','Tawssil','CTM MESSAGERIE','Versement RV','SIM orange','SIM inwi','CNSS AMO','Cpstore 2')

group by  convert(date,m.created_date,103),sh.nid,sh.sFirstname + ' ' + sh.sLastName,m.shop_id,s.sShopId,bFranchise


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>848</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>mois facturier ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select 

convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,p.sServiceProvider as product,'Facturiers'as type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,12 as ProductType_id  ,p.sBillerId as product_id ,bFranchise
from Facturiers_Transactions 
left join shopkeeper on shopkeeper.nid = Facturiers_Transactions.nShopkeeperId
join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p on p.sBillerId = Facturiers_Transactions.sBillerId
left join shop on Facturiers_Transactions.nShopId = shop.nId
left join Calcul_incentive on Calcul_incentive.product_id = p.sBillerId
where
   year(dInsertion) = 2022 and month(dInsertion) = 12

and 

 is_transaction_cmi = 1  and  status = 'PAID' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),p.sServiceProvider,shop.sShopId,Calcul_incentive.type_product_id,p.sBillerId,bFranchise,Calcul_incentive.type_product
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>144</xloc>
      <yloc>304</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>mois transfert ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select 
convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,product.sName as product,ProductType.sName as Type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,ProductType.nid as ProductType_id  , product.nid as product_id ,bFranchise
from _transactions 
left join shopkeeper on shopkeeper.naccessid = _transactions.naccessid
left join product on _Transactions.nProductId = product.nId
left join shop on _Transactions.nShopId = shop.nId
left join ProductType on product.nProductTypeId = ProductType.nId
where nProductId  not in( 5,58)
and   year(dInsertion) = 2022 and month(dInsertion) = 12 and nTransactionStatusId in (8,26)
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),nProductId,product.sName,product.sName,shop.sShopId,ProductType.sName,ProductType.nid , product.nid,bFranchise</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>240</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>

---transfert ----

select 
convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,product.sName as product,ProductType.sName as Type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,ProductType.nid as ProductType_id  , product.nid as product_id ,bFranchise
from _transactions 
left join shopkeeper on shopkeeper.naccessid = _transactions.naccessid
left join product on _Transactions.nProductId = product.nId
left join shop on _Transactions.nShopId = shop.nId
left join ProductType on product.nProductTypeId = ProductType.nId
where nProductId  not in( 5,58)
and   dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and 
dInsertion &lt; cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)  and nTransactionStatusId in (8,26)
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),nProductId,product.sName,product.sName,shop.sShopId,ProductType.sName,ProductType.nid , product.nid,bFranchise
union 




-----facuration----
select 

convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,p.sServiceProvider as product,'Facturiers'as type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,12 as ProductType_id  ,p.sBillerId as product_id ,bFranchise
from Facturiers_Transactions 
left join shopkeeper on shopkeeper.nid = Facturiers_Transactions.nShopkeeperId
join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p on p.sBillerId = Facturiers_Transactions.sBillerId
left join shop on Facturiers_Transactions.nShopId = shop.nId
left join Calcul_incentive on Calcul_incentive.product_id = p.sBillerId
where
   dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and 
dInsertion &lt; cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime) 


and 

 is_transaction_cmi = 1  and  status = 'PAID' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),p.sServiceProvider,shop.sShopId,Calcul_incentive.type_product_id,p.sBillerId,bFranchise,Calcul_incentive.type_product


union 
------- wu


select dinsertion,shopkeeper.nid  as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name  
,'wu' as product,ProductType.sName as Type_product,nShopId,shop.sShopId,sum(volume/nbr_cc)as volume,sum(nbr/nbr_cc)as nbr ,ProductType_id,product_id,shop.bFranchise
from shopkeeper_realisations_wu ok 
left join shop on ok.nShopId = shop.nid 

left join shopkeeper on shopkeeper.naccessid = ok.naccessid
 join ProductType 
 on ProductType.nId =ok.producttype_id
where    dInsertion between cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and 
cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)


  group by dinsertion,shopkeeper.nid ,ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,nShopId,sShopId ,ProductType_id,product_id,bFranchise,ProductType.sName

union 


----------change 

select   convert(date,bordereau_date,103) as dinsertion ,sh.nid shopkeeper_id, sh.sFirstname + ' ' + sh.sLastName as shopkeeper_name,
bordereau_type as product,'change' as type_product ,s.nid as nshopid,tr.code as sshopid,sum(contre_valeur) as volume,count(*) as nbr,89 as producttype_id
,cASE 
       WHEN bordereau_type ='Achat'  THEN 15
       WHEN bordereau_type ='Vente' THEN 14
       WHEN bordereau_type= 'Cession' THEN 16
       
END as product_id  ,s.bFranchise
 from transactions_change tr
left join shopkeeper sh
on tr.identite_num =sh.sCIN
left join shop s
on s.sShopId = tr.code
where   bordereau_date between cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and
cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)

group by   convert(date,bordereau_date,103),sh.nid, sh.sFirstname + ' ' + sh.sLastName,bordereau_type,s.nid,tr.code,s.bFranchise



-------------transport----------------

select 
 convert(date,created_date,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
tp.name as product,'Facturiers'as Type_product ,shop_id as nShopId,shop.sShopId,sum(Transport_Transactions.amount)as volume ,count(Transport_Transactions.amount) as nbr,12 as ProductType_id,22 as product_id  ,bFranchise 
 from Transport_Transactions
left join shopkeeper on shopkeeper.nid = Transport_Transactions.shop_keeper_id
left join shop on Transport_Transactions.shop_id = shop.nId
left join Transport_Product tp
on tp.id = Transport_Transactions.product_id
where
 created_date between cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and
cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)

and   transaction_status = 'PAID' and retailer_id is null
 group by convert(date,created_date,103) ,shopkeeper.nid , ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
shop_id,shop.sShopId   ,bFranchise,tp.name





----------------- recharge-------------



select 
 convert(date,dRecharge,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
'Recharge' as product,'Facturiers'as Type_product,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,20 as ProductType_id,10 as product_id  ,bFranchise
from recharge
left join shopkeeper on shopkeeper.nid = Recharge.nShopkeeperId
left join shop on Recharge.nShopId = shop.nId
where
 dRecharge   between cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and
cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)


and   sstatus = 'COMPLETE' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dRecharge,103),shop.sShopId,bFranchise



---------------------



select convert(date,m.created_date,103) as dinsertion,sh.nid as shopkeeper_id,sh.sFirstname + ' ' + sh.sLastName as shopkeeper_name, 'marchand' as product , 'marchand' as  Type_product
, shop_id as nShopId,s.sShopId ,sum(amount)as volume ,count(amount) as nbr,13 as ProductType_id,13 as product_id,bFranchise
  from Marchand_Transaction m
left join shop s
on s.nid = m.shop_id
left join ShopKeeper sh
on sh.nid = m.shop_keeper_id
left join Marchand_liste ml
on ml.sCodeMarchand = m.code_marchand
where 


 m.created_date   between cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','00:00:00.000') as datetime) and
cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)
and  ml.sName  not in ('Cashplus Store','Tawssil','CTM MESSAGERIE','Versement RV','SIM orange','SIM inwi','CNSS AMO','Cpstore 2')

group by  convert(date,m.created_date,103),sh.nid,sh.sFirstname + ' ' + sh.sLastName,m.shop_id,s.sShopId,bFranchise




</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>112</xloc>
      <yloc>192</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>ok 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>

---transfert ----

select 
convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,product.sName as product,ProductType.sName as Type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,ProductType.nid as ProductType_id  , product.nid as product_id ,bFranchise
from _transactions 
left join shopkeeper on shopkeeper.naccessid = _transactions.naccessid
left join product on _Transactions.nProductId = product.nId
left join shop on _Transactions.nShopId = shop.nId
left join ProductType on product.nProductTypeId = ProductType.nId
where nProductId  not in( 5,58)
and   year(dInsertion) = 2022 and month(dInsertion) = 6   and nTransactionStatusId in (8,26)
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),nProductId,product.sName,product.sName,shop.sShopId,ProductType.sName,ProductType.nid , product.nid,bFranchise
union 




-----facuration----
select 

convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,p.sServiceProvider as product,Calcul_incentive.type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,Calcul_incentive.type_product_id as ProductType_id  ,p.sBillerId as ProductType ,bFranchise
from Facturiers_Transactions 
left join shopkeeper on shopkeeper.nid = Facturiers_Transactions.nShopkeeperId
join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p on p.sBillerId = Facturiers_Transactions.sBillerId
left join shop on Facturiers_Transactions.nShopId = shop.nId
left join Calcul_incentive on Calcul_incentive.product_id = p.sBillerId
where
   year(dInsertion) = 2022 and month(dInsertion) = 7


and 

 is_transaction_cmi = 1  and  status in ('PAID') and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),p.sServiceProvider,shop.sShopId,Calcul_incentive.type_product_id,p.sBillerId,bFranchise,Calcul_incentive.type_product


union 
------- wu


select dinsertion,shopkeeper.nid  as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name  
,'wu' as product,ProductType.sName as Type_product,nShopId,shop.sShopId,sum(volume/nbr_cc)as volume,sum(nbr/nbr_cc)as nbr ,ProductType_id,product_id,shop.bFranchise
from shopkeeper_realisations_wu ok 
left join shop on ok.nShopId = shop.nid 

 join shopkeeper on shopkeeper.naccessid = ok.naccessid
 join ProductType 
 on ProductType.nId =ok.producttype_id
where  year(dInsertion) = 2022 and month(dInsertion) = 7


  group by dinsertion,shopkeeper.nid ,ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,nShopId,sShopId ,ProductType_id,product_id,bFranchise,ProductType.sName





</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>32</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>recharge mois  ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select 
 convert(date,dRecharge,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
'Recharge' as product,'Facturiers'as Type_product,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,20 as ProductType_id,10 as product_id  ,bFranchise
from recharge
left join shopkeeper on shopkeeper.nid = Recharge.nShopkeeperId
left join shop on Recharge.nShopId = shop.nId
where
    year(dRecharge) = 2022 and month(dRecharge) = 12


and   sstatus = 'COMPLETE' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dRecharge,103),shop.sShopId,bFranchise

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>recharge,transport,change,wu,facuration,transfert par mois,marchand</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>

---transfert ----

select 
convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,product.sName as product,ProductType.sName as Type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,ProductType.nid as ProductType_id  , product.nid as product_id ,bFranchise
from _transactions 
left join shopkeeper on shopkeeper.naccessid = _transactions.naccessid
left join product on _Transactions.nProductId = product.nId
left join shop on _Transactions.nShopId = shop.nId
left join ProductType on product.nProductTypeId = ProductType.nId
where nProductId  not in( 5,58)
and   year(dInsertion) = 2022 and month(dInsertion) = 11  and nTransactionStatusId in (8,26)
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),nProductId,product.sName,product.sName,shop.sShopId,ProductType.sName,ProductType.nid , product.nid,bFranchise
union 




-----facuration----
select 

convert(date,dinsertion,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,p.sServiceProvider as product,'Facturiers'as type_product
,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,12 as ProductType_id  ,p.sBillerId as product_id ,bFranchise
from Facturiers_Transactions 
left join shopkeeper on shopkeeper.nid = Facturiers_Transactions.nShopkeeperId
join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p on p.sBillerId = Facturiers_Transactions.sBillerId
left join shop on Facturiers_Transactions.nShopId = shop.nId
left join Calcul_incentive on Calcul_incentive.product_id = p.sBillerId
where
   year(dInsertion) = 2022 and month(dInsertion) = 11

and 

 is_transaction_cmi = 1  and  status = 'PAID' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dinsertion,103),p.sServiceProvider,shop.sShopId,Calcul_incentive.type_product_id,p.sBillerId,bFranchise,Calcul_incentive.type_product


union 
------- wu


select dinsertion,shopkeeper.nid  as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name  
,'wu' as product,ProductType.sName as Type_product,nShopId,shop.sShopId,sum(volume/nbr_cc)as volume,sum(nbr/nbr_cc)as nbr ,ProductType_id,product_id,shop.bFranchise
from shopkeeper_realisations_wu ok 
left join shop on ok.nShopId = shop.nid 

left join shopkeeper on shopkeeper.naccessid = ok.naccessid
 join ProductType 
 on ProductType.nId =ok.producttype_id
where year(dInsertion) = 2022 and month(dInsertion) = 11

  group by dinsertion,shopkeeper.nid ,ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,nShopId,sShopId ,ProductType_id,product_id,bFranchise,ProductType.sName

union 


----------change 

select   convert(date,bordereau_date,103) as dinsertion ,sh.nid shopkeeper_id, sh.sFirstname + ' ' + sh.sLastName as shopkeeper_name,
bordereau_type as product,'change' as type_product ,s.nid as nshopid,tr.code as sshopid,sum(contre_valeur) as volume,count(*) as nbr,89 as producttype_id
,cASE 
       WHEN bordereau_type ='Achat'  THEN 15
       WHEN bordereau_type ='Vente' THEN 14
       WHEN bordereau_type= 'Cession' THEN 16
       
END as product_id  ,s.bFranchise
 from transactions_change tr
left join shopkeeper sh
on tr.identite_num =sh.sCIN
left join shop s
on s.sShopId = tr.code
where    year(bordereau_date) = 2022 and month(bordereau_date) = 11
group by   convert(date,bordereau_date,103),sh.nid, sh.sFirstname + ' ' + sh.sLastName,bordereau_type,s.nid,tr.code,s.bFranchise



-------------transport----------------

select 
 convert(date,created_date,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
tp.name as product,'Facturiers'as Type_product ,shop_id as nShopId,shop.sShopId,sum(Transport_Transactions.amount)as volume ,count(Transport_Transactions.amount) as nbr,12 as ProductType_id,22 as product_id  ,bFranchise 
 from Transport_Transactions
left join shopkeeper on shopkeeper.nid = Transport_Transactions.shop_keeper_id
left join shop on Transport_Transactions.shop_id = shop.nId
left join Transport_Product tp
on tp.id = Transport_Transactions.product_id
where
  year(created_date) = 2022 and month(created_date) = 11

and   transaction_status = 'PAID' and retailer_id is null
 group by convert(date,created_date,103) ,shopkeeper.nid , ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
shop_id,shop.sShopId   ,bFranchise,tp.name





----------------- recharge-------------



select 
 convert(date,dRecharge,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
'Recharge' as product,'Facturiers'as Type_product,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,20 as ProductType_id,10 as product_id  ,bFranchise
from recharge
left join shopkeeper on shopkeeper.nid = Recharge.nShopkeeperId
left join shop on Recharge.nShopId = shop.nId
where
    year(dRecharge) = 2022 and month(dRecharge) = 11


and   sstatus = 'COMPLETE' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dRecharge,103),shop.sShopId,bFranchise


union 

----------------- marchand-------------

select convert(date,m.created_date,103) as dinsertion,sh.nid as shopkeeper_id,sh.sFirstname + ' ' + sh.sLastName as shopkeeper_name, 'marchand' as product , 'marchand' as  Type_product
, shop_id as nShopId,s.sShopId ,sum(amount)as volume ,count(amount) as nbr,13 as ProductType_id,13 as product_id,bFranchise
  from Marchand_Transaction m
left join shop s
on s.nid = m.shop_id
left join ShopKeeper sh
on sh.nid = m.shop_keeper_id
left join Marchand_liste ml
on ml.sCodeMarchand = m.code_marchand
where year(m.created_date) =2022 and month(m.created_date) = 11
and  ml.sName  not in ('Cashplus Store','Tawssil','CTM MESSAGERIE','Versement RV','SIM orange','SIM inwi','CNSS AMO','Cpstore 2')

group by  convert(date,m.created_date,103),sh.nid,sh.sFirstname + ' ' + sh.sLastName,m.shop_id,s.sShopId,bFranchise


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>336</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>transport</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select 
 convert(date,created_date,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
tp.name as product,'Facturiers'as Type_product ,shop_id as nShopId,shop.sShopId,sum(Transport_Transactions.amount)as volume ,count(Transport_Transactions.amount) as nbr,22 as ProductType_id,2221 as product_id  ,bFranchise 
 from Transport_Transactions
left join shopkeeper on shopkeeper.nid = Transport_Transactions.shop_keeper_id
left join shop on Transport_Transactions.shop_id = shop.nId
left join Transport_Product tp
on tp.id = Transport_Transactions.product_id
where
 year(created_date) = 2022 and month(created_date) = 11

and   transaction_status = 'PAID' and retailer_id is null
 group by convert(date,created_date,103) ,shopkeeper.nid , ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
shop_id,shop.sShopId   ,bFranchise,tp.name</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1168</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>transport 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select 
 convert(date,dRecharge,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
'Recharge' as product,'Facturiers'as Type_product,nShopId,shop.sShopId,sum(namount)as volume ,count(namount) as nbr ,22 as ProductType_id,10 as product_id  ,bFranchise
from recharge
left join shopkeeper on shopkeeper.nid = Recharge.nShopkeeperId
left join shop on Recharge.nShopId = shop.nId
where
 year(dRecharge) = 2022 and month(dRecharge) = 11


and   sstatus = 'COMPLETE' and nDetaillant is null
group by  
shopkeeper.nid, smatricule, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
nShopId, convert(date,dRecharge,103),shop.sShopId,bFranchise



</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>transport 3 mois ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select 
 convert(date,created_date,103) as dinsertion,shopkeeper.nid as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name,
tp.name as product,'Facturiers'as Type_product ,shop_id as nShopId,shop.sShopId,sum(Transport_Transactions.amount)as volume ,count(Transport_Transactions.amount) as nbr,12 as ProductType_id,22 as product_id  ,bFranchise 
 from Transport_Transactions
left join shopkeeper on shopkeeper.nid = Transport_Transactions.shop_keeper_id
left join shop on Transport_Transactions.shop_id = shop.nId
left join Transport_Product tp
on tp.id = Transport_Transactions.product_id
where
  year(created_date) = 2022 and month(created_date) = 12

and   transaction_status = 'PAID' and retailer_id is null
 group by convert(date,created_date,103) ,shopkeeper.nid , ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,
shop_id,shop.sShopId   ,bFranchise,tp.name
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>wu mois ok</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select dinsertion,shopkeeper.nid  as shopkeeper_id, ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName as shopkeeper_name  
,'wu' as product,ProductType.sName as Type_product,nShopId,shop.sShopId,sum(volume/nbr_cc)as volume,sum(nbr/nbr_cc)as nbr ,ProductType_id,product_id,shop.bFranchise
from shopkeeper_realisations_wu ok 
left join shop on ok.nShopId = shop.nid 

left join shopkeeper on shopkeeper.naccessid = ok.naccessid
 join ProductType 
 on ProductType.nId =ok.producttype_id
where year(dInsertion) = 2022 and month(dInsertion) = 12

  group by dinsertion,shopkeeper.nid ,ShopKeeper.sFirstname + ' ' + ShopKeeper.sLastName ,nShopId,sShopId ,ProductType_id,product_id,bFranchise,ProductType.sName
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>256</xloc>
      <yloc>416</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
