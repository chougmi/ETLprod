<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>shopkeeper</name>
    <description />
    <extended_description />
    <trans_version />
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2018/11/12 08:44:58.934</created_date>
    <modified_user>-</modified_user>
    <modified_date>2019/01/09 10:10:53.080</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>bi</name>
    <server>51.38.62.93</server>
    <type>MSSQLNATIVE</type>
    <access>Native</access>
    <database>bi</database>
    <port>14332</port>
    <username>bi</username>
    <password>Encrypted 2f5c9d9ae53dda6a1ff00af5dd8abf6f4</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQLUseIntegratedSecurity</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>14332</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>cashplusmaster</name>
    <server>52.30.112.96</server>
    <type>MSSQLNATIVE</type>
    <access>Native</access>
    <database>Cash_plus</database>
    <port>1433</port>
    <username>biuser</username>
    <password>Encrypted 2dbb2ea981795dfd68011e53f9adf91fe</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQLUseIntegratedSecurity</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1433</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>Table input 2 2</from>
      <to>Insertion dans table 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2</from>
      <to>Insertion dans table 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2</from>
      <to>Insertion dans table 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>--</from>
      <to>Alimentation fichier Excel (xlsx) 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>--</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>--</from>
      <to>Alimentation fichier 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 2 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Extraction depuis fichier MS Excel 3</from>
      <to>Altération structure flux 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Altération structure flux 3</from>
      <to>Insertion dans table 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3</from>
      <to>Insertion dans table 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 2</from>
      <to>Insertion dans table 2 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3</from>
      <to>Alimentation fichier 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 2 3</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3</from>
      <to>Insertion dans table 2 3 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2</from>
      <to>Alimentation fichier 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 5</from>
      <to>Insertion dans table 2 3 2 2 5</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 2 2</from>
      <to>Insertion dans table 2 3 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 2 3</from>
      <to>Insertion dans table 2 3 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 7</from>
      <to>Insertion dans table 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 2 4</from>
      <to>Insertion dans table 2 3 2 2 2 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission par shop </from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2 2 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2 3</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2 4</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>commission 2 5 non</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 2</from>
      <to>Alimentation fichier 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 3</from>
      <to>Alimentation fichier 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 2</from>
      <to>Insertion dans table 2 3 2 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 3</from>
      <to>Alimentation fichier 2 2 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 2 2</from>
      <to>Alimentation fichier 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>facturation</from>
      <to>Alimentation fichier 4</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3</from>
      <to>Insertion dans table 2 3 2 2 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 2 2 2</from>
      <to>Alimentation fichier 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3 2</from>
      <to>Insertion dans table 2 3 2 2 3 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 2 2 2 2</from>
      <to>Alimentation fichier 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 2 2 2 2 2</from>
      <to>Alimentation fichier 2 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3 2 2</from>
      <to>Insertion dans table 2 3 2 2 3 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 3 2</from>
      <to>Alimentation fichier 2 2 2 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 3 2 2</from>
      <to>Alimentation fichier 2 2 2 3 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3 2 2 2</from>
      <to>Insertion dans table 2 3 2 2 3 3 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 2 3</from>
      <to>Insertion dans table 2 3 2 2 3 2 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 3 2 2 2 2 2 2 2</from>
      <to>Alimentation fichier 2 2 2 2 2 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 2 2 2</from>
      <to>Insertion dans table 2 3 2 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3 3</from>
      <to>Insertion dans table 2 3 2 2 3 3 3</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>facturation 2</from>
      <to>Insertion dans table 2 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3 3 2</from>
      <to>Insertion dans table 2 3 2 2 3 3 3 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>n 2 2 2 2</from>
      <to>Alimentation fichier 2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>facturation 3</from>
      <to>Alimentation fichier</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Table input 2 2 2 2 3 3 3 2 2 2 2</from>
      <to>Insertion dans table 2 3 2 2 3 3 2 2 2 2</to>
      <enabled>N</enabled>
    </hop>
  </order>
  <step>
    <name>--</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select   convert(date,f.dInsertion,103)as date,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) as code ,count(*) as nbr,sum(f.nAmount) as volume 
from Facturiers_Transactions f
join Shop s
on f.nShopId = s.nid
left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
on p.sBillerId = f.sBillerId
left join VIEW_RETAILERS rr
on rr.shopkeeper_Id = f.nDetaillant
where   status = 'PAID' and dOperation is  not null
and month(f.dInsertion) in (2,3) and year(f.dinsertion) = 2023

group by  convert(date,f.dInsertion,103),f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) 















select    distinct  f.nid  ,convert(date,f.dInsertion,103)as date,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) as code
from Facturiers_Transactions f
join Shop s
on f.nShopId = s.nid
left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
on p.sBillerId = f.sBillerId
left join VIEW_RETAILERS rr
on rr.shopkeeper_Id = f.nDetaillant
where   status = 'PAID' and dOperation is  not null
and month(f.dInsertion) in (2,3) and year(f.dinsertion) = 2023




















select f.creancier ,p.sBillerId, p.sServiceProvider ,convert(date,created_date,103) as date,count(total_paid)as nbr ,sum(total_paid) as total_paid   from fatourati_transactions f
 left join (select code_creancier as sBillerId , nom_creancier as sServiceProvider  from creanciers) p 
 on  p.sBillerId =f.creancier
 where     year(f.created_date) = 2023
and f.statut = 'RESPONSE_RECIEVED_OK'
group by p.sBillerId, p.sServiceProvider ,convert(date,created_date,103),f.creancier












select  transaction_status, name as product ,created_date,Transport_Transactions.amount ,fees ,date_depart,s.sshopid as code,ticket_ids,retailer_code from Transport_Transactions
 left join VIEW_RETAILERS rr
on rr.shopkeeper_Id = retailer_id
 left join shop s on s.nid = Transport_Transactions.shop_id
left join Transport_Product
on Transport_Product.id = Transport_Transactions.product_id
 
where year(created_date) = 2023  and month(created_date) =11














--select  name as product ,transaction_status,created_date,Transport_Transactions.amount ,fees ,date_depart,s.sshopid as code,ticket_ids,retailer_code from Transport_Transactions
-- left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = retailer_id
-- left join shop s on s.nid = Transport_Transactions.shop_id
--left join Transport_Product
--on Transport_Product.id = Transport_Transactions.product_id
--  where year(created_date) = 2022 and month(created_date) in (12) 





--select nShopTypeId,dDate,year(dDate)as year, month(dDate)as mois ,c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise,sum(namount)as volume,sum(nComissionFranchise) as commission  from Comission_MonthlyReport c
--left join shop s
--on s.nid  =c.nshopid
--left join Product p 
--on p.nid = c.nProductIdentifier 

--where year(dDate) = 2023 and month(dDate) = 4
--group by nShopTypeId, dDate,year(dDate),  month(dDate),c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise



--select * from InterPartnerTransactions  
--where nPartnerId = 32 



--select f.creancier ,p.sBillerId, p.sServiceProvider ,convert(date,created_date,103) as date,count(total_paid)as nbr ,sum(total_paid) as total_paid   from fatourati_transactions f
-- left join (select code_creancier as sBillerId , nom_creancier as sServiceProvider  from creanciers) p 
-- on  p.sBillerId =f.creancier
-- where  month(f.created_date)=5 and   year(f.created_date) = 2023
--and f.statut = 'RESPONSE_RECIEVED_OK'
--group by p.sBillerId, p.sServiceProvider ,convert(date,created_date,103),f.creancier








---select shop.sShopId as code_agnce_annule ,Action_Request.product_type, Action_Request.product ,Action_Request.date_created as date_annulation
--,nTransactionsId,refunded_amount,refundTotalAmount,sNeiCode,cancelDate,TANHUB.nTransactionCashInId as id_cashin,shopp.sShopId,outt.nTransactionCashOutId
--from Action_Request
--left join shop on Action_Request.shop_id = shop.nid
--join CashRefund on   Action_Request.id = CashRefund.action_request_id
--join TAOHUB on TAOHUB.nTransactionsId = Action_Request.record_id
-- left join TANHUB 
--on TANHUB.nTransactionCashInId = refund_transaction_id
--left join TANHUB outt
--on outt.nTransactionCashInId = TANHUB.nTransactionCashInId
--left join Transactions 
--on Transactions.nid = TANHUB.nTransactionCashInId
--left join shop shopp
--on shopp.nid = Transactions.nShopId

--where Action_Request.date_created > '2023-05-01 00:01:58.173' 






--select  name as product ,created_date,Transport_Transactions.amount ,fees ,date_depart,s.sshopid as code,ticket_ids,retailer_code from Transport_Transactions
-- left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = retailer_id
-- left join shop s on s.nid = Transport_Transactions.shop_id
--left join Transport_Product
--on Transport_Product.id = Transport_Transactions.product_id
 
--where year(created_date) = 2023 and month(created_date) in (3) 














--






select  product_type_id, s.sShopId as code  ,convert(date,created_date,103) as date,count(*) as nbr_trx,sum(converted_points) as converted_points,sum(fees_points)as fees_points  from  [cp_core].[dbo].FIDE_TRANSACTIONS f
left join [cash_plus].[dbo].[shop] s
on s.nid = f.nShopId
where converted_points &lt;&gt;0
and month(created_date) in ( 5,4)
and year(created_date) = 2023  and cancel is null and rule_id = 30
group by  product_type_id, s.sShopId,convert(date,created_date,103)


--select    distinct  f.nid  ,convert(date,f.dInsertion,103)as date,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
--f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) as code
--from Facturiers_Transactions f
--join Shop s
--on f.nShopId = s.nid
--left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--where   status = 'PAID' and dOperation is  not null
--and 
--f.sBillerId = 5555 and month(f.dInsertion) = 12 and year(f.dinsertion) = 2022





--select  id ,s.sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b
--join [cash_plus].[dbo].[shop] s
--on s.nid = b.pos_id
--where     month(created_at) = 10 and year(created_at) = 2022 and producttype= 26



--select f.creancier ,p.sBillerId, p.sServiceProvider ,convert(date,created_date,103) as date,count(total_paid)as nbr ,sum(total_paid) as total_paid   from fatourati_transactions f
-- left join (select code_creancier as sBillerId , nom_creancier as sServiceProvider  from creanciers) p 
-- on  p.sBillerId =f.creancier

-- where  month(f.created_date)in (10) and   year(f.created_date) = 2022
--and
--f.statut = 'RESPONSE_RECIEVED_OK'
--group by p.sBillerId, p.sServiceProvider ,convert(date,created_date,103),f.creancier










--select nShopTypeId,dDate,year(dDate)as year, month(dDate)as mois ,c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise,sum(namount)as volume,sum(nComissionFranchise) as commission  from Comission_MonthlyReport c
--left join shop s
--on s.nid  =c.nshopid
--left join Product p 
--on p.nid = c.nProductIdentifier 
--where year(dDate) = 2022 and month(dDate) = 9
--group by nShopTypeId, dDate,year(dDate),  month(dDate),c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise



--select * from Partner_X
--where convert(date,dInsertion,103) = '2022-02-04' and sStatus &lt;&gt; 'PAID'
-- order by nid desc



--select * from Facturiers_Transactions
--where sBillerId = 1022 and dInsertion > '2022-01-01 00:15:14.980'
--and status &lt;&gt; 'PAID'



--select   ss.sShopId, isnull(v.retailer_code, ss.sname)as agence  , year(r.dRecharge) as  year,sStatus
--,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type, count(*) as nbr,sum(namount)as volume from Recharge r
--join shop ss 
--on ss.nid = r.nShopId
--left join VIEW_RETAILERS v
--on v.ShopKeeper_id = r.nDetaillant

-- where   year(r.dRecharge) = 2021  and sStatus = 'COMPLETE'
-- group by   ss.sShopId, isnull(v.retailer_code, ss.sname),year(r.dRecharge),sStatus,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end




--select    isnull(retailer_code, ss.sShopId ) as sShopId,isnull(retailer_code, ss.Sname ) as agence,f.sBillerId as nProductId  ,p.sServiceProvider as Product, year(f.dInsertion)as year,f.status
--,CASE WHEN  f.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type ,
-- nbr_Creances ,count(*)as nbr,sum(nAmount) as volume  from Facturiers_Transactions f

 --        left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
  --        join shop ss
--on ss.nid = f.nShopId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant

--where year(f.dInsertion) = 2021
--group by  isnull(retailer_code, ss.sShopId ),isnull(retailer_code, ss.Sname ),f.sBillerId,p.sServiceProvider,year(f.dInsertion),f.status
--,CASE WHEN  f.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end ,nbr_Creances


--select s.sshopid as code, year(dRecharge) ,sStatus,count(*) as nbr,sum(nAmount) from Recharge r
--inner  join shop s on s.nid =r.nShopId
--where dCompleDate is not  null  and  year(dRecharge) = 2021
--group by  s.sshopid , year(dRecharge) ,sStatus




--select    s.sShopId as code,  year(f.dInsertion) as year ,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
-- f.nbr_Creances ,count(*) as nbr, sum(nAmount) as volume
--from Facturiers_Transactions f
-- join Shop s
--on f.nShopId = s.nid
--left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--where   status = 'PAID' and dOperation is  not null
--and 
-- year(f.dinsertion) = 2021 and rr.retailer_code is not null 

--group by  s.sShopId ,year(f.dInsertion),f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
-- f.nbr_Creances










--select   s.nShopTypeId ,year(dinsertion)as year ,s.sShopId,t.nshopid,p.sname,tr.sname as nTransactionStatus,nTransactionStatusId ,count(*) as nbr ,sum(namount) as volume from transactions t
--left join shop s on s.nid = t.nshopid
--left join Product p on p.nid = t.nProductId
--left join TransactionStatus tr on tr.nid = t.nTransactionStatusId
--where year(dinsertion) = 2021 
--group by   s.nShopTypeId,year(dinsertion) ,s.sShopId,t.nshopid,p.sname,nTransactionStatusId,tr.sname





--select    distinct  f.nid  ,convert(date,f.dInsertion,103)as date,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
-- f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) as code
--from Facturiers_Transactions f
--join Shop s
--on f.nShopId = s.nid
--left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--where   status = 'PAID' and dOperation is  not null
--and 
--f.sBillerId = 5555 and month(f.dInsertion) = 4 and year(f.dinsertion) = 2022



--select   tr.nid as transactionid ,t.sNeiCode as code  ,p.sName as product

--,tr.dInsertion as date  ,s.sName as transactions_statut ,sh.sName as shop_name  ,sh.sShopId as code 
--,tr.nAmount  ,tr.nOperationFee, tr.nProductId
--from transactions tr
--left join TAIHUB t
--on tr.nid = t.ntransactionsid
--left join Product p 
--on p.nid = tr.nProductId
--join TransactionStatus s
--on s.nId = tr.nTransactionStatusId
--join shop sh on sh.nid = tr.nShopId

--where tr.nProductId = 22
--and 
--tr.dInsertion > '2021-01-01 00:10:53.010'

 --select * from ProfilageCustomerLevel
--where dateCreated >'2022-01-01 00:47:17.920'
--select  client_id ,product_id ,product_type_id ,created_date ,points ,nShopId,fees_points ,converted_points  from  [CP_CORE].[dbo].FIDE_TRANSACTIONS
--where fees_points &lt;&gt;0
--order by id desc

--select  product_id ,open_date ,fidelity_balance ,shop_id ,ref_id as client  from [CP_CORE].[dbo].ACCOUNT

--left join [CP_CORE].[dbo].holder ON holder.id = account.holder_id


--select sShopId as code ,Action_Request.product_type, Action_Request.product ,Action_Request.date_created as date_annulation
--,nTransactionsId,refunded_amount,nAmount,refundTotalAmount,sNeiCode,cancelDate
--from Action_Request
--left join shop on Action_Request.shop_id = shop.nid
--join CashRefund on   Action_Request.id = CashRefund.action_request_id
--join TAOHUB on TAOHUB.nTransactionsId = Action_Request.record_id
--where Action_Request.date_created > '2022-09-01 00:16:58.173'



--select nShopId,s.sShopId ,nProductId,sShopCorrespondenceId,p.bActive from ProductShopCorrespondence p 
--left join shop s on s.nid =p.nShopId
--where nProductId= 5
--select nShopTypeId,dDate,year(dDate)as year, month(dDate)as mois ,c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise,sum(namount)as volume,sum(nComissionFranchise) as commission  from Comission_MonthlyReport c
--left join shop s
--on s.nid  =c.nshopid
--left join Product p 
--on p.nid = c.nProductIdentifier 
--where year(dDate) = 2022 and month(dDate) = 1
---group by nShopTypeId, dDate,year(dDate),  month(dDate),c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise


--select  operation_type_id,sh.sShopId,sFirstName ,sLastName,sCIN , count(*)as nbr from LOG_COREBANKING l
--left join [cash_plus].[dbo].[ShopKeeper] s
--on l.shop_keeper_id = s.nId
--left join  [cash_plus].[dbo].shop sh
--on sh.nid = l.shop_id
--where operation_type_id  = 13 and month(operation_date) = 2 and year(operation_date) =2021
--and status = 'Finished'
--group by   operation_type_id,sh.sShopId,sFirstName ,sLastName,sCIN




--select sShopId,firstName,lastname ,smatricule2 ,count(*) as nbr    
--from (

--select  id_account,isnull(shop3,shop2) as idcode ,s.sShopId,isnull(upload_date_3,upload_date_2) as date

--,isnull(shopkepper_sfirstName3,shopkepper_sfirstName2) as firstName
--,isnull(shopkepper_slastname3,shopkepper_slastname2)as lastname

--,isnull(smatricule3,smatricule2) as smatricule2

--from info_upgrades

  --    join shop s
 --on s.nid = isnull(shop3,shop2)
  --    join (select account_id ,min(createddate) as date from REPORTING_TRANSACTIONS 
 --            group by account_id) p_trx
--on info_upgrades.id_account= p_trx.account_id
 
 --where Month(isnull(upload_date_3,upload_date_2)) = 2
 -- and Month(p_trx.date) = 2

--  ) s

  --group by sShopId,firstName,lastname ,smatricule2


--select   tr.nid as transactionid ,t.sNeiCode as code  ,p.sName as product

--,tr.dInsertion as date  ,s.sName as transactions_statut ,sh.sName as shop_name  ,sh.sShopId as code 
--,tr.nAmount  ,tr.nOperationFee
--from transactions tr
--left join TAIHUB t
--on tr.nid = t.ntransactionsid
--left join Product p 
--on p.nid = tr.nProductId
--join TransactionStatus s
--on s.nId = tr.nTransactionStatusId
--join shop sh on sh.nid = tr.nShopId
--where tr.nProductId = 55
--and 


  --tr.dInsertion > '2021-02-01 00:12:01.757'

--select  nid, sLogin,nAccessTypeId,bActive,bPinControl,bPinControl,spin,nShopId,sAgent,bOTPActive ,nProfileId from Access
--where nProfileId = 6
--select shop.sShopId,shop.nid,shop.bFranchise,city.sName from shop 
--left join City 
--on shop.nCityId =City.nid


--select   Customer.nid,sSex ,dBirthday ,dInsertion,Cities.sName from Customer
--left join Cities
--on Customer.nCitiesId = Cities.nId

--select * from VIEW_RETAILERS
--select  s.sshopid as code , CAST(b.alias AS VARCHAR(MAX))as alias  ,count(transaction_amount)as nbr,convert(date,created_date,103) as created_date,sum(transaction_amount)as transaction_amount,sum(transaction_fees) as transaction_fees  from edp_transactions_recover a 
--left join account_operations_type b
-- on b.id = a.operation_type_id
-- left join shop s
-- on s.nid= a.pos_id
-- where month(created_date) > 1
-- group by    s.sshopid,CAST(b.alias AS VARCHAR(MAX)) , convert(date,created_date,103)
--select    p.nshopid, s.sShopId,nProductId,p.sShopCorrespondenceId,p.bActive  from ProductShopCorrespondence p
--left join shop s
--on s.nid = p.nShopId 








--select   created_by as POS_CODE  ,sBillerId as CREANCIER ,dInsertion as CREATED_DATE ,status_detail as STATUT ,sRecu as REF_CP ,sMTC as REF_CMI
-- ,sBillNumber as REF_CREANCIER
--,nAmount as TOTAL_PAID ,nServiceFees as FEES

-- from Facturiers_Transactions where sBillerId = 1056

--and  is_transaction_cmi = 1  and  status = 'PAID' and dOperation is  not null

--select * from cpstore_orders orders
--left join  cpstore_variants variants
--on variants.id = orders.variant
--left join cpstore_products products
--on products.id = variants.product


--and  convert(date,dInsertion,103) in ( '2021-01-27','2021-01-28')
--select * from ProfilageCustomerLevel
--where dateCreated > '2021-09-01 00:43:57.223'



--select c.sCIN ,c.sLastName ,c.sFirstName ,p.dateCreated ,p.reason from  ProfilageBlackList p
-- inner join  Customer c
 --on p.customerId = c.nid 
--where  p.dateCreated > '2022-01-01 00:58:30.903' and dateend is null


--select City.sName as ville ,s.sShopId as code ,sum(com.nbr) as nbr ,sum(com.commission/100) as commission  ,sum(com.volume/100) as volume ,(ag.nbrr) as nbr_carte  from REPORTING_CARDS c 
--    join (select CARD_ID ,sum(COMMISION_FRAIS_PORTEUR) as commission ,sum(MONTANT_TRANSACTION) as volume
--      , count(*) as nbr  from REPORTING_MONETIQUE 
  --                where  month(DATE_PROCESSING) in (1,2 ,3) and  year(DATE_PROCESSING)= 2021 and code_operation in (05000,07000)  group by CARD_ID ) as com
--on com.CARD_ID = c.card_id
--  join shop s
--on s.nid = c.agency
-- join City 
--on City.nid = s.nCityId

--left join ( select agency ,count(*) as nbrr from REPORTING_CARDS where  month(createddate) in (1,2,3) and year(createddate) = 2021 group by agency) ag
--on ag.agency = c.agency
--where year(c.createddate) = 2021 and month(c.createddate) in (1,2,3)


--group by City.sName,s.sShopId,ag.nbrr
--select shop.nid , shop.sShopId ,City.sName from shop 
--left join City
--on shop.nCityId =  City.nid

--select sShopId,firstName,lastname,count(date) as nbr from (


--select  id_account,isnull(shop3,shop2) as idcode ,s.sShopId,isnull(upload_date_3,upload_date_2) as date

--,isnull(shopkepper_sfirstName3,shopkepper_sfirstName2) as firstName
--,isnull(shopkepper_slastname3,shopkepper_slastname2)as lastname

--,isnull(smatricule3,smatricule2) as smatricule2

--from info_upgrades

  --    join shop s
-- on s.nid = isnull(shop3,shop2)
  --    join (select account_id ,min(createddate) as date from REPORTING_TRANSACTIONS 
          --   group by account_id) p_trx
--on info_upgrades.id_account= p_trx.account_id
 
 --where Month(isnull(upload_date_3,upload_date_2)) = 3
 -- and Month(p_trx.date) = 3 
 -- )d

 -- group by  sShopId,firstName,lastname


--select top 200  title,birth_date ,city,phone  from REPORTING_ACCOUNTS r
 --join client_edp c
--on r.id_num = c.id_num

--where open_date > '2020-11-01' and  title = 'MME' and birth_date is not null  and city is not null and phone is not null 
--ORDER BY NEWID() 

--select  id ,s.sshopid, producttype , convert(date,created_at,103)as date ,amount from[cp_core].[dbo]. balance_audit b
--join [cash_plus].[dbo].[shop] s
--on s.nid = b.pos_id
--where     month(created_at) = 2 and year(created_at) = 2022 and producttype= 26




 --select  rib,lvl,id_num from REPORTING_ACCOUNTS
--select   s.sShopId as code  ,convert(date,created_date,103) as date,count(*) as nbr_trx,sum(converted_points) as converted_points  from  [cp_core].[dbo].FIDE_TRANSACTIONS f
--left join [cash_plus].[dbo].[shop] s
--on s.nid = f.nShopId
--where converted_points &lt;&gt;0
--and month(created_date) = 5 and year(created_date) = 2021
--group by  s.sShopId,convert(date,created_date,103)
--select f.creancier ,p.sBillerId, p.sServiceProvider ,convert(date,created_date,103) as date,count(total_paid)as nbr ,sum(total_paid) as total_paid   from fatourati_transactions f
-- left join (select code_creancier as sBillerId , nom_creancier as sServiceProvider  from creanciers) p 
-- on  p.sBillerId =f.creancier

-- where  month(f.created_date)=2 and   year(f.created_date) = 2022
--and
--f.statut = 'RESPONSE_RECIEVED_OK'
--group by p.sBillerId, p.sServiceProvider ,convert(date,created_date,103),f.creancier



--select  product_type_id, s.sShopId as code  ,convert(date,created_date,103) as date,count(*) as nbr_trx,sum(converted_points) as converted_points,sum(fees_points)as fees_points  from  [cp_core].[dbo].FIDE_TRANSACTIONS f
--left join [cash_plus].[dbo].[shop] s
--on s.nid = f.nShopId
--where converted_points &lt;&gt;0
--and month(created_date) = 5
--and year(created_date) = 2022 and product_type_id = 10 --and cancel is null and rule_id = 30
--group by  product_type_id, s.sShopId,convert(date,created_date,103)

--select sShopId as code ,Action_Request.product_type, Action_Request.product ,Action_Request.date_created as date_annulation
--,nTransactionsId,refunded_amount,nAmount,refundTotalAmount,sNeiCode,cancelDate
--from Action_Request
--left join shop on Action_Request.shop_id = shop.nid
--join CashRefund on   Action_Request.id = CashRefund.action_request_id
--left join  TAOHUB on TAOHUB.nTransactionsId = Action_Request.record_id
--where Action_Request.date_created > '2021-11-01 00:16:58.173'
--select top 500* from  Daily_transactions_extended
--where  productId not in (4060,4059,58,1,19)
--and dinsertion between '2020-01-01 07:06:22.663' and '2021-04-01 07:06:22.663' 

--union 
--select top 500* from  Daily_transactions_extended
--where senderID is not null and  productId  in (1,19)
--and dinsertion between '2020-01-01 07:06:22.663' and '2021-04-01 07:06:22.663' 

--select nShopTypeId,dDate,year(dDate)as year, month(dDate)as mois ,c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise,sum(namount)as volume,sum(nComissionFranchise) as commission  from Comission_MonthlyReport c
--left join shop s
--on s.nid  =c.nshopid
--left join Product p 
--on p.nid = c.nProductIdentifier 
--where year(dDate) = 2022 and month(dDate) = 2
--group by nShopTypeId, dDate,year(dDate),  month(dDate),c.nShopId ,s.sShopId,s.sName ,sProductName  ,bFranchise



--select    t.nid ,t.dInsertion ,s.sShopId ,ta.sNeiCode from transactions t
--left join shop s
--on t.nshopid = s.nid 
--left join TAIHUB ta
--on ta.nTransactionsId = t.nid 
--where t.nProductId = 59 and t.nTransactionStatusId = 8
--order by t.nid desc


--select  s.sshopid ,product_id ,complement_id,created_date,amount ,fees ,date_depart,Transport_Transactions.shop_id,ticket_ids,retailer_code from Transport_Transactions
-- left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = retailer_id
--left join shop s 
--on s.nid = Transport_Transactions.shop_id
 
--where year(created_date) = 2021 and month(created_date) = 12


--select    p.nshopid, s.sShopId,nProductId,p.sShopCorrespondenceId,p.bActive  from ProductShopCorrespondence p
--left join shop s
--on s.nid = p.nShopId 
--where  nProductId =5 

--select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (


  -- select mois ,agent,type_product ,realisation,objectif ,tro
--,    case when  tro > 1 then 1
	--     else tro
      --   end as pl_tro  from tro_sales_general_copy1 ar
   --where id =5  and type_product not in ('change') )z
--join shop s 
--on s.sShopId = z.agent 

--join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
  --     where month(dInsertion) = 5 and year(dinsertion) =2021  and ShopKeeper_name is not null and type_product not in ('change')
    --    group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
--on c.sShopId = agent

--where bFranchise = 0    

--group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id

--having   avg(pl_tro) >='0.78' and commission > 70 
--order by commission desc
--SELECT tn.nId as id,tn.nTransactionCashInId as cpms_id ,'null' as   document_token ,tn.insertionDate as created_at 
--,tr.nShopId as shop_id ,tr.nCompanyId as company_id ,tn.dPaid as paid_date , cl.sScandocToken as scandoc_token
--,sh.sShopId cashout_shop, cl.sCIN as real_receiver_cin, trOut.sDocumentName, ea.bNotify,bpaid ,sPartnerTransactionId

-- FROM TANHUB tn
-- inner join Transactions tr on tr.nid = tn.nTransactionCashinId
-- inner join Transactions trOut on trOut.nid = tn.nTransactionCashOutId
--  inner join EShopAccess ea on ea.nShopId = tr.nShopId
-- inner join Shop sh on trOut.nShopId = sh.nid
-- inner join Customer cl on cl.nid = trOut.nReceiverId
-- inner join eShopTransactionTrace  on eShopTransactionTrace.nTransactionId =  tr.nId
  
-- where

-- trOut.sDocumentName is  null and
--  year(tn.dInsertion) > 2020 
--select  count(*) as nbr, Transactions.nComListId, ComListProd.nFrom as 'from', ComListProd.nTo as 'to', 
--ComListProd.nFlat flat, ComListProd.nCom as 'percent' , sum(Transactions.nAmount) as volume , month(Transactions.dInsertion) month , year(Transactions.dInsertion) year,sh.sShopId,sh.bFranchise
--from Transactions
--LEFT join ComListProd on  ComListProd.nComListId = Transactions.nComListId 
--	and Transactions.nAmount > ComListProd.nFrom and Transactions.nAmount &lt;= ComListProd.nTo 
--	left join shop sh
--	on sh.nid =Transactions.nShopId
--where  dInsertion is not NULL
--and nOperationFee = 28 and Transactions.nComListId = 27
-- and nAmount &lt;= 50
--and Transactions.nProductId = 1 and Transactions.dInsertion > '2019-12-31'
--group by  Transactions.nComListId, ComListProd.nFrom, ComListProd.nTo, ComListProd.nFlat, ComListProd.nCom, 
--month(Transactions.dInsertion), year(Transactions.dInsertion),sh.sShopId,sh.bFranchise
--order by count(*) desc

--select   tr.nid as transactionid ,t.sNeiCode as code_trx  ,p.sName as product

--,tr.dInsertion as date  ,s.sName as transactions_statut ,sh.sName as shop_name  ,sh.sShopId as code 
--,tr.nAmount  ,tr.nOperationFee
--from transactions tr
--left join TAOHUB t
--on tr.nid = t.ntransactionsid
--left join Product p 
--on p.nid = tr.nProductId
--join TransactionStatus s
--on s.nId = tr.nTransactionStatusId
--join shop sh on sh.nid = tr.nShopId
--where tr.nProductId in (4059,4060,58)
--and 

--tr.dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-40),' ','00:00:00.000') as datetime)
--order by tr.dInsertion asc

--select  Customer.nid *11 as id   ,left(Customer.sFirstName,3)as sFirstName ,left(Customer.sLastName,3) as sLastName
--,right(phone,3) as phone


 --from Transactions
--left join Customer
--on Transactions.nReceiverId = Customer.nid
--left join [CP_CORE].[dbo].[KYC_DATA] cc
--on cc.client_id = Customer.nid 

--where Transactions.dInsertion between '2021-07-10 00:29:58.827' and '2021-07-19 23:29:58.827'
--and nProductId = 5 and   phone is not null  and nTransactionStatusId = 8


--select    distinct  f.nid  ,convert(date,f.dInsertion,103)as date,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
--  f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) as code
--from Facturiers_Transactions f
-- join Shop s
--on f.nShopId = s.nid
--left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--where   status = 'PAID' and dOperation is  not null
--and 
--f.sBillerId = 5555 and month(f.dInsertion) = 12 and year(f.dinsertion) = 2021

--select shop.sShopId, shop.nid,City.sName from shop 
--left join City 
--on shop.nCityId = city.nId
--select    p.nshopid, s.sShopId,nProductId,p.sShopCorrespondenceId,p.bActive  from ProductShopCorrespondence p
--left join shop s
--on s.nid = p.nShopId 
--where nProductId =5


--select * from Marchand_Transaction
--where convert(date,created_date ,103) in ('2021-07-12','2021-07-13') 

--select  nid,sName,dInsertion,dUpdated,sCodeMarchand,sCodePartner,flat,pourcent,min_value,max_value,nShopId
--,nCompanyId from Marchand_liste
  
--select  * from EDP_COMFR
--where month(created_date) = 7 and year(created_date) = 2021


--select * from transactions t
--left join Partner_X p
--on p.nTransactionId = t.nid

--where nProductId =  4063 and nTransactionStatusId = 8


--select  a.id,createddate,credit,debit,fees,amount_net,canal,shop_id,account_id,alias,s.sshopid  as code_agence from REPORTING_TRANSACTIONS a
--left join account_operations_type b
--  on b.id = a.operation_type_id
--left join shop s
--on s.nid = shop_id
 --where convert(date,createddate,103) = convert(date,GETDATE()-1,103)   and a.id &lt;&gt;0

--select  companyId ,companysName ,max(dinsertion) as maxdate  from Daily_transactions_extended
--group by  companyId ,companysName

--select REPORTING_TRANSACTIONS.id as id_trx , REPORTING_TRANSACTIONS.createddate ,amount_net, account_id *11 as account_id ,




--left(REPORTING_ACCOUNTS.id_num,4) as cin , left(first_name,4) as first_name ,left(last_name,4)as last_name , right(phone,4) as phone  from REPORTING_TRANSACTIONS
--left join  REPORTING_ACCOUNTS 

--on REPORTING_TRANSACTIONS.account_id = REPORTING_ACCOUNTS.id
--left join client_edp
--on client_edp.id_num = REPORTING_ACCOUNTS.id_num

--where operation_type_id= 18 and JSON_VALUE(cast(complement as nvarchar(max)),'$.biller_id') = 1024












--select    account_id ,REPORTING_ACCOUNTS.id_num as cin ,first_name,last_name,phone , count(*) as nbr from REPORTING_TRANSACTIONS
--left join  REPORTING_ACCOUNTS 

--on REPORTING_TRANSACTIONS.account_id = REPORTING_ACCOUNTS.id
--left join client_edp
--on client_edp.id_num = REPORTING_ACCOUNTS.id_num

--where operation_type_id= 18 and JSON_VALUE(cast(complement as nvarchar(max)),'$.biller_id') = 1024
--and  convert(date,createddate,103) between '2021-08-16' and  '2021-08-23' 
--and REPORTING_ACCOUNTS.id_num is not  null

--group by 
--  account_id ,REPORTING_ACCOUNTS.id_num  ,first_name,last_name,phone

--  order by nbr desc

--select shop.sshopid as code , Product.sName as product, convert(date,dInsertion,103) as date  , count(nAmount) , sum(nAmount) as volume  from transactions 
--left join Product 
--on Product.nid = transactions.nProductId
--left join shop 
--on shop.nid = nShopId
--where dInsertion  > '2021-06-01 00:29:58.827' and nTransactionStatusId = 8
--group by  shop.sshopid,convert(date,dInsertion,103),Product.sName



--select      isnull(retailer_code, ss.sShopId ) as sShopId,isnull(retailer_code, ss.Sname ) as agence,  p.sServiceProvider as Product, convert(date,f.dInsertion,103)as date,f.status,SUM(nAmount)as volume,COUNT(nAmount)as  nbr 
--,CASE WHEN  f.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type,nbr_Creances
--from Facturiers_Transactions f

--          join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
--          join shop ss
--on ss.nid = f.nShopId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--where is_transaction_cmi = 1 
--and f.dInsertion >=  '2021-06-01 00:29:58.827'   and f.dInsertion &lt; '2021-08-01 00:29:58.827'and status = 'PAID' and dOperation is  not null
--group by    isnull(retailer_code, ss.sShopId )  ,convert(date,f.dInsertion,103) , p.sServiceProvider,f.status,f.nDetaillant
--, isnull(retailer_code, ss.Sname ),nbr_Creances



--select    isnull(v.retailer_code, ss.sShopId)as sShopId ,
--isnull(v.retailer_code, ss.sname)as agence,  'rt' as Product ,convert(date,r.dRecharge,103)as date,sStatus,
--sum(r.namount) as volume,count(r.namount)as nbr
--,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type,'' as nbr_Creances
--from Recharge r
--join shop ss 
--on ss.nid = r.nShopId
--left join VIEW_RETAILERS v
--on v.ShopKeeper_id = r.nDetaillant
--where  r.dRecharge >='2021-06-01 00:29:58.827'
--group by isnull(v.retailer_code, ss.sShopId),isnull(v.retailer_code, ss.sname),convert(date,r.dRecharge,103)
--,sStatus,r.nDetaillant


--select id as account_id, open_date ,lvl  from REPORTING_ACCOUNTS 
--where id not in (select distinct(account_id) from REPORTING_TRANSACTIONS)

--select  code, convert(date,bordereau_date,103) as date, bordereau_type ,count(*) as nbr, sum(contre_valeur) as volume from transactions_change
--where  convert(date,bordereau_date,103) > '2021-09-01 00:29:58.827'
--group by  code ,bordereau_type,convert(date,bordereau_date,103)


--select  cu.sFirstName,cu.sLastName,cu.sCIN, tr.nid as transactionid ,t.sNeiCode as code  ,p.sName as product

--,tr.dInsertion as date  ,s.sName as transactions_statut ,sh.sName as shop_name  ,sh.sShopId as code 
--,tr.nAmount  ,tr.nOperationFee,x.sTrackingNumber,codeOfficeChange
--from transactions tr


--left join TAOHUB t on tr.nid = t.ntransactionsid 
--left join Product p on p.nid = tr.nProductId
--join TransactionStatus s on s.nId = tr.nTransactionStatusId
--join shop sh on sh.nid = tr.nShopId
--join Customer cu  on cu.nid = t.nSenderId
--left join Partner_X x on x.nTransactionId = tr.nId

--where tr.nProductId in (58,4060,4059) 
--and tr.dInsertion  > '2021-04-01 00:29:58.827'


--select lvl,bFranchise,count(*)as nbr_compte, count(ap.account_id)as Nombre_M_Wallets_y_adossés     ,sum(so.balance_available) as Solde_comptes_paiement  from REPORTING_ACCOUNTS r
-- left join shop 
--on shop.nid= r.created_by

--left join (select account_id ,balance_available from account_principal_cloture
--where convert(date,cloture_date,103) = '2021-06-30')so
--on so.account_id =r.id
--left join (select distinct(account_id) from REPORTING_TRANSACTIONS  where  canal = 'Mobile')ap
--on ap.account_id= r.id

--where open_date between '2020-08-01 00:21:01.860' and '2021-06-30 23:55:01.860' 
--group by  lvl,bFranchise

--select   tr.nid as transactionid ,t.sNeiCode as code  ,p.sName as product

--,tr.dInsertion as date  ,s.sName as transactions_statut ,sh.sName as shop_name  ,sh.sShopId as code 
--,tr.nAmount  ,tr.nOperationFee
--from transactions tr
--left join TAOHUB t
--on tr.nid = t.ntransactionsid
--left join Product p 
--on p.nid = tr.nProductId
--join TransactionStatus s
--on s.nId = tr.nTransactionStatusId
--join shop sh on sh.nid = tr.nShopId
--where tr.nProductId in (4060,58,4059)
--and 

--tr.dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-37),' ','00:00:00.000') as datetime) and 
--tr.dInsertion &lt; cast(CONCAT(CONVERT(DATE,GETDATE()-8),' ','23:59:59.000') as datetime) 
--order by tr.dInsertion desc
--select  code, convert(date,bordereau_date,103) as date, bordereau_type ,count(*) as nbr, sum(contre_valeur) as volume from transactions_change
--where  convert(date,bordereau_date,103) > '2021-09-25 00:29:58.827'
--group by  code ,bordereau_type,convert(date,bordereau_date,103)
--order by  convert(date,bordereau_date,103) asc</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>N</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\Versement  2023 mois 7 et 8 .txt</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>Y</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format>yyyy/MM/dd</date_time_format>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>bRejected</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nMontantAVerser</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>18</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dInsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dDate</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>refId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>bManual</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCompanyName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCompany</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bActive</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bVersed</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dVersed</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nMontantVersed</name>
        <type>BigNumber</type>
        <format>######0.0###################;-######0.0###################</format>
        <currency />
        <decimal>.</decimal>
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>18</length>
        <precision>2</precision>
      </field>
      <field>
        <name>bValidated</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sInitiateur</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sDestinataire</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sVersementType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sInitiateurShop</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sDestinationShop</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dValidated</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dRejected</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sLogin</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sRejectedReason</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>N</create_parent_folder>
    <file>
      <name>C:\Partage\compta\rapport mensuel\Facturiers_Transactions_groupby</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>date</name>
        <type>Date</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nAmount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nServiceFees</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>sServiceProvider</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>status</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nbr_Creances</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>code</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nbr</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>volume</name>
        <type>BigNumber</type>
        <format>######0.0###################;-######0.0###################</format>
        <currency />
        <decimal>.</decimal>
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>38</length>
        <precision>2</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>576</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\55445 1397 a 07122023</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>nid</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dInsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nProductId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nAmount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nOperationFee</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nTransactionStatusId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nShopId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sShopId</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverGsm</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>json</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCIN</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1372</xloc>
      <yloc>650</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\Facturiers_Transactions as staus</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>status</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>date</name>
        <type>Date</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nbr</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>volume</name>
        <type>BigNumber</type>
        <format>######0.0###################;-######0.0###################</format>
        <currency />
        <decimal>.</decimal>
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>38</length>
        <precision>2</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>732</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\shopkeeper_realisationsfr3</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>Type_product</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>product</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sShopId</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>annee</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>mois</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopkeeper_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopkeeper_name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>total_trx</name>
        <type>BigNumber</type>
        <format>######0.0###################;-######0.0###################</format>
        <currency />
        <decimal>.</decimal>
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>38</length>
        <precision>6</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1456</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2 2 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\shop </name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>code</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>type_agence</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1495</xloc>
      <yloc>917</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2 2 2 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\Versement 082024</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>bRejected</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nMontantAVerser</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>18</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dInsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dDate</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>refId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>bManual</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCompanyName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCompany</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bActive</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bVersed</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dVersed</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nMontantVersed</name>
        <type>BigNumber</type>
        <format>######0.0###################;-######0.0###################</format>
        <currency />
        <decimal>.</decimal>
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>18</length>
        <precision>2</precision>
      </field>
      <field>
        <name>bValidated</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sInitiateur</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sDestinataire</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sVersementType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sInitiateurShop</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sDestinationShop</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dValidated</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dRejected</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sLogin</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sRejectedReason</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1507</xloc>
      <yloc>1023</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2 3</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\UN_SanctionsLog_transfert a</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>transactionsnId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sNenCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>product</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>productId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>productType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>productTypeId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dinsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receivername</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>idReceiver</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>receiverID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverFirstname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverLastname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverPhone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverIdEndValidity</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>idSender</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>senderID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderFirstname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderLastname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderPhone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderIdEndValidity</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>transactionType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>transactionStatussName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>transactionStatus</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>companysName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>companyId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sShopId</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nShopId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopkeepersname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>shopkeeperId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopkeeperMatricule</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nAmount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nOperationFee</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nServiceFee</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>2</precision>
      </field>
      <field>
        <name>senderMTOAdress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOcity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOCurrency</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>255</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOLastName2</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOMiddleInitial</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOPhone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOFax</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOEmail</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOIDType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOBirthPlace</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTONationality</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOJob</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOGender</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>ReceiverCity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverAdress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>cityOutName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderTitle</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverTitle</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>date_in</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>client</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>maxdate</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dLog</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>entity_id</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>name</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>passport</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nShopId_1</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>idAccess</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>info</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>idTransaction</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>country</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>source</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>status</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>customer_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>controledBy</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dateControle</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nId_1</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dInsertion_1</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nMentorAccessId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCIN</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCINFile</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dBirthday</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sAddress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sFidelity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPostCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSex</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sOccupation</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nCustomerStatusId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nCorrect</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>bNational</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nCountryId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nCitiesId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sScandocToken</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dEndValidity</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdNumber</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdState</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sGsm</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sEmail</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>code</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>iso2</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>iso3</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nom_en_gb</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nom_fr_fr</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1621</xloc>
      <yloc>532</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2 3 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\UN_SanctionsLog_client_min_trx_EDP V2</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>account_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>mindatte</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>createddate</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>debit</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>credit</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>fees</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>amount_net</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>canal</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>6</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>shop_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>account_id_1</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>operation_type_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>transaction_sign</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>transaction_status</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>libelle</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>billing_amount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>complement</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>authorisation_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>network_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>transaction_amount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>transaction_fees</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>start_balance</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>end_balance</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>2</precision>
      </field>
      <field>
        <name>wallet_account_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>other_wallet_account_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>wallet_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>other_account_id</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1936</xloc>
      <yloc>726</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 2 2 2 3 2 2</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\transactions effectuées avec des passeport uniquement</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>transactionsnId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sNenCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>product</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>productId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>productType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>productTypeId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dinsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receivername</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>idReceiver</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>receiverID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverFirstname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverLastname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverPhone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverIdEndValidity</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>idSender</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>senderID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderFirstname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderLastname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderPhone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderIdEndValidity</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>transactionType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>transactionStatussName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>transactionStatus</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>companysName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>companyId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sShopId</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nShopId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopkeepersname</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>shopkeeperId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>shopkeeperMatricule</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nAmount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nOperationFee</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>2</precision>
      </field>
      <field>
        <name>nServiceFee</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>8</length>
        <precision>2</precision>
      </field>
      <field>
        <name>senderMTOAdress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOcity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOCurrency</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTORate</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOLastName2</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOMiddleInitial</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOPhone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOFax</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOEmail</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOIDType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOBirthPlace</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTONationality</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOJob</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderMTOGender</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>ReceiverCity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverAdress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>cityOutName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>senderTitle</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>receiverTitle</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>date_in</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dInsertion_1</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nMentorAccessId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCIN</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCINFile</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dBirthday</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sAddress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sFidelity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPostCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSex</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sOccupation</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nCustomerStatusId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nCorrect</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>bNational</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nCountryId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nCitiesId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sScandocToken</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dEndValidity</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdNumber</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdState</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sPhotoIdCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sGsm</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sEmail</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1953</xloc>
      <yloc>852</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 3</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\nPartnerId 32 </name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>nId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dInsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sTrxCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sInternalCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>30</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dTrxDate</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSendingCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceivingCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sISOCurrencyCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nAmountCurrency</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nCommissionCurrency</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nAmountMAD</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nExchangeRate</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>15</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderTelephone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderAddress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderFax</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderCity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderZipCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderEmail</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderIDType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderSex</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dSenderBirthDay</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverFirstName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverLastName</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverIDType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverID</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverTelephone</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverFax</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverAddress</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverZipCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverEmail</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReceiverSex</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bCancelled</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dCancelled</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bPaid</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dPaid</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bUpdated</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dUpdated</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nPartnerId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nTAIHUBId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nProductPartnerId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>nTransactionId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>sSenderBirthCity</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSenderBirthCountry</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sReasonTransfer</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sType</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>5</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sCodeBank</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>5</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sRib</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sWalletCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>bEchec</name>
        <type>Boolean</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dEchec</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sEchecMsg</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sRequestId</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sEcheCode</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nRealFxRate</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>4</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>240</xloc>
      <yloc>704</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier 4</name>
    <type>TextFileOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <separator>;</separator>
    <enclosure>"</enclosure>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>Y</header>
    <footer>N</footer>
    <format>DOS</format>
    <compression>None</compression>
    <encoding />
    <endedLine />
    <fileNameInField>N</fileNameInField>
    <fileNameField />
    <create_parent_folder>N</create_parent_folder>
    <file>
      <name>C:\Users\Administrator\Desktop\tayssir</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>csv</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>Y</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format>yyyy/MM/dd</date_time_format>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>nid</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>dBirthday</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>sSex</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>Agence</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>ville</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nReceiverId</name>
        <type>Integer</type>
        <format>####0;-####0</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>0</precision>
      </field>
      <field>
        <name>date</name>
        <type>Date</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>dInsertion</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>nAmount</name>
        <type>Number</type>
        <format>####0.0#########;-####0.0#########</format>
        <currency />
        <decimal>.</decimal>
        <group>,</group>
        <nullif />
        <trim_type>none</trim_type>
        <length>10</length>
        <precision>2</precision>
      </field>
      <field>
        <name>sShopId</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>type_agence</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>9</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>rib</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>businessDay</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>Etablissement</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>19</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>rib_1</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>datePaymentTransaction</name>
        <type>Timestamp</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>3</length>
        <precision>-1</precision>
      </field>
      <field>
        <name>businessDay_1</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <nullif />
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>557</xloc>
      <yloc>1004</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Alimentation fichier Excel (xlsx) 2 2</name>
    <type>TypeExitExcelWriterStep</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <header>Y</header>
    <footer>N</footer>
    <makeSheetActive>Y</makeSheetActive>
    <rowWritingMethod>overwrite</rowWritingMethod>
    <startingCell>A1</startingCell>
    <appendOmitHeader>N</appendOmitHeader>
    <appendOffset>0</appendOffset>
    <appendEmpty>0</appendEmpty>
    <rowWritingMethod>overwrite</rowWritingMethod>
    <forceFormulaRecalculation>N</forceFormulaRecalculation>
    <leaveExistingStylesUnchanged>N</leaveExistingStylesUnchanged>
    <appendLines>N</appendLines>
    <add_to_result_filenames>Y</add_to_result_filenames>
    <file>
      <name>C:\Users\Administrator\Desktop\ nPartnerId 32 </name>
      <extention>xlsx</extention>
      <do_not_open_newfile_init>N</do_not_open_newfile_init>
      <split>N</split>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format />
      <sheetname>Sheet1</sheetname>
      <autosizecolums>N</autosizecolums>
      <stream_data>N</stream_data>
      <protect_sheet>N</protect_sheet>
      <password>Encrypted </password>
      <protected_by />
      <splitevery>0</splitevery>
      <if_file_exists>new</if_file_exists>
      <if_sheet_exists>new</if_sheet_exists>
    </file>
    <template>
      <enabled>N</enabled>
      <sheet_enabled>N</sheet_enabled>
      <filename>template.xls</filename>
      <sheetname />
      <hidden>N</hidden>
    </template>
    <fields>
      <field>
        <name>nId</name>
        <type>Integer</type>
        <format />
        <title>nId</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dInsertion</name>
        <type>Date</type>
        <format />
        <title>dInsertion</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sTrxCode</name>
        <type>String</type>
        <format />
        <title>sTrxCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sInternalCode</name>
        <type>String</type>
        <format />
        <title>sInternalCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dTrxDate</name>
        <type>Timestamp</type>
        <format />
        <title>dTrxDate</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSendingCountry</name>
        <type>String</type>
        <format />
        <title>sSendingCountry</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceivingCountry</name>
        <type>String</type>
        <format />
        <title>sReceivingCountry</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sISOCurrencyCode</name>
        <type>String</type>
        <format />
        <title>sISOCurrencyCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nAmountCurrency</name>
        <type>Number</type>
        <format>000000000000000</format>
        <title>nAmountCurrency</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nCommissionCurrency</name>
        <type>Number</type>
        <format>000000000000000</format>
        <title>nCommissionCurrency</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nAmountMAD</name>
        <type>Number</type>
        <format>000000000000000</format>
        <title>nAmountMAD</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nExchangeRate</name>
        <type>Number</type>
        <format>000000000000000</format>
        <title>nExchangeRate</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderFirstName</name>
        <type>String</type>
        <format />
        <title>sSenderFirstName</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderLastName</name>
        <type>String</type>
        <format />
        <title>sSenderLastName</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderTelephone</name>
        <type>String</type>
        <format />
        <title>sSenderTelephone</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderAddress</name>
        <type>String</type>
        <format />
        <title>sSenderAddress</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderFax</name>
        <type>String</type>
        <format />
        <title>sSenderFax</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderCity</name>
        <type>String</type>
        <format />
        <title>sSenderCity</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderZipCode</name>
        <type>String</type>
        <format />
        <title>sSenderZipCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderCountry</name>
        <type>String</type>
        <format />
        <title>sSenderCountry</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderEmail</name>
        <type>String</type>
        <format />
        <title>sSenderEmail</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderIDType</name>
        <type>String</type>
        <format />
        <title>sSenderIDType</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderID</name>
        <type>String</type>
        <format />
        <title>sSenderID</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderSex</name>
        <type>String</type>
        <format />
        <title>sSenderSex</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dSenderBirthDay</name>
        <type>Timestamp</type>
        <format />
        <title>dSenderBirthDay</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverFirstName</name>
        <type>String</type>
        <format />
        <title>sReceiverFirstName</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverLastName</name>
        <type>String</type>
        <format />
        <title>sReceiverLastName</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverIDType</name>
        <type>String</type>
        <format />
        <title>sReceiverIDType</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverID</name>
        <type>String</type>
        <format />
        <title>sReceiverID</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverTelephone</name>
        <type>String</type>
        <format />
        <title>sReceiverTelephone</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverFax</name>
        <type>String</type>
        <format />
        <title>sReceiverFax</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverAddress</name>
        <type>String</type>
        <format />
        <title>sReceiverAddress</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverZipCode</name>
        <type>String</type>
        <format />
        <title>sReceiverZipCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverCountry</name>
        <type>String</type>
        <format />
        <title>sReceiverCountry</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverEmail</name>
        <type>String</type>
        <format />
        <title>sReceiverEmail</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReceiverSex</name>
        <type>String</type>
        <format />
        <title>sReceiverSex</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>bCancelled</name>
        <type>Boolean</type>
        <format />
        <title>bCancelled</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dCancelled</name>
        <type>Timestamp</type>
        <format />
        <title>dCancelled</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>bPaid</name>
        <type>Boolean</type>
        <format />
        <title>bPaid</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dPaid</name>
        <type>Timestamp</type>
        <format />
        <title>dPaid</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>bUpdated</name>
        <type>Boolean</type>
        <format />
        <title>bUpdated</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dUpdated</name>
        <type>Timestamp</type>
        <format />
        <title>dUpdated</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nPartnerId</name>
        <type>Integer</type>
        <format />
        <title>nPartnerId</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nTAIHUBId</name>
        <type>Integer</type>
        <format />
        <title>nTAIHUBId</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nProductPartnerId</name>
        <type>Integer</type>
        <format />
        <title>nProductPartnerId</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nTransactionId</name>
        <type>Integer</type>
        <format />
        <title>nTransactionId</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderBirthCity</name>
        <type>String</type>
        <format />
        <title>sSenderBirthCity</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sSenderBirthCountry</name>
        <type>String</type>
        <format />
        <title>sSenderBirthCountry</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sReasonTransfer</name>
        <type>String</type>
        <format />
        <title>sReasonTransfer</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sType</name>
        <type>String</type>
        <format />
        <title>sType</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sCodeBank</name>
        <type>String</type>
        <format />
        <title>sCodeBank</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sRib</name>
        <type>String</type>
        <format />
        <title>sRib</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sWalletCode</name>
        <type>String</type>
        <format />
        <title>sWalletCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>bEchec</name>
        <type>Boolean</type>
        <format />
        <title>bEchec</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>dEchec</name>
        <type>Timestamp</type>
        <format />
        <title>dEchec</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sEchecMsg</name>
        <type>String</type>
        <format />
        <title>sEchecMsg</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sRequestId</name>
        <type>String</type>
        <format />
        <title>sRequestId</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>sEcheCode</name>
        <type>String</type>
        <format />
        <title>sEcheCode</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
      <field>
        <name>nRealFxRate</name>
        <type>Number</type>
        <format>000000.0000</format>
        <title>nRealFxRate</title>
        <titleStyleCell />
        <styleCell />
        <commentField />
        <commentAuthorField />
        <formula>N</formula>
        <hyperlinkField />
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>448</xloc>
      <yloc>880</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Altération structure flux 3</name>
    <type>SelectValues</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <fields>
      <field>
        <name>code</name>
      </field>
      <field>
        <name>iso2</name>
      </field>
      <field>
        <name>iso3</name>
      </field>
      <field>
        <name>nom_en_gb</name>
      </field>
      <field>
        <name>nom_fr_fr</name>
      </field>
      <field>
        <name>status</name>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>128</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Extraction depuis fichier MS Excel 3</name>
    <type>ExcelInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <header>Y</header>
    <noempty>Y</noempty>
    <stoponempty>N</stoponempty>
    <filefield />
    <sheetfield />
    <sheetrownumfield />
    <rownumfield />
    <sheetfield />
    <filefield />
    <limit>0</limit>
    <encoding />
    <add_to_result_filenames>Y</add_to_result_filenames>
    <accept_filenames>N</accept_filenames>
    <accept_field />
    <accept_stepname />
    <file>
      <name>C:\Users\Administrator\Desktop\Country bkam.xlsx</name>
      <filemask />
      <exclude_filemask />
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>code</name>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
        <format />
        <currency />
        <decimal />
        <group />
      </field>
      <field>
        <name>iso2</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
        <format />
        <currency />
        <decimal />
        <group />
      </field>
      <field>
        <name>iso3</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
        <format />
        <currency />
        <decimal />
        <group />
      </field>
      <field>
        <name>nom_en_gb</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
        <format />
        <currency />
        <decimal />
        <group />
      </field>
      <field>
        <name>nom_fr_fr</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
        <format />
        <currency />
        <decimal />
        <group />
      </field>
      <field>
        <name>status</name>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
        <format />
        <currency />
        <decimal />
        <group />
      </field>
    </fields>
    <sheets>
      <sheet>
        <name>Country.txt</name>
        <startrow>0</startrow>
        <startcol>0</startcol>
      </sheet>
    </sheets>
    <strict_types>N</strict_types>
    <error_ignored>N</error_ignored>
    <error_line_skipped>N</error_line_skipped>
    <bad_line_files_destination_directory />
    <bad_line_files_extension>warning</bad_line_files_extension>
    <error_line_files_destination_directory />
    <error_line_files_extension>error</error_line_files_extension>
    <line_number_files_destination_directory />
    <line_number_files_extension>line</line_number_files_extension>
    <shortFileFieldName />
    <pathFieldName />
    <hiddenFieldName />
    <lastModificationTimeFieldName />
    <uriNameFieldName />
    <rootUriNameFieldName />
    <extensionFieldName />
    <sizeFieldName />
    <spreadsheet_type>POI</spreadsheet_type>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>48</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Company_balance_history</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>companyId</column_name>
        <stream_name>companyId</stream_name>
      </field>
      <field>
        <column_name>initial_balance</column_name>
        <stream_name>initial_balance</stream_name>
      </field>
      <field>
        <column_name>new_balance</column_name>
        <stream_name>new_balance</stream_name>
      </field>
      <field>
        <column_name>date_of_change</column_name>
        <stream_name>date_of_change</stream_name>
      </field>
      <field>
        <column_name>query</column_name>
        <stream_name>query</stream_name>
      </field>
      <field>
        <column_name>dbuser</column_name>
        <stream_name>dbuser</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>704</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>InterPartnerTransactions</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>sTrxCode</column_name>
        <stream_name>sTrxCode</stream_name>
      </field>
      <field>
        <column_name>sInternalCode</column_name>
        <stream_name>sInternalCode</stream_name>
      </field>
      <field>
        <column_name>dTrxDate</column_name>
        <stream_name>dTrxDate</stream_name>
      </field>
      <field>
        <column_name>sSendingCountry</column_name>
        <stream_name>sSendingCountry</stream_name>
      </field>
      <field>
        <column_name>sReceivingCountry</column_name>
        <stream_name>sReceivingCountry</stream_name>
      </field>
      <field>
        <column_name>sISOCurrencyCode</column_name>
        <stream_name>sISOCurrencyCode</stream_name>
      </field>
      <field>
        <column_name>nAmountCurrency</column_name>
        <stream_name>nAmountCurrency</stream_name>
      </field>
      <field>
        <column_name>nCommissionCurrency</column_name>
        <stream_name>nCommissionCurrency</stream_name>
      </field>
      <field>
        <column_name>nAmountMAD</column_name>
        <stream_name>nAmountMAD</stream_name>
      </field>
      <field>
        <column_name>nExchangeRate</column_name>
        <stream_name>nExchangeRate</stream_name>
      </field>
      <field>
        <column_name>sSenderFirstName</column_name>
        <stream_name>sSenderFirstName</stream_name>
      </field>
      <field>
        <column_name>sSenderLastName</column_name>
        <stream_name>sSenderLastName</stream_name>
      </field>
      <field>
        <column_name>sSenderTelephone</column_name>
        <stream_name>sSenderTelephone</stream_name>
      </field>
      <field>
        <column_name>sSenderAddress</column_name>
        <stream_name>sSenderAddress</stream_name>
      </field>
      <field>
        <column_name>sSenderFax</column_name>
        <stream_name>sSenderFax</stream_name>
      </field>
      <field>
        <column_name>sSenderCity</column_name>
        <stream_name>sSenderCity</stream_name>
      </field>
      <field>
        <column_name>sSenderZipCode</column_name>
        <stream_name>sSenderZipCode</stream_name>
      </field>
      <field>
        <column_name>sSenderCountry</column_name>
        <stream_name>sSenderCountry</stream_name>
      </field>
      <field>
        <column_name>sSenderEmail</column_name>
        <stream_name>sSenderEmail</stream_name>
      </field>
      <field>
        <column_name>sSenderIDType</column_name>
        <stream_name>sSenderIDType</stream_name>
      </field>
      <field>
        <column_name>sSenderID</column_name>
        <stream_name>sSenderID</stream_name>
      </field>
      <field>
        <column_name>sSenderSex</column_name>
        <stream_name>sSenderSex</stream_name>
      </field>
      <field>
        <column_name>dSenderBirthDay</column_name>
        <stream_name>dSenderBirthDay</stream_name>
      </field>
      <field>
        <column_name>sReceiverFirstName</column_name>
        <stream_name>sReceiverFirstName</stream_name>
      </field>
      <field>
        <column_name>sReceiverLastName</column_name>
        <stream_name>sReceiverLastName</stream_name>
      </field>
      <field>
        <column_name>sReceiverIDType</column_name>
        <stream_name>sReceiverIDType</stream_name>
      </field>
      <field>
        <column_name>sReceiverID</column_name>
        <stream_name>sReceiverID</stream_name>
      </field>
      <field>
        <column_name>sReceiverTelephone</column_name>
        <stream_name>sReceiverTelephone</stream_name>
      </field>
      <field>
        <column_name>sReceiverFax</column_name>
        <stream_name>sReceiverFax</stream_name>
      </field>
      <field>
        <column_name>sReceiverAddress</column_name>
        <stream_name>sReceiverAddress</stream_name>
      </field>
      <field>
        <column_name>sReceiverZipCode</column_name>
        <stream_name>sReceiverZipCode</stream_name>
      </field>
      <field>
        <column_name>sReceiverCountry</column_name>
        <stream_name>sReceiverCountry</stream_name>
      </field>
      <field>
        <column_name>sReceiverEmail</column_name>
        <stream_name>sReceiverEmail</stream_name>
      </field>
      <field>
        <column_name>sReceiverSex</column_name>
        <stream_name>sReceiverSex</stream_name>
      </field>
      <field>
        <column_name>bCancelled</column_name>
        <stream_name>bCancelled</stream_name>
      </field>
      <field>
        <column_name>dCancelled</column_name>
        <stream_name>dCancelled</stream_name>
      </field>
      <field>
        <column_name>bPaid</column_name>
        <stream_name>bPaid</stream_name>
      </field>
      <field>
        <column_name>dPaid</column_name>
        <stream_name>dPaid</stream_name>
      </field>
      <field>
        <column_name>bUpdated</column_name>
        <stream_name>bUpdated</stream_name>
      </field>
      <field>
        <column_name>dUpdated</column_name>
        <stream_name>dUpdated</stream_name>
      </field>
      <field>
        <column_name>nPartnerId</column_name>
        <stream_name>nPartnerId</stream_name>
      </field>
      <field>
        <column_name>nTAIHUBId</column_name>
        <stream_name>nTAIHUBId</stream_name>
      </field>
      <field>
        <column_name>nProductPartnerId</column_name>
        <stream_name>nProductPartnerId</stream_name>
      </field>
      <field>
        <column_name>nTransactionId</column_name>
        <stream_name>nTransactionId</stream_name>
      </field>
      <field>
        <column_name>sSenderBirthCity</column_name>
        <stream_name>sSenderBirthCity</stream_name>
      </field>
      <field>
        <column_name>sSenderBirthCountry</column_name>
        <stream_name>sSenderBirthCountry</stream_name>
      </field>
      <field>
        <column_name>sReasonTransfer</column_name>
        <stream_name>sReasonTransfer</stream_name>
      </field>
      <field>
        <column_name>sType</column_name>
        <stream_name>sType</stream_name>
      </field>
      <field>
        <column_name>sCodeBank</column_name>
        <stream_name>sCodeBank</stream_name>
      </field>
      <field>
        <column_name>sRib</column_name>
        <stream_name>sRib</stream_name>
      </field>
      <field>
        <column_name>sWalletCode</column_name>
        <stream_name>sWalletCode</stream_name>
      </field>
      <field>
        <column_name>bEchec</column_name>
        <stream_name>bEchec</stream_name>
      </field>
      <field>
        <column_name>dEchec</column_name>
        <stream_name>dEchec</stream_name>
      </field>
      <field>
        <column_name>sEchecMsg</column_name>
        <stream_name>sEchecMsg</stream_name>
      </field>
      <field>
        <column_name>sRequestId</column_name>
        <stream_name>sRequestId</stream_name>
      </field>
      <field>
        <column_name>sEcheCode</column_name>
        <stream_name>sEcheCode</stream_name>
      </field>
      <field>
        <column_name>nRealFxRate</column_name>
        <stream_name>nRealFxRate</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>770</xloc>
      <yloc>1084</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>KYC_DATA</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>id</column_name>
        <stream_name>id</stream_name>
      </field>
      <field>
        <column_name>client_id</column_name>
        <stream_name>client_id</stream_name>
      </field>
      <field>
        <column_name>phoneCheck</column_name>
        <stream_name>phoneCheck</stream_name>
      </field>
      <field>
        <column_name>phoneCheckDate</column_name>
        <stream_name>phoneCheckDate</stream_name>
      </field>
      <field>
        <column_name>phoneCheckBy</column_name>
        <stream_name>phoneCheckBy</stream_name>
      </field>
      <field>
        <column_name>scanIdDocMatched</column_name>
        <stream_name>scanIdDocMatched</stream_name>
      </field>
      <field>
        <column_name>scannedDocID</column_name>
        <stream_name>scannedDocID</stream_name>
      </field>
      <field>
        <column_name>scannedFirstName</column_name>
        <stream_name>scannedFirstName</stream_name>
      </field>
      <field>
        <column_name>scannedLastName</column_name>
        <stream_name>scannedLastName</stream_name>
      </field>
      <field>
        <column_name>scannedBirthDate</column_name>
        <stream_name>scannedBirthDate</stream_name>
      </field>
      <field>
        <column_name>scannDataValidated</column_name>
        <stream_name>scannDataValidated</stream_name>
      </field>
      <field>
        <column_name>scannDataValidationDate</column_name>
        <stream_name>scannDataValidationDate</stream_name>
      </field>
      <field>
        <column_name>scannDataValidedBy</column_name>
        <stream_name>scannDataValidedBy</stream_name>
      </field>
      <field>
        <column_name>interview</column_name>
        <stream_name>interview</stream_name>
      </field>
      <field>
        <column_name>interviewDate</column_name>
        <stream_name>interviewDate</stream_name>
      </field>
      <field>
        <column_name>interviewBy</column_name>
        <stream_name>interviewBy</stream_name>
      </field>
      <field>
        <column_name>phone</column_name>
        <stream_name>phone</stream_name>
      </field>
      <field>
        <column_name>phoneCheckedBySM</column_name>
        <stream_name>phoneCheckedBySM</stream_name>
      </field>
      <field>
        <column_name>phoneCheckedBySMDate</column_name>
        <stream_name>phoneCheckedBySMDate</stream_name>
      </field>
      <field>
        <column_name>scannedBy</column_name>
        <stream_name>scannedBy</stream_name>
      </field>
      <field>
        <column_name>enrolledHPS</column_name>
        <stream_name>enrolledHPS</stream_name>
      </field>
      <field>
        <column_name>defaultEDP</column_name>
        <stream_name>defaultEDP</stream_name>
      </field>
      <field>
        <column_name>hpsRefNumber</column_name>
        <stream_name>hpsRefNumber</stream_name>
      </field>
      <field>
        <column_name>enrolledHPSBy</column_name>
        <stream_name>enrolledHPSBy</stream_name>
      </field>
      <field>
        <column_name>enrolledHPSDate</column_name>
        <stream_name>enrolledHPSDate</stream_name>
      </field>
      <field>
        <column_name>interviewUploaded</column_name>
        <stream_name>interviewUploaded</stream_name>
      </field>
      <field>
        <column_name>interviewFileName</column_name>
        <stream_name>interviewFileName</stream_name>
      </field>
      <field>
        <column_name>domicileUploaded</column_name>
        <stream_name>domicileUploaded</stream_name>
      </field>
      <field>
        <column_name>domicileFileName</column_name>
        <stream_name>domicileFileName</stream_name>
      </field>
      <field>
        <column_name>domicileType</column_name>
        <stream_name>domicileType</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Treso_Bkam</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>dDate</column_name>
        <stream_name>dDate</stream_name>
      </field>
      <field>
        <column_name>sDevise</column_name>
        <stream_name>sDevise</stream_name>
      </field>
      <field>
        <column_name>fCoursVirement</column_name>
        <stream_name>fCoursVirement</stream_name>
      </field>
      <field>
        <column_name>dDateBkam</column_name>
        <stream_name>dDateBkam</stream_name>
      </field>
      <field>
        <column_name>sSource</column_name>
        <stream_name>sSource</stream_name>
      </field>
      <field>
        <column_name>sCreatedBy</column_name>
        <stream_name>sCreatedBy</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>817</xloc>
      <yloc>459</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Transaction_Com</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>Id</column_name>
        <stream_name>Id</stream_name>
      </field>
      <field>
        <column_name>transaction_id</column_name>
        <stream_name>transaction_id</stream_name>
      </field>
      <field>
        <column_name>com_amount</column_name>
        <stream_name>com_amount</stream_name>
      </field>
      <field>
        <column_name>product_type_id</column_name>
        <stream_name>product_type_id</stream_name>
      </field>
      <field>
        <column_name>product_id</column_name>
        <stream_name>product_id</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1086</xloc>
      <yloc>351</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>realisation_detaillant</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>accountId</column_name>
        <stream_name>accountId</stream_name>
      </field>
      <field>
        <column_name>createdDate</column_name>
        <stream_name>createdDate</stream_name>
      </field>
      <field>
        <column_name>montant</column_name>
        <stream_name>montant</stream_name>
      </field>
      <field>
        <column_name>produit</column_name>
        <stream_name>produit</stream_name>
      </field>
      <field>
        <column_name>productAbrv</column_name>
        <stream_name>productAbrv</stream_name>
      </field>
      <field>
        <column_name>subProduit</column_name>
        <stream_name>subProduit</stream_name>
      </field>
      <field>
        <column_name>product_type_id</column_name>
        <stream_name>product_type_id</stream_name>
      </field>
      <field>
        <column_name>transId</column_name>
        <stream_name>transId</stream_name>
      </field>
      <field>
        <column_name>firstName</column_name>
        <stream_name>firstName</stream_name>
      </field>
      <field>
        <column_name>lastName</column_name>
        <stream_name>lastName</stream_name>
      </field>
      <field>
        <column_name>retailerId</column_name>
        <stream_name>retailerId</stream_name>
      </field>
      <field>
        <column_name>retailer_code</column_name>
        <stream_name>retailer_code</stream_name>
      </field>
      <field>
        <column_name>shopName</column_name>
        <stream_name>shopName</stream_name>
      </field>
      <field>
        <column_name>shopcode</column_name>
        <stream_name>shopcode</stream_name>
      </field>
      <field>
        <column_name>commission</column_name>
        <stream_name>commission</stream_name>
      </field>
      <field>
        <column_name>endBalance</column_name>
        <stream_name>endBalance</stream_name>
      </field>
      <field>
        <column_name>startBalance</column_name>
        <stream_name>startBalance</stream_name>
      </field>
      <field>
        <column_name>shopCommision</column_name>
        <stream_name>shopCommision</stream_name>
      </field>
      <field>
        <column_name>transaction_id</column_name>
        <stream_name>transaction_id</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1040</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>annulation_send_mg_ria</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>code</column_name>
        <stream_name>code</stream_name>
      </field>
      <field>
        <column_name>product_type</column_name>
        <stream_name>product_type</stream_name>
      </field>
      <field>
        <column_name>product</column_name>
        <stream_name>product</stream_name>
      </field>
      <field>
        <column_name>date_annulation</column_name>
        <stream_name>date_annulation</stream_name>
      </field>
      <field>
        <column_name>nTransactionsId</column_name>
        <stream_name>nTransactionsId</stream_name>
      </field>
      <field>
        <column_name>refunded_amount</column_name>
        <stream_name>refunded_amount</stream_name>
      </field>
      <field>
        <column_name>nAmount</column_name>
        <stream_name>nAmount</stream_name>
      </field>
      <field>
        <column_name>refundTotalAmount</column_name>
        <stream_name>refundTotalAmount</stream_name>
      </field>
      <field>
        <column_name>sNeiCode</column_name>
        <stream_name>sNeiCode</stream_name>
      </field>
      <field>
        <column_name>cancelDate</column_name>
        <stream_name>cancelDate</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1036</xloc>
      <yloc>36</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 2 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>TAOHUB</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>sNeiCode</column_name>
        <stream_name>sNeiCode</stream_name>
      </field>
      <field>
        <column_name>nSenderId</column_name>
        <stream_name>nSenderId</stream_name>
      </field>
      <field>
        <column_name>nAmount</column_name>
        <stream_name>nAmount</stream_name>
      </field>
      <field>
        <column_name>nOperationStatusId</column_name>
        <stream_name>nOperationStatusId</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>bPaid</column_name>
        <stream_name>bPaid</stream_name>
      </field>
      <field>
        <column_name>dPaid</column_name>
        <stream_name>dPaid</stream_name>
      </field>
      <field>
        <column_name>nTransactionsId</column_name>
        <stream_name>nTransactionsId</stream_name>
      </field>
      <field>
        <column_name>nProductId</column_name>
        <stream_name>nProductId</stream_name>
      </field>
      <field>
        <column_name>bCancel</column_name>
        <stream_name>bCancel</stream_name>
      </field>
      <field>
        <column_name>insertionDate</column_name>
        <stream_name>insertionDate</stream_name>
      </field>
      <field>
        <column_name>receiverFirstName</column_name>
        <stream_name>receiverFirstName</stream_name>
      </field>
      <field>
        <column_name>receiverLastName</column_name>
        <stream_name>receiverLastName</stream_name>
      </field>
      <field>
        <column_name>receiverCIN</column_name>
        <stream_name>receiverCIN</stream_name>
      </field>
      <field>
        <column_name>refundTotalAmount</column_name>
        <stream_name>refundTotalAmount</stream_name>
      </field>
      <field>
        <column_name>codeOfficeChange</column_name>
        <stream_name>codeOfficeChange</stream_name>
      </field>
      <field>
        <column_name>cancelDate</column_name>
        <stream_name>cancelDate</stream_name>
      </field>
      <field>
        <column_name>sendTaxes</column_name>
        <stream_name>sendTaxes</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>607</xloc>
      <yloc>79</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 2 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Transactions_Documents</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>N</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>nIdTransaction</column_name>
        <stream_name>nIdTransaction</stream_name>
      </field>
      <field>
        <column_name>sDocumentName</column_name>
        <stream_name>sDocumentName</stream_name>
      </field>
      <field>
        <column_name>nCreatedBy</column_name>
        <stream_name>nCreatedBy</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>nProductType</column_name>
        <stream_name>nProductType</stream_name>
      </field>
      <field>
        <column_name>nProduct</column_name>
        <stream_name>nProduct</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>738</xloc>
      <yloc>118</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 2 4</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Facturiers_Transactions</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>nCustomerId</column_name>
        <stream_name>nCustomerId</stream_name>
      </field>
      <field>
        <column_name>nShopId</column_name>
        <stream_name>nShopId</stream_name>
      </field>
      <field>
        <column_name>nShopkeeperId</column_name>
        <stream_name>nShopkeeperId</stream_name>
      </field>
      <field>
        <column_name>nAmount</column_name>
        <stream_name>nAmount</stream_name>
      </field>
      <field>
        <column_name>nServiceFees</column_name>
        <stream_name>nServiceFees</stream_name>
      </field>
      <field>
        <column_name>sBillerId</column_name>
        <stream_name>sBillerId</stream_name>
      </field>
      <field>
        <column_name>sServiceBillerCode</column_name>
        <stream_name>sServiceBillerCode</stream_name>
      </field>
      <field>
        <column_name>sSelectedCreances</column_name>
        <stream_name>sSelectedCreances</stream_name>
      </field>
      <field>
        <column_name>sBillNumber</column_name>
        <stream_name>sBillNumber</stream_name>
      </field>
      <field>
        <column_name>created_by</column_name>
        <stream_name>created_by</stream_name>
      </field>
      <field>
        <column_name>updated_by</column_name>
        <stream_name>updated_by</stream_name>
      </field>
      <field>
        <column_name>update_date</column_name>
        <stream_name>update_date</stream_name>
      </field>
      <field>
        <column_name>dOperation</column_name>
        <stream_name>dOperation</stream_name>
      </field>
      <field>
        <column_name>globalParams</column_name>
        <stream_name>globalParams</stream_name>
      </field>
      <field>
        <column_name>nDetaillant</column_name>
        <stream_name>nDetaillant</stream_name>
      </field>
      <field>
        <column_name>sCreancesData</column_name>
        <stream_name>sCreancesData</stream_name>
      </field>
      <field>
        <column_name>sRecu</column_name>
        <stream_name>sRecu</stream_name>
      </field>
      <field>
        <column_name>sMTC</column_name>
        <stream_name>sMTC</stream_name>
      </field>
      <field>
        <column_name>status</column_name>
        <stream_name>status</stream_name>
      </field>
      <field>
        <column_name>identifiantPayment</column_name>
        <stream_name>identifiantPayment</stream_name>
      </field>
      <field>
        <column_name>sType</column_name>
        <stream_name>sType</stream_name>
      </field>
      <field>
        <column_name>cancelation_status</column_name>
        <stream_name>cancelation_status</stream_name>
      </field>
      <field>
        <column_name>cancellation_status</column_name>
        <stream_name>cancellation_status</stream_name>
      </field>
      <field>
        <column_name>stamp_fees</column_name>
        <stream_name>stamp_fees</stream_name>
      </field>
      <field>
        <column_name>status_detail</column_name>
        <stream_name>status_detail</stream_name>
      </field>
      <field>
        <column_name>status_after</column_name>
        <stream_name>status_after</stream_name>
      </field>
      <field>
        <column_name>is_transaction_cmi</column_name>
        <stream_name>is_transaction_cmi</stream_name>
      </field>
      <field>
        <column_name>in_cancellation_request</column_name>
        <stream_name>in_cancellation_request</stream_name>
      </field>
      <field>
        <column_name>cancel_date</column_name>
        <stream_name>cancel_date</stream_name>
      </field>
      <field>
        <column_name>reconfirm_date</column_name>
        <stream_name>reconfirm_date</stream_name>
      </field>
      <field>
        <column_name>count_print_receipt</column_name>
        <stream_name>count_print_receipt</stream_name>
      </field>
      <field>
        <column_name>network_id</column_name>
        <stream_name>network_id</stream_name>
      </field>
      <field>
        <column_name>nbr_creances</column_name>
        <stream_name>nbr_creances</stream_name>
      </field>
      <field>
        <column_name>fields_client</column_name>
        <stream_name>fields_client</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1184</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>ACCOUNT_SHOP_LINK</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>accountNumber</column_name>
        <stream_name>accountNumber</stream_name>
      </field>
      <field>
        <column_name>shopId</column_name>
        <stream_name>shopId</stream_name>
      </field>
      <field>
        <column_name>startDate</column_name>
        <stream_name>startDate</stream_name>
      </field>
      <field>
        <column_name>endDate</column_name>
        <stream_name>endDate</stream_name>
      </field>
      <field>
        <column_name>rights</column_name>
        <stream_name>rights</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1472</xloc>
      <yloc>256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Transactions_Documents</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>nIdTransaction</column_name>
        <stream_name>nIdTransaction</stream_name>
      </field>
      <field>
        <column_name>sDocumentName</column_name>
        <stream_name>sDocumentName</stream_name>
      </field>
      <field>
        <column_name>nCreatedBy</column_name>
        <stream_name>nCreatedBy</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>nProductType</column_name>
        <stream_name>nProductType</stream_name>
      </field>
      <field>
        <column_name>nProduct</column_name>
        <stream_name>nProduct</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1632</xloc>
      <yloc>224</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 2 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>TransactionsComplements</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>transactionId</column_name>
        <stream_name>transactionId</stream_name>
      </field>
      <field>
        <column_name>json</column_name>
        <stream_name>json</stream_name>
      </field>
      <field>
        <column_name>partner</column_name>
        <stream_name>partner</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1476</xloc>
      <yloc>199</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Partner_X</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>sSenderFirstName</column_name>
        <stream_name>sSenderFirstName</stream_name>
      </field>
      <field>
        <column_name>sSenderLastName</column_name>
        <stream_name>sSenderLastName</stream_name>
      </field>
      <field>
        <column_name>sSenderAddress</column_name>
        <stream_name>sSenderAddress</stream_name>
      </field>
      <field>
        <column_name>sSenderCity</column_name>
        <stream_name>sSenderCity</stream_name>
      </field>
      <field>
        <column_name>sSenderEmail</column_name>
        <stream_name>sSenderEmail</stream_name>
      </field>
      <field>
        <column_name>sSenderPhone</column_name>
        <stream_name>sSenderPhone</stream_name>
      </field>
      <field>
        <column_name>sSenderPostalCod</column_name>
        <stream_name>sSenderPostalCod</stream_name>
      </field>
      <field>
        <column_name>sReceiverFirstName</column_name>
        <stream_name>sReceiverFirstName</stream_name>
      </field>
      <field>
        <column_name>sReceiverLastName</column_name>
        <stream_name>sReceiverLastName</stream_name>
      </field>
      <field>
        <column_name>sReceiverAddress</column_name>
        <stream_name>sReceiverAddress</stream_name>
      </field>
      <field>
        <column_name>sReceiverCity</column_name>
        <stream_name>sReceiverCity</stream_name>
      </field>
      <field>
        <column_name>sReceiverPhone</column_name>
        <stream_name>sReceiverPhone</stream_name>
      </field>
      <field>
        <column_name>sSendAmount</column_name>
        <stream_name>sSendAmount</stream_name>
      </field>
      <field>
        <column_name>sSendCurrency</column_name>
        <stream_name>sSendCurrency</stream_name>
      </field>
      <field>
        <column_name>nReceiveAmount</column_name>
        <stream_name>nReceiveAmount</stream_name>
      </field>
      <field>
        <column_name>sReceiveCurrency</column_name>
        <stream_name>sReceiveCurrency</stream_name>
      </field>
      <field>
        <column_name>sTrackingNumber</column_name>
        <stream_name>sTrackingNumber</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>dPaid</column_name>
        <stream_name>dPaid</stream_name>
      </field>
      <field>
        <column_name>bPaid</column_name>
        <stream_name>bPaid</stream_name>
      </field>
      <field>
        <column_name>nTransactionId</column_name>
        <stream_name>nTransactionId</stream_name>
      </field>
      <field>
        <column_name>nCustomerId</column_name>
        <stream_name>nCustomerId</stream_name>
      </field>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>bTimeout</column_name>
        <stream_name>bTimeout</stream_name>
      </field>
      <field>
        <column_name>nPartner_id</column_name>
        <stream_name>nPartner_id</stream_name>
      </field>
      <field>
        <column_name>rate</column_name>
        <stream_name>rate</stream_name>
      </field>
      <field>
        <column_name>data_json</column_name>
        <stream_name>data_json</stream_name>
      </field>
      <field>
        <column_name>nProductType</column_name>
        <stream_name>nProductType</stream_name>
      </field>
      <field>
        <column_name>sSenderIdNumber</column_name>
        <stream_name>sSenderIdNumber</stream_name>
      </field>
      <field>
        <column_name>sSenderCountry</column_name>
        <stream_name>sSenderCountry</stream_name>
      </field>
      <field>
        <column_name>dSenderDateOfBirth</column_name>
        <stream_name>dSenderDateOfBirth</stream_name>
      </field>
      <field>
        <column_name>sReceiverIdNumber</column_name>
        <stream_name>sReceiverIdNumber</stream_name>
      </field>
      <field>
        <column_name>sReceiverCountry</column_name>
        <stream_name>sReceiverCountry</stream_name>
      </field>
      <field>
        <column_name>dReceiverDateOfBirth</column_name>
        <stream_name>dReceiverDateOfBirth</stream_name>
      </field>
      <field>
        <column_name>sTransferReason</column_name>
        <stream_name>sTransferReason</stream_name>
      </field>
      <field>
        <column_name>sInternalTrackingNumber</column_name>
        <stream_name>sInternalTrackingNumber</stream_name>
      </field>
      <field>
        <column_name>sOriginatingCountry</column_name>
        <stream_name>sOriginatingCountry</stream_name>
      </field>
      <field>
        <column_name>sDestinationCountry</column_name>
        <stream_name>sDestinationCountry</stream_name>
      </field>
      <field>
        <column_name>receiverMiddleName</column_name>
        <stream_name>receiverMiddleName</stream_name>
      </field>
      <field>
        <column_name>Payment_request_id</column_name>
        <stream_name>Payment_request_id</stream_name>
      </field>
      <field>
        <column_name>shopId</column_name>
        <stream_name>shopId</stream_name>
      </field>
      <field>
        <column_name>status</column_name>
        <stream_name>status</stream_name>
      </field>
      <field>
        <column_name>sTrackingNumber2</column_name>
        <stream_name>sTrackingNumber2</stream_name>
      </field>
      <field>
        <column_name>senderMiddleName</column_name>
        <stream_name>senderMiddleName</stream_name>
      </field>
      <field>
        <column_name>sStatus</column_name>
        <stream_name>sStatus</stream_name>
      </field>
      <field>
        <column_name>dLastStatus</column_name>
        <stream_name>dLastStatus</stream_name>
      </field>
      <field>
        <column_name>sUUID</column_name>
        <stream_name>sUUID</stream_name>
      </field>
      <field>
        <column_name>dPaidDate</column_name>
        <stream_name>dPaidDate</stream_name>
      </field>
      <field>
        <column_name>dInsertionDate</column_name>
        <stream_name>dInsertionDate</stream_name>
      </field>
      <field>
        <column_name>sPartnerCode</column_name>
        <stream_name>sPartnerCode</stream_name>
      </field>
      <field>
        <column_name>nAppVersion</column_name>
        <stream_name>nAppVersion</stream_name>
      </field>
      <field>
        <column_name>dSent</column_name>
        <stream_name>dSent</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1566</xloc>
      <yloc>380</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>client_min_dinsertion</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>client</column_name>
        <stream_name>client</stream_name>
      </field>
      <field>
        <column_name>maxdate</column_name>
        <stream_name>maxdate</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1648</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Facturiers_Transactions_asup</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nid</column_name>
        <stream_name>nid</stream_name>
      </field>
      <field>
        <column_name>status</column_name>
        <stream_name>status</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1662</xloc>
      <yloc>612</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3 2 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>transactions_asup</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nid</column_name>
        <stream_name>nid</stream_name>
      </field>
      <field>
        <column_name>nTransactionStatusId</column_name>
        <stream_name>nTransactionStatusId</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1968</xloc>
      <yloc>592</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3 2 2 2 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>mtoCnssComplement</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>sTrackingNumber</column_name>
        <stream_name>sTrackingNumber</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>typePrestation</column_name>
        <stream_name>typePrestation</stream_name>
      </field>
      <field>
        <column_name>numImmatriculation</column_name>
        <stream_name>numImmatriculation</stream_name>
      </field>
      <field>
        <column_name>rib</column_name>
        <stream_name>rib</stream_name>
      </field>
      <field>
        <column_name>paymentReference</column_name>
        <stream_name>paymentReference</stream_name>
      </field>
      <field>
        <column_name>datePaymentTransaction</column_name>
        <stream_name>datePaymentTransaction</stream_name>
      </field>
      <field>
        <column_name>operationFees</column_name>
        <stream_name>operationFees</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1437</xloc>
      <yloc>1334</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>CityBkam</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nid</column_name>
        <stream_name>nid</stream_name>
      </field>
      <field>
        <column_name>code_bkam</column_name>
        <stream_name>code_bkam</stream_name>
      </field>
      <field>
        <column_name>localite</column_name>
        <stream_name>localite</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1880</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 3 3 3 2</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Transactions_send_status</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nid</column_name>
        <stream_name>nid</stream_name>
      </field>
      <field>
        <column_name>nTransactionStatusId</column_name>
        <stream_name>nTransactionStatusId</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1974</xloc>
      <yloc>502</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 2 3 2 2 5</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>TAOHUB</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>nId</column_name>
        <stream_name>nId</stream_name>
      </field>
      <field>
        <column_name>sNeiCode</column_name>
        <stream_name>sNeiCode</stream_name>
      </field>
      <field>
        <column_name>nSenderId</column_name>
        <stream_name>nSenderId</stream_name>
      </field>
      <field>
        <column_name>nAmount</column_name>
        <stream_name>nAmount</stream_name>
      </field>
      <field>
        <column_name>nOperationStatusId</column_name>
        <stream_name>nOperationStatusId</stream_name>
      </field>
      <field>
        <column_name>dInsertion</column_name>
        <stream_name>dInsertion</stream_name>
      </field>
      <field>
        <column_name>bPaid</column_name>
        <stream_name>bPaid</stream_name>
      </field>
      <field>
        <column_name>dPaid</column_name>
        <stream_name>dPaid</stream_name>
      </field>
      <field>
        <column_name>nTransactionsId</column_name>
        <stream_name>nTransactionsId</stream_name>
      </field>
      <field>
        <column_name>nProductId</column_name>
        <stream_name>nProductId</stream_name>
      </field>
      <field>
        <column_name>bCancel</column_name>
        <stream_name>bCancel</stream_name>
      </field>
      <field>
        <column_name>insertionDate</column_name>
        <stream_name>insertionDate</stream_name>
      </field>
      <field>
        <column_name>receiverFirstName</column_name>
        <stream_name>receiverFirstName</stream_name>
      </field>
      <field>
        <column_name>receiverLastName</column_name>
        <stream_name>receiverLastName</stream_name>
      </field>
      <field>
        <column_name>receiverCIN</column_name>
        <stream_name>receiverCIN</stream_name>
      </field>
      <field>
        <column_name>refundTotalAmount</column_name>
        <stream_name>refundTotalAmount</stream_name>
      </field>
      <field>
        <column_name>codeOfficeChange</column_name>
        <stream_name>codeOfficeChange</stream_name>
      </field>
      <field>
        <column_name>cancelDate</column_name>
        <stream_name>cancelDate</stream_name>
      </field>
      <field>
        <column_name>sendTaxes</column_name>
        <stream_name>sendTaxes</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1200</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Insertion dans table 3</name>
    <type>TableOutput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <schema />
    <table>Country_bkam</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field />
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field />
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field />
    <fields>
      <field>
        <column_name>code</column_name>
        <stream_name>code</stream_name>
      </field>
      <field>
        <column_name>iso2</column_name>
        <stream_name>iso2</stream_name>
      </field>
      <field>
        <column_name>iso3</column_name>
        <stream_name>iso3</stream_name>
      </field>
      <field>
        <column_name>nom_en_gb</column_name>
        <stream_name>nom_en_gb</stream_name>
      </field>
      <field>
        <column_name>nom_fr_fr</column_name>
        <stream_name>nom_fr_fr</stream_name>
      </field>
      <field>
        <column_name>status</column_name>
        <stream_name>status</stream_name>
      </field>
    </fields>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>240</xloc>
      <yloc>144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select sss.sshopid as code, i.shop2, ci.sName as ville ,lvl,count(nbr.id) as nbr_client,sh.sShopId
         , sum(tr.nbr_trx)as nbr_trx ,sum(volume) as volume
	     , sum(commission)as commission,count(clienti) as client_actif 
          , count(client_mobile) as client_mobile,sum(balance_available)as solde
from REPORTING_ACCOUNTS re
    
left   join (select account_id, sum(nbr_trx) as nbr_trx,sum(volume) as volume,sum(commission) as commission from (
select account_id, count(*) as nbr_trx , sum(amount_net) as volume ,sum(fees) as commission 
         from REPORTING_TRANSACTIONS
         where MONTH(createddate) in (4,5,6) and  operation_type_id in(10,4,6,3,18,22,17,25,23) and year(createddate) = 2021 group by account_id
		 
    union 
		 select  account_id  , count(*)/2 as nbr_trx , sum(debit) as volume ,sum(fees) as commission 
         from REPORTING_TRANSACTIONS
         where MONTH(createddate) in (4,5,6) and  operation_type_id in(2) and year(createddate) = 2021   group by account_id
		

)d
group by account_id
	 ) tr
 on tr.account_id= re.id 
left  join (select distinct(account_id)as clienti from REPORTING_TRANSACTIONS where month(createddate)in (4,5,6)and year(createddate) = 2021) as dis
 on  dis.clienti =  re.id

left join (select distinct(account_id) client_mobile from REPORTING_TRANSACTIONS where canal = 'Mobile'
             and MONTH(createddate) in  (4,5,6)and  year(createddate) = 2021) mobile
 on mobile.client_mobile = re.id
 left join shop sh
on sh.nid= re.created_by
left  join City ci 
on ci.nid = sh.nCityId
  left join (select distinct(id) as id from REPORTING_ACCOUNTS  where month(open_date) in  (4,5,6)and year(open_date) = 2021) nbr
on nbr.id = re.id
left join (select distinct(id_account),shop2 from info_upgrades ) i
on   re.id = i.id_account  and    re.created_by = 1
left  join shop sss
on sss.nid = i.shop2 
left join (select * from account_principal_cloture  where cloture_date = '2021-07-01 00:00:00.000') sl
on sl.account_id = re.id
--- where month(re.open_date) in  (4,5,6)  and year(re.open_date)= 2021
group by  ci.sName ,lvl  , sh.sShopId , i.shop2,sss.sshopid
























	
	


	

	





	
	




</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>64</xloc>
      <yloc>336</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select *  from Company_balance_history
where date_of_change > '2021-01-01 00:09:30.867'
order by date_of_change desc</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>192</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>SELECT 
  id
, client_id
, phoneCheck
, phoneCheckDate
, phoneCheckBy
, scanIdDocMatched
, scannedDocID
, scannedFirstName
, scannedLastName
, scannedBirthDate
, scannDataValidated
, scannDataValidationDate
, scannDataValidedBy
, interview
, interviewDate
, interviewBy
,  phone
, phoneCheckedBySM
, phoneCheckedBySMDate
, scannedBy
, enrolledHPS
, defaultEDP
, hpsRefNumber
, enrolledHPSBy
, enrolledHPSDate
, interviewUploaded
, interviewFileName
, domicileUploaded
, domicileFileName
, domicileType
FROM [CP_CORE].[dbo].[KYC_DATA]
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>--select * from  CP_CORE.[dbo].FIDE_TRANSACTIONS where id &lt;  12780707

select  * from Treso_Bkam 
where dDate > '2021-08-27 12:33:44.000'
order by dDate asc</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>624</xloc>
      <yloc>448</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
select sss.sshopid, i.shop2, ci.sName as ville ,lvl,count(nbr.id) as nbr_client,sh.sShopId
         , sum(tr.nbr_trx)as nbr_trx ,sum(volume) as volume
	     , sum(commission)as commission,count(clienti) as client_actif 
          , count(client_mobile) as client_mobile,sum(balance_available)as solde
from REPORTING_ACCOUNTS re
    
left   join (select account_id ,sum(nbr_trx) as nbr_trx,sum(volume) as volume,sum(commission) as commission from (
select account_id  , count(*) as nbr_trx , sum(amount_net) as volume ,sum(fees) as commission 
         from REPORTING_TRANSACTIONS
         where MONTH(createddate) in (4,5,6) and  operation_type_id in(10,4,6,3,18,22,17,25,23) and year(createddate) = 2021  group by account_id
		 
    union 

select account_id  , count(*)/2 as nbr_trx , sum(debit) as volume ,sum(fees) as commission 
         from REPORTING_TRANSACTIONS
         where MONTH(createddate) in (4,5,6) and  operation_type_id in(2) and year(createddate) = 2021 and debit is not null   group by account_id
		 











		 union 
             select r.id as account_id ,  count(*)as  nbr_trx, sum(MONTANT_TRANSACTION)/100 as volume,0 as commission from REPORTING_ACCOUNTS r
               join REPORTING_CARDS  c
               on r.id = c.account_id
               left join REPORTING_MONETIQUE m
               on m.CARD_ID = c.card_id
               where month(DATE_PROCESSING) in  (4,5,6) and CODE_OPERATION in ('05000','07000') and year(DATE_PROCESSING) = 2021
               group by  r.id)d
	 group by account_id) tr
 on tr.account_id= re.id 
 left join (select distinct(account_id)as clienti from REPORTING_TRANSACTIONS where month(createddate)in (4,5,6)and year(createddate) = 2021) as dis
 on  dis.clienti =  re.id

left join (select distinct(account_id) client_mobile from REPORTING_TRANSACTIONS where canal = 'Mobile'
             and MONTH(createddate) in  (4,5,6)and  year(createddate) = 2021) mobile
 on mobile.client_mobile = re.id
 left join shop sh
on sh.nid= re.created_by
left  join City ci 
on ci.nid = sh.nCityId
left join (select id from REPORTING_ACCOUNTS  where month(open_date) in  (4,5,6)and year(open_date) = 2021) nbr
on nbr.id = re.id
left join (select distinct(id_account),shop2 from info_upgrades ) i
on   re.id = i.id_account  and    re.created_by = 1
left  join shop sss
on sss.nid = i.shop2 
left join (select * from account_principal_cloture  where cloture_date = '2021-07-01 00:00:00.000') sl
on sl.account_id = re.id
 where month(re.open_date) in  (4,5,6)  and year(re.open_date)= 2021
group by  ci.sName ,lvl  , sh.sShopId , i.shop2,sss.sshopid
























	
	


	

	





	
	




</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>96</xloc>
      <yloc>496</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>--SELECT tr.nShopId as shopid_in,tn.nTransactionCashoutId as  cashout_id,tn.nTransactionCashInId as cashin_id, tn.nAmount as  Montant,

---sh.sShopId as ShopID, sh.sName  as Shop, trOut.dInsertion as dateCashout,

--tr.dInsertion as dateCashin

--FROM TANHUB tn

--inner join Transactions tr on tr.nid = tn.nTransactionCashinId

--inner join Transactions trOut on trOut.nid = tn.nTransactionCashOutId


--inner join Shop sh on sh.nId = trOut.nShopId

--inner join Shop initialshop on tr.nshopid = initialshop.nid



--where bpaid = 1

--and tr.nShopId IN (2178,2585)



--select * from transactions where convert(date,dInsertion,103) =  convert(date,GETDATE()-1,103)

--select Shop.bFranchise,
--sReceiverCountry as pays,
--City.sname as ville ,
--product.sname as fournisseur,
--month (transactions.dInsertion) as mois,
--count(*) as nbr,
--sum(namount) as montant
--from transactions 
--inner join Shop on nShopId = Shop.nId and len(sshopid) > 4
--inner join      (
--select* from  (
--select nTransactionId,sReceiverCountry from Partner_xs 
--union 
--select nTransactionId,sReceiverCountry from Partner_x)d) as Partner_X 
--on Partner_X.nTransactionId = transactions.nid--
--left join city on Shop.ncityid = city.nid
--left join product on product.nid = transactions.nproductid
--left join country on (sReceiverCountry=iso2 or sReceiverCountry=iso3)
--where transactions.dInsertion >= '2021-04-01'
--and transactions.dInsertion &lt; '2021-07-01'
--and transactions.nProductId  in (4059,4060 ,58)
--and nTransactionStatusId in (8,26) 

--group by Shop.bFranchise,  sReceiverCountry,City.sname,product.sname, month (transactions.dInsertion)
--SELECT month(dInsertion) as mois  ,count(*) as nbr ,sum(nAmount)as volume,sum(nOperationFee) as commission
--from transactions 


--where nShopId = 1372 and dInsertion >= '2021-01-01' and dInsertion &lt; '2021-04-01' and nTransactionStatusId = 8
--group by  month(dInsertion)


--select
--Shop.bFranchise,
--sSendingCountry as pays,
--City.sname as ville ,
--product.sname as fournisseur,
--month (transactions.dInsertion) as mois,
--count(*) as nbr,
--sum(namount) as montant
--from transactions 
--inner join Shop on nShopId = Shop.nId and  len(sshopid) > 4
--inner join  Partner_SmallWorld as Partner_RIA on Partner_RIA.nTransactionId = transactions.nid
--left join city on Shop.ncityid = city.nid
--left join product on product.nid = transactions.nproductid
--left join country on (sSendingCountry=iso2 or sSendingCountry=iso3)
--where transactions.dInsertion >= '2021-04-01'
--and transactions.dInsertion &lt; '2021-07-01'
--and nTransactionStatusId in (8,26) 
--and transactions.nProductId =59
--group by Shop.bFranchise,  sSendingCountry,City.sname,product.sname, month (transactions.dInsertion)



--select sShopId as code ,s.sName as agence,c.sName as ville,sAddress as adresse ,nPostCode as tele  from shop s
--left join City  c
--on c.nid = s.nCityId
--select City.sname as ville,shop.sShopId ,count(*) as nbrr from REPORTING_CARDS 
--left join shop on shop.nid =   REPORTING_CARDS.agency
--left join City on City.nid= shop.nCityid
--where  month(createddate) in (1,2,3) and year(createddate) = 2021 group by shop.sShopId, City.sname
--select  operation_type_id,sh.sShopId as code,sFirstName ,sLastName,sCIN , count(*)as nbr from [CP_CORE].[dbo].LOG_COREBANKING l
--left join [cash_plus].[dbo].[ShopKeeper] s
--on l.shop_keeper_id = s.nId
--left join  [cash_plus].[dbo].shop sh
--on sh.nid = l.shop_id
--where operation_type_id  = 13 and month(operation_date) = 3 and year(operation_date) =2021
--and status = 'Finished'
--group by   operation_type_id,sh.sShopId,sFirstName ,sLastName,sCIN
--select
--shop.bFranchise,

--nom_en_gb as pays,

--City.sname as ville ,

--product.sname as fournisseur,

--month (transactions.dInsertion) as mois,

--count(*) as nbr,

--sum(namount) as montant,
--Shop.bFranchise

--from transactions 

--inner join Shop on nShopId = Shop.nId and len(sshopid) = 4

--inner join  Partner_X on Partner_X.nTransactionId = transactions.nid

--left join city on Shop.ncityid = city.nid

--left join product on product.nid = transactions.nproductid

--left join country on (JSON_VALUE(cast(data_json as nvarchar(max)),'$."SenderCountryIsoCode"')=iso2 or
-- JSON_VALUE(cast(data_json as nvarchar(max)),'$."SenderCountryIsoCode"')=iso3)

--where transactions.dInsertion >= '2021-04-01'

--and transactions.dInsertion &lt; '2021-07-01'

--and transactions.nProductId = 4063

--and nTransactionStatusId in (8,26) 

--group by shop.bFranchise, nom_en_gb,City.sname,product.sname, month(transactions.dInsertion),Shop.bFranchise
-- select sShopId ,shopkeeper_name ,sum(commission) as commission from commission_shopkepper where  Type_product ='change'
-- and month(dinsertion) = 3  and shopkeeper_name is not null
--group by sShopId ,shopkeeper_name

-- select sShopId  as code ,shopkeeper_name  as cc,sum(commission) as commission from commission_shopkepper where  Type_product ='change'
-- and month(dinsertion) = 3   and shopkeeper_name is not null 
--group by sShopId ,shopkeeper_name
--order by commission desc
--select c.sCIN ,c.sLastName ,c.sFirstName ,p.dateCreated ,p.reason from  ProfilageBlackList p
--inner join  Customer c
-- on p.customerId = c.nid 
--where  p.dateCreated > '2021-09-01 00:58:30.903' and dateend is null
--select  card_id  ,createddate ,Shop.sShopId, c.phone  from REPORTING_CARDS r
  --join (
--select id ,id_num ,count(*)as nbr  from REPORTING_ACCOUNTS
--where id_num is not null
--group by id ,id_num) a
--on a.id = r.account_id 
--inner join client_edp c
 --on c.id_num =a.id_num
  --join shop
 --on shop.nid = r.agency
-- select  nid  ,sLastName ,sCIN,sMatricule from ShopKeeper


--select  * from Daily_transactions_extended where receiverID = 'nbe495365'
--union 
--select  * from Daily_transactions_extended where senderID = 'nbe495365'
--select c.card_id ,c.agency ,c.rib,c.account_id ,c.createddate ,a.lvl, cc.phone  from REPORTING_CARDS c
--left join REPORTING_ACCOUNTS a
--on a.id =c.account_id
--left join client_edp cc
--on cc.id_num =a.id_num
--where c.card_id not in (
--select distinct(card_id) from REPORTING_MONETIQUE where CODE_OPERATION in (07000,05000))



--select convert(date, dInsertion,103) as date,   s.bFranchise, nShopId,s.sShopId ,comp.nid as  id_company ,comp.sName as company ,count(*)as  nbr from transactions t
--left join shop s 
--on s.nid = t.nShopId
--left join City
--on City.nId = s.nCityId
--left join Company comp
--on comp.nid = s.nCompanyId


--where  
  --convert(date, dInsertion,103)>  convert(date, getdate()-2,103) 
--and s.nShopTypeId = 1
--group by 
--nShopId,s.sShopId ,comp.nid  ,comp.sName ,  s.bFranchise,convert(date, dInsertion,103)
--order by  convert(date, dInsertion,103) desc



--select product,bFranchise,month(created_date)  as mois , sShopId  , sum(comfr_amount) as commission from EDP_COMFR 
--left join shop 
--on shop.nid = shop_id
--where year(created_date) = 2021 and month(created_date) = 8  and product = 'EDP'
--group by sShopId, month(created_date) , product ,bFranchise


--union

--select 'carte' as product,bFranchise,month(createddate) as mois , sShopId ,count(*)*49 as commission  from REPORTING_CARDS
--left join shop 
--on shop.nid = agency
--where  year(createddate) = 2021 and month(createddate) = 8 
--group by month(createddate), sShopId ,bFranchise
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>32</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>--select  City.sName as ville,  isnull(retailer_code, ss.sShopId ) as code_agence ,isnull(retailer_code, ss.Sname ) as agence ,p.sServiceProvider as Product, year(f.dInsertion) as year
--,CASE WHEN  f.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type
-- ,sum(nbr_Creances) as nbr_Creances ,sum(nAmount) as volume ,count(*) as nbr_trx,sum(f.nServiceFees)as Fees   from Facturiers_Transactions f

--         left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
  --        join shop ss
--on ss.nid = f.nShopId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--left join City 
--on City.nid = ss.nCityId

--where f.status = 'PAID' and f.dInsertion > '2019-01-01 00:15:14.980'

--group by  City.sName, isnull(retailer_code, ss.sShopId ),isnull(retailer_code, ss.Sname ),p.sServiceProvider,year(f.dInsertion)
--,CASE WHEN  f.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end 


select  sServiceProvider, client_edp.city,year(createddate)as year,sum(amount_net)as volume, count(*) as nbr ,
 sum(convert(float, JSON_VALUE(cast(complement as nvarchar(max)),'$."fraisServiceCreances"')))  as fraisServiceCreances
 from REPORTING_TRANSACTIONS

left join  REPORTING_ACCOUNTS 

on REPORTING_TRANSACTIONS.account_id = REPORTING_ACCOUNTS.id
left join client_edp
on client_edp.id_num = REPORTING_ACCOUNTS.id_num


 left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
on JSON_VALUE(cast(complement as nvarchar(max)),'$.biller_id') = p.sBillerId
where operation_type_id= 18  and sServiceProvider is not null
group by client_edp.city,year(createddate),sServiceProvider


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>672</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>SELECT
  nId
, dInsertion
, nMentorAccessId
, sIdType
, sCIN
, sCINFile
, sLastName
, sFirstName
, dBirthday
, sAddress
, sFidelity
, sPostCode
, sSex
, sOccupation
, nCustomerStatusId
, nCorrect
, bNational
, nCountryId
, nCitiesId
, sScandocToken
, dEndValidity
, sPhotoIdType
, sPhotoIdNumber
, sPhotoIdState
, sPhotoIdCountry
, sEmail
FROM Customer

where nid in (22222157,
22233286,
22222233,
22233286,
22233292,
22222205,
22222373,
22233292,
22212640,
22222373,
22222157,
22233292,
22222135,
22233297)</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>816</xloc>
      <yloc>400</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>SELECT 
                    account.id as accountId,
                    trans.created_date as createdDate,
                    trans.amount as montant,
                    prType.sName as produit,
                    isnull(prType.sAbrv,prType.sName)  as productAbrv,
                    subPrd.sName as subProduit,
                    trans.product_type_id,
                    trans.id as transId,
                    retail.first_name as firstName,
                    retail.last_name as lastName,
                    retail.id as retailerId,
                    retail.retailer_code as retailer_code,
                    shp.sName as shopName,
                     shp.sshopid as shopcode ,
                    transCom.amount as commission,
                    isnull(transCom.end_balance, trans.end_balance) as endBalance,
                    trans.start_balance as startBalance,
                    shopCom.nComissionFranchise as shopCommision,
                    trans.transaction_id as transaction_id
                  
                   
                    FROM CP_CORE.dbo.LOG_TRANSACTION trans with (nolock)
                    inner JOIN CP_CORE.dbo.Account account with (nolock)
                        ON account.id = trans.account_id
                    inner JOIN CP_CORE.dbo.HOLDER holder with (nolock)
                        ON holder.id = account.holder_id
                    inner JOIN CP_CORE.dbo.Retailer retail with (nolock)
                        ON retail.id = holder.ref_id and holder.holder_type_id = 2
                    inner JOIN CASH_PLUS.dbo.shop shp with (nolock)
                        ON shp.nid = retail.shop_id
                    inner JOIN CASH_PLUS.dbo.ProductType prType with (nolock)
                        ON prType.nId = trans.product_type_id
                    LEFT JOIN CASH_PLUS.dbo.Detaillant_Comissions_Trx shopCom with (nolock)
                        ON shopCom.nTransactionLogId = trans.id
                    LEFT JOIN CP_CORE.dbo.LOG_TRANSACTION transCom with (nolock)
                        ON transCom.transaction_id = trans.id  AND transCom.product_type_id = -1
                    LEFT JOIN CASH_PLUS.dbo.V_SUB_PRODUCT subPrd with (nolock)
                        ON subPrd.nid = trans.product_id and subPrd.nType = trans.product_type_id


where   trans.created_date > '2024-07-12 11:47:47.860'</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>846</xloc>
      <yloc>97</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select sShopId as code ,Action_Request.product_type, Action_Request.product ,Action_Request.date_created as date_annulation
,nTransactionsId,refunded_amount,nAmount,refundTotalAmount,sNeiCode,cancelDate
from Action_Request
left join shop on Action_Request.shop_id = shop.nid
join CashRefund on   Action_Request.id = CashRefund.action_request_id
join TAOHUB on TAOHUB.nTransactionsId = Action_Request.record_id</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>843</xloc>
      <yloc>25</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from TAOHUB 
where nTransactionsId  in (95559133,
93303038,
93307325,
93301129,
93304956,
93304964,
93306442,
93307810,
93308688,
93313768,
93314887,
93314896,
93314898,
93316431,
93318396,
93318413,
93319646,
93329624,
93329817,
93329866,
93320254,
93321166,
93322074,
93322076,
93322078,
93323965,
93325919,
93326431,
93327024,
93327813,
93327822,
93328544,
93331403,
93332761,
93334991,
93335903,
93337006,
93337723,
93339070,
93344836,
93347149,
93348505,
93348966,
93360285,
93351700,
93357061,
93365117,
93365124,
93366935,
93368141,
93368947,
93377821,
93379330,
93382095,
93382893,
93385815,
93389634,
93392415,
93392954,
95557732,
95563957,
95564951,
95558575,
95558880,
95561046,
93307330,
93307337,
93300616,
93304960,
93310138,
93311602,
93313232,
93314890,
93316609,
93329631,
93322346,
93323994,
93325926,
93327614,
93359977,
93330686,
93333797,
93335683,
93337010,
93337735,
93339015,
93339129,
93342345,
93347000,
93347005,
93353366,
93354982,
93355168,
93355920,
93356664,
93356668,
93358308,
93360815,
93361693,
93366077,
93377372,
93380563,
93385527,
93390168,
95561478,
95562747,
95557711,
95567960,
95568202,
95568745,
95564451,
95564689,
95565783,
95565940,
95566651,
93307328,
93303904,
93303917,
93302096,
93306053,
93306054,
93309228,
93310133,
93311389,
93311599,
93312077,
93312776,
93316613,
93318345,
93318535,
93318835,
93320260,
93320261,
93320643,
93322068,
93322071,
93323997,
93327826,
93328251,
93359529,
93332013,
93334190,
93334406,
93334565,
93335900,
93338030,
93345576,
93346452,
93347003,
93357188,
93357746,
93363402,
93366933,
93369463,
93371610,
93379931,
93389057,
93391265,
95561866,
95562772,
95568701,
95568748,
95563644,
95565027,
95558786,
93303127,
93303472,
93303900,
93303902,
93301327,
93307697,
93310135,
93310384,
93311605,
93314908,
93316615,
93316737,
93329617,
93329622,
93320263,
93320621,
93325895,
93327809,
93331399,
93333064,
93334563,
93335819,
93335905,
93340908,
93340910,
93341607,
93342346,
93342348,
93342667,
93345578,
93346267,
93346352,
93346986,
93348501,
93349948,
93351377,
93351696,
93354608,
93354983,
93361226,
93363355,
93368949,
93373366,
93378075,
93385817,
93385819,
93387433,
93391504,
93393809,
95561892,
95562581,
95568742,
95563215,
95563844,
93303910,
93302229,
93304713,
93306052,
93308701,
93309099,
93311261,
93314485,
93314893,
93316616,
93318400,
93318673,
93330158,
93358450,
93320264,
93322082,
93325917,
93327534,
93327824,
93359014,
93359252,
93331400,
93333188,
93333750,
93334562,
93335906,
93337005,
93337955,
93338578,
93338730,
93339817,
93339820,
93343230,
93343388,
93344296,
93345577,
93347515,
93348352,
93353811,
93356163,
93358046,
93367670,
93368948,
93382092,
93387430,
93393034,
95562046,
95562049,
95562280,
95557054,
95563214,
95563321,
95566858,
95560942,
93303211,
93303765,
93303908,
93302093,
93302100,
93308694,
93314909,
93319960,
93317398,
93318183,
93329975,
93322072,
93322873,
93325161,
93325437,
93325720,
93325924,
93359978,
93330406,
93333063,
93336439,
93336994,
93337012,
93338576,
93341604,
93342830,
93342858,
93343227,
93344298,
93344814,
93346998,
93350026,
93350713,
93351702,
93353364,
93354980,
93361690,
93363401,
93363829,
93365114,
93367082,
93368951,
93370462,
93372185,
93372461,
93379930,
93384905,
93388864,
93388865,
93393651,
95561737,
95567586,
95564886,
95566753,
95559134,
88994534,
93303345,
93307335,
93302104,
93306370,
93310136,
93313178,
93313234,
93314358,
93318392,
93329623,
93329629,
93322077,
93325371,
93325923,
93327311,
93331404,
93331618,
93333060,
93333561,
93334557,
93337007,
93340382,
93343285,
93344254,
93345581,
93346040,
93347229,
93348504,
93350018,
93350024,
93351092,
93353053,
93355499,
93356362,
93357510,
93360422,
93361510,
93365119,
93366630,
93366911,
93366934,
93385488,
93385816,
93387865,
93389986,
93394653,
95567196,
95557713,
95557774,
95558500,
95567985,
95564059,
95564950,
95565463,
95559725,
95559776,
95560555,
95560943,
95561333,
93303906,
93303916,
93306055,
93306056,
93306286,
93308693,
93311586,
93311601,
93314905,
93314924,
93315705,
93316612,
93318834,
93317649,
93317959,
93322052,
93322069,
93323285,
93323497,
93324262,
93327781,
93327805,
93327828,
93328175,
93359317,
93333204,
93333596,
93335902,
93339071,
93339690,
93339935,
93340913,
93341284,
93341600,
93344802,
93346060,
93346999,
93350798,
93354630,
93354979,
93360731,
93365087,
93370374,
93373365,
93375649,
93379929,
93380930,
93384749,
93387434,
93388867,
95562005,
95562045,
95562096,
95557708,
95568746,
95564454,
93303914,
93300904,
93302102,
93305322,
93305540,
93306058,
93308691,
93308700,
93310145,
93312474,
93314892,
93314918,
93318395,
93318735,
93319709,
93318016,
93320258,
93322079,
93325925,
93327820,
93327830,
93327834,
93330451,
93330733,
93331402,
93332647,
93333821,
93336431,
93337004,
93341602,
93342014,
93345575,
93346028,
93347006,
93348000,
93348506,
93351701,
93351938,
93355630,
93356665,
93362540,
93362573,
93363874,
93365113,
93365116,
93366936,
93368952,
93371115,
93373362,
93386761,
95556795,
95561878,
95562048,
95557167,
95558337,
95567721,
95564096,
95559135,
95560297,
95560941,
95561243,
93302969,
93303318,
93300271,
93300810,
93304536,
93306062,
93306869,
93308690,
93310142,
93311904,
93313233,
93313235,
93313240,
93314376,
93314885,
93314900,
93314911,
93316618,
93318393,
93318411,
93320252,
93325384,
93325921,
93325922,
93327811,
93327837,
93359858,
93359974,
93330840,
93331405,
93332046,
93333059,
93334454,
93334558,
93335706,
93335757,
93336869,
93337008,
93340177,
93347518,
93348499,
93350019,
93350021,
93351698,
93353367,
93355209,
93356829,
93362720,
93364246,
93366723,
93377823,
93381005,
93382093,
93384025,
93389411,
93391946,
93392256,
95562893,
95567180,
95567199,
95557606,
95557317,
95563213,
95563216,
95560726,
93301838,
93302376,
93304958,
93308695,
93313911,
93316610,
93318402,
93318539,
93318099,
93329619,
93323211,
93323996,
93324519,
93324575,
93325166,
93327804,
93359791,
93333166,
93333328,
93335901,
93339072,
93339818,
93340734,
93340912,
93343038,
93345735,
93347008,
93356662,
93356663,
93358306,
93365120,
93371112,
93373368,
93375651,
93377825,
93378211,
93385821,
93391205,
95562047,
95568744,
95568747,
95568868,
95563097,
95564453,
95565282,
95565785,
95565788,
95559993,
93302734,
93307327,
93307334,
93304382,
93304957,
93306803,
93307457,
93308696,
93310134,
93310474,
93314928,
93316611,
93318406,
93318658,
93329466,
93320262,
93320681,
93322070,
93322710,
93323995,
93324525,
93358643,
93359581,
93359973,
93333066,
93334694,
93335899,
93336245,
93337949,
93337984,
93338404,
93341606,
93344581,
93347009,
93347010,
93349130,
93349513,
93350020,
93352852,
93358307,
93361692,
93365393,
93368215,
93371111,
93377824,
93379932,
93382949,
93387669,
93388740,
93388866,
93390003,
95562199,
95565786,
95565787,
95566122,
93302968,
93303271,
93303541,
93307326,
93307341,
93301379,
93305318,
93305390,
93308663,
93310143,
93313236,
93313241,
93314895,
93314922,
93315146,
93329620,
93320251,
93321909,
93322075,
93323790,
93325920,
93326605,
93327810,
93328046,
93331398,
93332374,
93334559,
93334564,
93335200,
93335904,
93336390,
93336593,
93337009,
93337703,
93337879,
93340142,
93340907,
93343229,
93343287,
93348502,
93350022,
93351697,
93356669,
93361688,
93364557,
93368946,
93369906,
93374376,
93377822,
93382094,
93382097,
93384886,
93387698,
93392953,
95562232,
95567198,
95567725,
95563212,
95563752,
95564004,
95560602,
93303811,
93304962,
93306051,
93306060,
93307786,
93310137,
93312027,
93313068,
93313231,
93316617,
93318972,
93318031,
93329541,
93329928,
93330137,
93320265,
93321419,
93322073,
93327807,
93359976,
93331334,
93331401,
93333062,
93334561,
93337974,
93338577,
93344211,
93345580,
93346830,
93347001,
93348383,
93350023,
93350025,
93350944,
93353365,
93354981,
93356070,
93356152,
93361131,
93361694,
93362190,
93365389,
93366845,
93367431,
93372952,
93374093,
93377422,
93379933,
93382323,
93382612,
93386920,
95567195,
95560940,
93303053,
93304954,
93309112,
93310073,
93311604,
93311606,
93313239,
93314902,
93314926,
93314930,
93316607,
93318398,
93318404,
93318409,
93329626,
93320472,
93322080,
93323992,
93324554,
93325212,
93327808,
93327817,
93327831,
93328431,
93328560,
93333752,
93334885,
93335907,
93337627,
93337792,
93337880,
93340911,
93341599,
93342347,
93342996,
93345574,
93346027,
93346080,
93347007,
93348509,
93349232,
93350387,
93354304,
93354800,
93356659,
93361695,
93362204,
93363286,
93364060,
93364548,
93365115,
93369857,
93370825,
93373364,
93373367,
93375650,
93378654,
93380236,
93385263,
93387432,
95568743,
95564452,
95565285,
95565380,
95565883,
95561133,
93303501,
93307332,
93307339,
93303912,
93301377,
93302095,
93304337,
93304955,
93305401,
93306458,
93308241,
93308689,
93308698,
93309047,
93310141,
93312063,
93313238,
93316608,
93318397,
93318610,
93319918,
93320256,
93322081,
93323993,
93325810,
93325918,
93325927,
93327619,
93327818,
93328457,
93359979,
93333673,
93335833,
93336700,
93337011,
93337426,
93339814,
93342446,
93344297,
93347004,
93348508,
93356667,
93358309,
93365123,
93366688,
93366932,
93368950,
93371113,
93371962,
93379181,
93382099,
93384024,
93388379,
93389250,
95562978,
95566992,
95567200,
95558517,
95565784)
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>414</xloc>
      <yloc>68</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select *  from Transactions_Documents 
where nid >58394329</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>544</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 2 4</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql> select * from Facturiers_Transactions
 

 where year(dInsertion) = 2022 and month(dInsertion) = 2</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1005</xloc>
      <yloc>186</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from [cp_core].[dbo].[ACCOUNT_SHOP_LINK]</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>240</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from Transactions_Documents
where nid >18550209</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1280</xloc>
      <yloc>83</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from TransactionsComplements
where transactionId  > 102300305 


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1284</xloc>
      <yloc>183</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from Partner_X
where nTransactionId in (143905024,
143196232,
145643818,
144562590,
138686008,
145801681,
145881350,
145637116,
147987283,
143715470,
141370415,
147678448,
148057436,
138527813,
144354978,
140811820,
145615464,
145615479,
148268023,
147976900,
145637173,
145637183,
145640523,
147235890,
144772384,
145632632,
146235737,
143610272,
145615686,
145615707,
140236908,
145610087,
145610100,
146611470,
146611473,
147659216,
138486134,
142413351,
142413364,
146072916,
148115541,
146335184,
148168849,
141755039,
142790146,
146346719,
145632779,
145632782,
145632822,
140295231,
146305969,
147428005,
140816043,
148059828,
140943398,
144417037,
142137459,
139154445,
140955375,
145329133,
145911606,
148213375,
146604702,
139209077,
138992727,
143533062,
146999711,
145309637,
144652003,
142887355,
142070999,
140237019,
143533067,
141891878,
139300854,
145644888,
145644902,
145096449,
145644916,
143784914,
142469274,
147191504,
145615202,
145615216,
145617860,
145643780,
145643794,
138689863,
141207256,
145477564,
145643865,
145643884,
145618101,
140129376,
145618146,
145618153,
145618164,
140324989,
146260774,
139197936,
145637032,
145637035,
145637036,
145637053,
145631223,
145219123,
146255081,
138630045,
144814082,
141229385,
142123288,
141922368,
145612120,
145612135,
148272580,
146821387,
146201258,
138960214,
146981983,
145632714,
146628008,
145610154,
145610165,
145610171,
143717478,
145610215,
141946327,
144377550,
146174576,
146174590,
142050396,
139519323,
145619181,
142156441,
144538335,
145620311,
141065697,
144965197,
142788764,
144722439,
142881362,
145511603,
145612872,
145272920,
145612889,
143718522,
146049250,
146941750,
145612910,
145612914,
144498412,
145609798,
145609807,
144975697,
144927877,
142483723,
143667879,
142071734,
145652177,
138569605,
145636966,
145636978,
145636983,
146878608,
138602074,
144124859,
141362533,
143188164,
145643958,
145643969,
145643973,
147948736,
145615381,
145615396,
144397332,
140744141,
144418812,
142076578,
138583541,
145640704,
145640711,
142162755,
138444971,
145632805,
147128319,
145615759,
145615773,
145615774,
145618889,
144528250,
144528254,
139163439,
144103199,
142628041,
145918504,
143049496,
148304387,
141738576,
145195656,
147096417,
147096418,
147880868,
147780303,
145716847,
144256857,
142898672,
142628044,
144821534,
148240644,
139034234,
142456795,
144403527,
147861531,
140478575,
142776104,
147364859,
143384616,
147185577,
142165039,
138692774,
146193531,
139307626,
139706729,
144408358,
146149775,
146205552,
145618037,
145618051,
143050758,
140117687,
144923966,
144923970,
145801696,
140794545,
144844119,
145756481,
141256508,
147716104,
147716105,
148271645,
145612149,
145612161,
145612197,
146384906,
146384923,
147160926,
142946654,
140620990,
146567161,
144279090,
145612488,
145612492,
140276329,
147845450,
146950833,
140924975,
145644952,
138781013,
140743214,
147337194,
146771090,
142691412,
145638871,
141995682,
142379105,
147358934,
147358939,
147358948,
144934423,
145638887,
145638894,
143676078,
140909682,
146459844,
147358970,
147358972,
148169814,
138829771,
145638924,
139612451,
144848355,
147358976,
147358996,
143223241,
138445529,
140205952,
148219941,
145638934,
147746022,
147359010,
147359013,
145725032,
142771179,
145638954,
145638963,
145538254,
146145596,
144258905,
139378815,
146502880,
143867263,
139919165,
147318870,
145615220,
145615238,
138665016,
141200460,
147873549,
138972722,
139229951,
141369580,
146123882,
139063232,
145637062,
145637066,
146202218,
142509569,
143407331,
144851698,
147160699,
145876336,
147148002,
140217875,
145612239,
142319860,
143663368,
139091930,
146099840,
139094799,
145640739,
141994855,
145640828,
143891020,
144705945,
144196857,
143421650,
145571341,
143587272,
139385410,
142316317,
138944471,
145618916,
145618955,
139370784,
145620335,
147794201,
146428363,
145610999,
142149388,
144430824,
147773208,
139577713,
145620350,
145620357,
147045154,
143142201,
147794207,
139278667,
145611005,
145611008,
142149407,
141286411,
141286412,
145620377,
143955113,
145611039,
142125882,
142084294,
142093131,
141625482,
145620398,
141506064,
145448717,
145611057,
147250898,
144220389,
145620422,
147894944,
143928690,
140860018,
145658213,
138462656,
145611239,
145611244,
144697638,
142916094,
144903923,
145645220,
145645223,
145645227,
145645237,
139280551,
145611252,
145611258,
141535765,
142669496,
147980573,
145643799,
145643815,
143144922,
146211325,
143499876,
139155276,
142135107,
140693097,
145637101,
145643892,
144397026,
145944133,
142969579,
143769758,
147678447,
138527814,
145612059,
145612060,
145615478,
145637184,
145758290,
146519478,
142479236,
143973611,
145632621,
145632631,
138575462,
141586693,
145615689,
145610101,
146912024,
138693797,
145610184,
145610198,
142769610,
147190409,
138542342,
140426573,
142889174,
145637338,
145637343,
146161360,
139022373,
146088999,
141040387,
145632828,
146972898,
145716772,
140332773,
138849146,
140157781,
147567489,
140090914,
147219450,
139389054,
148087704,
145554276,
139344316,
146999705,
147113533,
145570226,
147219461,
139487193,
145260455,
138590868,
143533074,
147219481,
147219484,
147219496,
148049638,
141014249,
145289574,
139434209,
139434213,
145644899,
147094741,
139805715,
145644917,
146917791,
148227529,
141000739,
146588607,
146588609,
145615201,
145615205,
145617857,
145643783,
147220788,
145643869,
145643874,
147403399,
145618100,
145618115,
145618118,
145618163,
145631222,
145631237,
145219124,
148023970,
139585891,
140542088,
145259331,
145009697,
145899511,
139529159,
145610077,
139331442,
145983110,
141068087,
141068088,
143923696,
145632709,
145632711,
144126138,
146329568,
141108870,
144979080,
145610168,
138950743,
145610200,
145610204,
145610205,
145610218,
142992678,
146307272,
146032487,
145511597,
138600878,
139384164,
145620301,
145620304,
141065687,
144773172,
145954948,
147493743,
142904811,
142254255,
145612865,
147151729,
148152014,
141235493,
145612896,
146049251,
140830726,
146292470,
142733503,
145612909,
146656234,
146656239,
146975814,
144498425,
144013287,
144013288,
145609804,
143143271,
142718199,
146901607,
144827664,
145636969,
145636981,
145631172,
141321163,
145643972,
145615375,
145615383,
139482556,
144418796,
139633553,
140244817,
141014985,
139989096,
145195307,
145640721,
140372953,
148057057,
144343003,
146119821,
145632804,
138743686,
138673527,
141361744,
145615756,
145618890,
138900330,
142503861,
145640926,
145640927,
145640930,
143366663,
138973746,
145447956,
145913910,
144528249,
146241332,
138718056,
148304370,
148304384,
142164975,
147597983,
140642976,
141683779,
144524401,
144808866,
146962776,
146563211,
139194042,
146712119,
139603882,
145260245,
140478573,
147123989,
138687032,
139307624,
140529701,
140529705,
143095574,
144089036,
147891064,
147891065,
140006245,
141337690,
141121458,
145685076,
139575808,
144825977,
138676414,
142219415,
145618036,
143301563,
146447693,
141760128,
144907410,
140191425,
142157267,
146264775,
145688768,
140185418,
138800372,
147165723,
145810169,
144281763,
145247531,
147618362,
146518175,
139878132,
139570959,
145612489,
139990668,
140276316,
141361542,
140546055,
145644934,
145644937,
145644951,
144751900,
141388849,
147124642,
147124652,
145638858,
145638868,
147358933,
142310165,
144446299,
138565881,
147358967,
144113216,
138729454,
145638904,
145638910,
146636610,
144606279,
146964028,
147358995,
144648221,
145638935,
147358997,
143493198,
138870427,
147359031,
139292285,
138949165,
138607838,
146211817,
143699171,
143699189,
145531317,
143694468,
146528224,
142915328,
145615223,
145615227,
145617885,
145617886,
144800542,
144800547,
144507635,
147948356,
146259219,
146259220,
141369581,
145637057,
145637069,
146377043,
142832040,
145771851,
141554140,
143256531,
145472950,
145612242,
145615658,
138734108,
143654758,
145557242,
142174025,
146357204,
141756837,
144087775,
145640736,
147963478,
145002990,
139345603,
145640829,
141948066,
139884791,
143207093,
145571340,
141250131,
144933537,
148162019,
146524859,
145615780,
145618910,
145618957,
147166765,
146717740,
140945605,
145620329,
145936098,
144862241,
140850000,
145610981,
145610984,
145610998,
142149394,
144428977,
146710827,
139413480,
142741504,
147757007,
142945111,
146197687,
145620374,
145620378,
143814954,
145611036,
140734144,
141592491,
143945713,
147556472,
147556481,
148197980,
145620395,
145519856,
143564304,
146041540,
147347847,
145611055,
145611058,
143970523,
143970534,
143970537,
142149448,
148094336,
140339901,
145620416,
139653820,
145611231,
145611236,
146457722,
145645238,
147060499,
142059474,
144797345,
145611255,
145681868,
142669493,
148094533,
140342053,
142104346,
144591457,
145645256,
141073498,
147221612,
145611287,
140342078,
138839402,
145643812,
145643817,
143453322,
143499877,
145225062,
141100236,
143470119,
145643893,
141795084,
138527803,
138527812,
145612061,
145612062,
145615480,
145615481,
145637185,
145360211,
147629622,
141769166,
140799753,
145615687,
145615692,
146429308,
145610183,
145610197,
147467301,
140175619,
140426572,
145127659,
139871175,
146346712,
145211915,
140720654,
145632781,
145632821,
146305970,
144528996,
144528999,
140816030,
142208995,
143705043,
147214930,
143153210,
148242905,
147459739,
147219452,
139508934,
139508938,
139508939,
138942626,
139087457,
146999704,
145217998,
144207864,
140771536,
142887354,
146206112,
139202064,
143813926,
143533068,
141551425,
144605409,
144531032,
138572213,
147219483,
141816097,
142329775,
148208074,
144649539,
145644931,
145218081,
138495812,
147184069,
148181808,
143784920,
144300254,
146980218,
145615217,
145643778,
145643781,
145643796,
146753737,
145898589,
143435194,
145618102,
145618103,
145618151,
145618152,
145618162,
138530901,
145636988,
145637034,
143407293,
140812915,
145631224,
145219122,
139381059,
141423480,
139048962,
146334978,
145899509,
140311877,
145610076,
138623365,
147882157,
145632707,
145632710,
146043092,
144979076,
145610166,
145610173,
145610203,
145610206,
142586782,
147185002,
139160628,
144786871,
146574304,
143054499,
142156440,
144538337,
145620299,
145620314,
145620317,
145689310,
142039279,
147493745,
144965194,
147174481,
147812313,
139861641,
140481719,
145045151,
138886193,
145612866,
145612871,
144567736,
145612890,
145612895,
142323009,
143223973,
147221385,
143323722,
141060747,
142424579,
147802577,
140870196,
145609806,
145609809,
145609820,
145420586,
141861653,
146901608,
141691233,
145636967,
145636980,
139639079,
145944125,
144902093,
145643956,
139191573,
140133970,
145615380,
145615382,
143066446,
138704922,
142321252,
141861770,
141014983,
144676606,
145822759,
142867195,
145640710,
147425085,
138533718,
144774467,
139204054,
140480095,
146989858,
145615758,
145615772,
145618902,
138900328,
145640928,
145640929,
145312230,
138870160,
145203405,
143868577,
147243260,
144528255,
139163433,
139163440,
145918509,
143951275,
148304371,
139461675,
139603876,
147048691,
144524395,
141865081,
147130486,
146780774,
144024906,
143245035,
147338364,
139481474,
140907441,
146862813,
140006243,
142126624,
141337691,
141389428,
146149774,
147628603,
142219417,
145618035,
138933966,
146479726,
139619577,
143270860,
143748878,
142315975,
142189554,
146143818,
146195049,
144153032,
147218057,
145612162,
145612192,
145612198,
146804384,
142240991,
144861595,
147228630,
143022737,
140924973,
138434844,
145644950,
145644953,
139300922,
145413378,
147174654,
144572735,
145638869,
146296862,
142839193,
140202757,
147358949,
147358950,
143475729,
144446301,
145638888,
143684469,
145325002,
147358969,
145901255,
143997992,
142411053,
145638925,
146636616,
144606277,
142831030,
139927783,
145403345,
147358977,
147358994,
143223248,
144648212,
146079664,
138496453,
147141055,
145638936,
147991267,
142979034,
145403363,
147358998,
145725033,
142654775,
142771173,
139722499,
142108923,
145928432,
146097380,
143192471,
147359032,
147359034,
139435125,
145585607,
140555738,
142915329,
138608058,
142872045,
145420585,
145081229,
147748072,
148165669,
142007117,
147149026,
143443394,
141392764,
144221334,
147678434,
145771853,
146985669,
138439463,
144099418,
144708235,
145876337,
145615653,
145615656,
145615659,
140247491,
145929234,
147957914,
145640727,
146335172,
142677905,
142677906,
145640826,
145640827,
144766545,
141948067,
139836348,
143988749,
144744199,
139714707,
147283128,
143207099,
148249706,
147381479,
138512015,
143741101,
145618911,
145618917,
145618971,
145618973,
140296121,
143887765,
142741494,
147592667,
143243140,
141350385,
142863299,
145463981,
141414794,
140849997,
145611000,
146716685,
144428975,
141838331,
142741500,
145620344,
145620352,
142972937,
145060449,
142989462,
139278668,
139278669,
143442465,
145611006,
147124830,
143945143,
143349321,
146997902,
142067798,
142994535,
140268741,
143814953,
142131383,
144429018,
145620397,
147949369,
146041541,
146041542,
139278720,
145611054,
144986041,
141945099,
145620417,
145620423,
139653811,
145093558,
140040929,
145611230,
145611242,
145611245,
148000201,
145645221,
145645222,
145645236,
142554636,
145820882,
144765538,
144416125,
145967455,
138839407,
139870363,
142855975,
144733870,
140152845,
145637100,
145637102,
145637113,
145637120,
147562810,
145643905,
146511967,
139203202,
145615466,
144391402,
147133849,
145637172,
145637186,
145640519,
145640526,
140107916,
147306907,
147708511,
145632616,
145632625,
145632630,
145435732,
147375540,
145615702,
145610102,
145610179,
145610193,
146048796,
138872665,
138872675,
145637328,
145637333,
145637344,
139366551,
145632827,
144647357,
147448773,
142841018,
142124181,
146984740,
146071409,
141934410,
141940265,
142969362,
146786992,
141914729,
147183979,
143533063,
144179105,
148199590,
147153034,
141584992,
144352223,
142044186,
147219478,
144674500,
144674501,
141753875,
145644898,
145644905,
148213450,
141727141,
140266461,
147979953,
144388431,
145644914,
147881163,
142912036,
146980203,
141484499,
145615199,
145615204,
145615206,
145617858,
144562584,
145854452,
145643868,
145643880,
145643886,
142036636,
145618113,
139806585,
145637008,
145637009,
145637041,
145637048,
145631219,
145631233,
139035526,
139585894,
147125408,
138630038,
145724125,
145750328,
145750341,
146654270,
148013698,
147842203,
145612131,
145612140,
142070167,
146907300,
145610078,
141068075,
141068082,
140000213,
141896099,
139944138,
146628020,
143462047,
145610155,
145610216,
146456724,
144377555,
147104438,
145511587,
143456050,
142050397,
142186458,
145897657,
140003263,
147183718,
144732187,
147452573,
142176340,
142762421,
139251159,
141235474,
145692733,
142232208,
147985563,
145612881,
143718525,
139417821,
140466439,
139898096,
146292472,
146292483,
140984548,
145612911,
145612912,
147985594,
145031773,
142763329,
143154835,
148180699,
139360574,
146568694,
145636965,
145636972,
145636982,
144794980,
144445345,
147213221,
145643968,
145643970,
145643975,
145611983,
144077921,
144317233,
143895317,
143679773,
141647679,
145640706,
145640720,
147134272,
147785990,
140014928,
144342996,
140918210,
145632810,
138512003,
143288319,
145618887,
145618892,
148080859,
138611444,
148304374,
139461677,
145432323,
141342614,
141782522,
140675496,
145443161,
141428951,
140755306,
146607933,
139197725,
147123983,
144719173,
147853013,
140867669,
144478213,
142776103,
147762543,
147123985,
143549694,
139748266,
139748275,
145994517,
140304258,
141281447,
145486522,
145486528,
145486531,
148018266,
147891052,
147231238,
141252176,
148137059,
144255864,
145618031,
145618042,
145618049,
145281701,
138975769,
144734675,
144754586,
143270862,
138724213,
139917045,
147167846,
147708007,
140134468,
148205351,
145688772,
140708084,
145176575,
141900392,
138565023,
142992430,
145612146,
144789314,
145612203,
139077879,
148075840,
139678628,
145612476,
145612483,
145612487,
145612494,
143689052,
141852589,
138577134,
147545199,
138434843,
144325249,
145644935,
145644940,
142236120,
139382059,
138565878,
145401668,
142266812,
147358935,
145752204,
141927614,
141931375,
145143895,
138829765,
145638912,
142292770,
146420990,
144737879,
147358979,
147358992,
142594670,
144440318,
145638930,
145638937,
139612472,
139612473,
143941074,
147359015,
145725036,
142654780,
138663404,
146196648,
143107461,
145638953,
145638960,
145638967,
145538253,
144199401,
139292297,
140207769,
145811840,
138992274,
143827574,
145226828,
143980710,
142049755,
147826032,
141028381,
139058590,
143274823,
145615222,
145615225,
145615232,
145617883,
146976157,
141943100,
147179148,
144052265,
145389739,
147217717,
139760700,
144231984,
142404043,
147436956,
145637056,
145637064,
145637067,
148108413,
140128072,
146573345,
145508814,
144668811,
144185249,
143559065,
145909496,
148140344,
141752790,
144855784,
146720887,
145612240,
145612245,
146991574,
142174015,
141756839,
144338952,
145640732,
145640738,
145640741,
145640815,
145640816,
145640834,
140250904,
139324510,
145571339,
142520985,
146992922,
147127544,
144696771,
139842640,
139842647,
144000537,
146614914,
145615777,
145615782,
145618922,
145618952,
145618959,
142800481,
144969204,
142733786,
145628144,
144662741,
147522235,
145620333,
139610634,
143076373,
140212099,
145233893,
145610980,
145610987,
139413482,
142678866,
142432684,
145620363,
146239769,
139295433,
146580647,
139202358,
148008513,
138651796,
138651798,
145620375,
145620380,
138791902,
145611037,
144429024,
144429031,
144234348,
145620399,
145519845,
143564316,
143928684,
147347852,
145611056,
140244557,
145776333,
138686009,
147625158,
144748071,
146070693,
147742595,
145240745,
139684753,
145637117,
145637119,
145643902,
145643907,
145643908,
141799547,
143971256,
142675788,
143090334,
147179363,
145637167,
145637168,
145637182,
145640507,
145640521,
145640522,
144187402,
144187407,
143573321,
143363723,
144202595,
147608286,
145632620,
145632622,
145632633,
146235738,
145734158,
145615706,
145610099,
145610178,
140046687,
146335186,
143184930,
138542344,
139917295,
139723889,
147993023,
145637323,
145637324,
145637337,
145637340,
145632777,
145632780,
142390532,
145773571,
139355451,
144780811,
142921290,
147514211,
146659971,
148199586,
147799445,
145260454,
144301089,
144061223,
141028688,
145644884,
145644885,
142044181,
145644901,
142534647,
142044193,
140997828,
145289596,
146204717,
145644915,
145644918,
141682453,
138577991,
141913742,
145615200,
145615203,
145615218,
145617852,
145617859,
145643795,
144529672,
145643872,
145643875,
145643885,
141798825,
145618098,
145618099,
145618116,
145618117,
148266324,
145637005,
145637037,
145637038,
145637051,
145637052,
145631221,
145631236,
145631238,
145631239,
139035524,
138630046,
145886818,
140523492,
144595430,
145612119,
145612133,
145612136,
141458997,
142070163,
138452276,
145610064,
143079420,
142406384,
145632712,
145610167,
145610199,
145610217,
142130447,
145234815,
146196143,
140912849,
140197665,
142634323,
139519324,
145619182,
142186457,
145897661,
144724048,
148257003,
145045153,
145692717,
140266904,
144023044,
139985644,
141742983,
143718520,
139643120,
144025062,
148264790,
143006164,
146941751,
145612908,
145612915,
145558009,
145789914,
139010673,
142734433,
142950218,
147102281,
145636968,
144670650,
145631170,
144324589,
141894169,
145643971,
145643974,
144480091,
145611984,
140725280,
145804333,
144418794,
143679778,
146333220,
141647683,
148248088,
142976065,
140629586,
148147403,
146340638,
147143108,
147143115,
145632806,
141953492,
142392718,
146182962,
143163822,
145137047,
140130238,
143228235,
145615757,
145618888,
145618891,
140473113,
142503860,
141550988,
147002692,
145358864,
147545856,
148304373,
148304386,
142113088,
147002708,
147048692,
147972540,
145918515,
147853017,
146919493,
141106265,
140478574,
142776102,
146113701,
144358437,
144821573,
143384615,
145775215,
147797299,
148137051,
148251126,
146021326,
144936160,
142165065,
141622556,
146021346,
144255867,
142748418,
145622864,
141814263,
140346798,
142658307,
145267437,
145618052,
145618053,
139249968,
142315976,
145317357,
140604056,
147184899,
147184902,
140722533,
142098909,
145688770,
142856668,
141704104,
146435292,
141681131,
140733085,
145612207,
138475275,
146518174,
141072719,
142413371,
142248535,
139534637,
141566113,
139910094,
145612490,
145612491,
140790725,
141852586,
143555118,
146573568,
142965067,
145644936,
145644939,
141155161,
145413368,
140377781,
145638870,
139739506,
147358932,
145103696,
148072433,
141027720,
145638893,
145638903,
147318557,
147358971,
147705961,
145143899,
141367914,
148144590,
138829761,
145638908,
145638911,
143684476,
145389000,
141053477,
147178277,
143330969,
143330970,
145638933,
140697945,
141073278,
147359011,
147359012,
142412121,
145638964,
145638965,
145638970,
148058795,
142289811,
146502881,
147519569,
141717632,
147248493,
144537788,
139919163,
142259863,
141110977,
145615221,
145615226,
145617884,
145617887,
145675468,
140414738,
138972725,
147828063,
147791121,
142882041,
146237571,
141440947,
139639073,
145637055,
145637063,
145637068,
140814011,
145229082,
143001992,
140280974,
143771550,
143803192,
145195016,
147116702,
145612241,
145612244,
144708277,
145166081,
147490605,
145640737,
145640742,
144908057,
143242393,
146696063,
143207092,
145571342,
139547504,
147458050,
148035271,
140338978,
140446816,
147128384,
148222890,
147128430,
146614918,
145615781,
145618926,
145618958,
143325505,
145723160,
141422857,
139405112,
139461847,
145620334,
145936099,
145233892,
141929555,
139386338,
145610982,
145610983,
142149389,
146239770,
146239773,
139295438,
139514103,
145620366,
145620376,
145620379,
143269474,
145611038,
140053239,
144429015,
145620396,
147650983,
145611059,
145611060,
138723485,
148094337,
147716552,
143928691,
143681059,
138462654,
138462657,
145611237,
146948280,
145466174,
141075241,
141965384,
145868078,
145868086,
145645239,
142844950,
145643802,
145801677,
147551155,
147186748,
142555767,
139183394,
139999363,
145637115,
145643889,
145643906,
138691760,
144244638,
140811824,
139570946,
145637169,
145637170,
145637179,
145640505,
145640520,
139507034,
142110792,
138432902,
145632611,
145632623,
147375533,
141237394,
145610195,
141335262,
145632778,
145632783,
146305973,
143606323,
147327921,
146116886,
140594185,
144417034,
142944685,
145735340,
139245433,
145329127,
145329137,
139508933,
145255937,
140745062,
148026179,
139229010,
146999708,
138685088,
145691393,
144191998,
145644886,
144352221,
142301647,
144220249,
145556073,
139726978,
142534644,
147970299,
147979943,
147979944,
147012072,
145644928,
140979993,
142958429,
145615215,
145617864,
145617874,
145643793,
145643798,
145948083,
146969938,
147214053,
145618149,
145618150,
145636999,
145637039,
145631235,
146894315,
145750327,
140597400,
145612124,
145612134,
140987370,
147084036,
140311879,
147207992,
145610080,
144812174,
147065371,
145632724,
145610170,
145610175,
142389685,
140785098,
146537950,
148057058,
147962803,
145620312,
145620315,
147237584,
147736904,
143284253,
144831612,
138547964,
147320973,
143702108,
146896717,
142254250,
145143682,
145612858,
145612860,
145492644,
143284255,
140901182,
147151717,
147183777,
145612885,
145162302,
140830731,
143300980,
140344135,
144888220,
142492438,
146025382,
143006170,
145360894,
147802578,
142614332,
145609819,
142916519,
141632219,
146009816,
145652167,
141863736,
145636970,
145636984,
143704332,
147133591,
143188178,
145643959,
145643961,
145615378,
145615392,
140656758,
144317242,
140354253,
143292016,
148244174,
140000294,
145640715,
145640725,
144751154,
139911904,
146558380,
143591523,
145632794,
145632808,
146227017,
138909366,
139828539,
146989862,
145615761,
145615770,
145618885,
145640941,
141980720,
146201571,
145679452,
146110397,
146398640,
145918507,
140092278,
148304383,
147418539,
141708284,
139034210,
139069386,
144719164,
138687011,
140022862,
142776100,
141729018,
140281404,
146021327,
143977062,
144936154,
147142004,
140900209,
142748416,
146555770,
145618033,
145618047,
146026734,
143510927,
145378178,
145565109,
148201803,
145821827,
145531850,
138883350,
147654549,
142957327,
145874506,
144844115,
144745461,
147184900,
147184904,
147184913,
140722535,
145739261,
146987609,
147880593,
146034564,
145612148,
145612160,
142758431,
145612186,
145612196,
139534642,
145493911,
145612485,
143423649,
147215827,
143103950,
147536184,
140743218,
142626005,
142626015,
141375330,
142691416,
145638867,
147358936,
147358951,
142754125,
142106036,
145638890,
145638891,
145638897,
147745972,
147358966,
147358973,
145638923,
146636617,
145403342,
147358990,
143223242,
139573133,
144825163,
147358999,
147359017,
139722497,
145638951,
145638966,
147359033,
144258902,
146502883,
144733022,
143827571,
147049698,
145383744,
147144721,
138432628,
145709351,
145615237,
143891850,
140414735,
138711625,
144659123,
139639068,
139895650,
145637058,
142509566,
142509573,
141392760,
147359120,
139289539,
146475565,
146452406,
144945607,
148260277,
144668820,
142870463,
139650681,
140827472,
145472941,
145612243,
144215477,
145425590,
146357192,
146357206,
146099826,
146713564,
145640743,
141747581,
142677900,
145640832,
142240999,
139385413,
139861147,
139828658,
138528691,
145618905,
145618915,
138900336,
145618954,
139427599,
146809866,
140945608,
145620339,
144862240,
146906467,
142149391,
143057110,
142260958,
139865902,
143808098,
138651789,
143849653,
145620353,
145620360,
142297470,
139278670,
139295440,
145611004,
145611009,
145611022,
141286418,
139676327,
145620373,
145611032,
145611043,
143628718,
144540612,
143243208,
145620394,
146041539,
145611061,
141945097,
146981587,
143074849,
145620410,
145620411,
145620421,
145611240,
145611243,
146948278,
145868081,
144903919,
145645224,
145645233,
144765550,
145093567,
145611253,
145611262,
148145000,
145645242,
145645251,
143944138,
145611273,
145611282,
143164669,
145645272,
145786922,
146646053,
147135078,
142038374,
145611305,
145611308,
143444936,
140226798,
144438204,
139212381,
142220650,
147477592,
141915213,
145675021,
141911462,
143982904,
142943676,
138615115,
143158308,
145620505,
148255103,
139934647,
144767445,
145635215,
145635229,
145643735,
146910457,
146910464,
145615337,
145615340,
145617992,
145618085,
145618090,
143067971,
142860975,
144444318,
145643800,
145643820,
147114793,
146506884,
143389301,
146216158,
143521360,
138662525,
145637109,
144718355,
145643899,
140115638,
145612068,
145615469,
145615473,
143627332,
139570941,
145637166,
145637175,
145640508,
143877082,
142110798,
145632612,
145632629,
147059464,
145615701,
142315290,
145610098,
145610105,
140987384,
147761164,
145610192,
147999763,
143184938,
145632770,
145632772,
145632785,
145632820,
145094591,
146719840,
143404102,
146575955,
147561981,
139508927,
139154448,
139362022,
141956977,
148070679,
140348363,
145691402,
139300850,
144061225,
139344324,
145188290,
147681825,
145556071,
148208065,
145621167,
143440064,
145096448,
143600860,
145644926,
142781708,
144561043,
145734919,
145615196,
145615209,
145617856,
145617862,
146233073,
139437052,
145643777,
145643791,
147170244,
145643879,
145618108,
145525346,
145618154,
145636996,
145637001,
145637046,
145631229,
141282271,
138630044,
145269733,
138461106,
141429647,
147931959,
145612125,
145610066,
145610085,
145983119,
145632719,
140806368,
145610159,
145610213,
143896744,
139497626,
146400403,
144422353,
141120107,
142176338,
142254248,
145612873,
142511601,
145219571,
139898077,
146489317,
144186305,
147151722,
142544566,
143223966,
145612887,
147178084,
139542759,
143300987,
143002684,
138954646,
140381994,
148153126,
142924929,
146350630,
145859153,
143998569,
145609813,
145609817,
141061643,
146260736,
141528818,
144827656,
141877832,
145643963,
145536780,
142593833,
145615390,
142250345,
143652508,
141617921,
141147874,
142076576,
141872387,
145822753,
145640713,
142573449,
142910127,
145632796,
145632811,
140094678,
140352650,
142170744,
146989860,
144426034,
145615764,
145618883,
145618896,
142465267,
145640935,
141463603,
139412748,
143366667,
144892832,
147243245,
138718057,
143049488,
148304376,
145283793,
139700141,
145433221,
144719169,
139034226,
146826989,
146430009,
143316749,
143384607,
143212036,
138983284,
140304257,
144558427,
145706444,
141489638,
146274528,
147688419,
140900207,
142748411,
145700838,
139425377,
142347938,
145618044,
145281700,
141543556,
148201794,
148210756,
145531843,
144386664,
143748873,
142509581,
145317360,
144945652,
145179213,
147607128,
145761672,
145612142,
145612143,
145612187,
145612199,
145612206,
142786043,
141455168,
145612479,
148040349,
143358221,
140071537,
142236117,
141070000,
147215056,
145413375,
140377776,
147132090,
146905751,
145638877,
145638880,
146296870,
145641381,
147358941,
146939931,
147395876,
138565888,
147135702,
145638884,
145638895,
147745967,
142266831,
143334402,
147318559,
147358959,
147358964,
145857182,
139798692,
138579668,
147705959,
138829762,
145638921,
144531864,
139612453,
140379985,
147358982,
147358987,
140430468,
144062863,
145638927,
145638944,
139953269,
147359005,
145397078,
145813582,
142771170,
145638956,
147359024,
147359039,
144807479,
146079723,
144479139,
144479158,
140734018,
147178322,
143867269,
146528231,
145615240,
145617878,
145617895,
140291132,
146259228,
146259231,
144702148,
145162138,
141867296,
144539035,
139170395,
145637060,
145454482,
141158352,
144668810,
147074065,
140540712,
147251751,
141034984,
147116710,
147768257,
145612249,
139390353,
142968917,
143654750,
145640729,
145640744,
139213058,
146335166,
145640821,
143242387,
144613836,
144766552,
140283056,
144791578,
139204208,
139842652,
146614909,
147700990,
145618918,
145618968,
143167738,
140075139,
145620342,
145091477,
146441166,
145610989,
142093098,
138651787,
142501122,
141555971,
145620358,
138952670,
139295443,
145611011,
141311648,
145620369,
145620371,
138799214,
144771635,
145611030,
145611041,
145949294,
142084288,
144429029,
145620389,
145620404,
147347855,
145611066,
143741828,
141945107,
139350333,
139700563,
145620424,
139253409,
139653819,
145371485,
145611228,
142251329,
143470921,
144220575,
145645229,
143592325,
145611250,
145611260,
142155139,
145136074,
145014525,
145645249,
145645262,
143319819,
140178347,
145611280,
142129125,
139877252,
145196883,
145645274,
138862363,
145611302,
145611311,
147514996,
141837007,
147129873,
138558976,
140390805,
145036040,
146799705,
142057909,
145611332,
146643781,
148029848,
145620510,
144767447,
145635217,
145635222,
138469558,
145643742,
147779449,
145615334,
145615343,
145617998,
146958560,
145618087,
145618092,
145636960,
145565223,
147559503,
144522574,
146433703,
142815469,
145643804,
143389305,
144997760,
146050387,
145637105,
145637110,
145612055,
145612064,
145615465,
145637171,
145640525,
140107926,
142914899,
142091049,
141772342,
142572575,
145632617,
145615705,
145610090,
145610094,
142689819,
140661562,
145610176,
145610196,
146976640,
138872673,
143701269,
145637327,
145637330,
145637334,
145632784,
145632789,
145632832,
144528995,
142366586,
144208992,
145373164,
140991330,
139154447,
144950632,
145102870,
140348359,
140627167,
148087716,
139229006,
138685087,
147992171,
145218007,
145342427,
140771548,
147219471,
144605405,
144803314,
145852682,
147157709,
143663278,
140349668,
145644922,
146917801,
144300259,
142959154,
148239174,
145615214,
145617866,
145617870,
145617873,
145643787,
145643792,
145643883,
145618114,
145618119,
145618148,
145618158,
147661354,
145636987,
145636992,
147750091,
145637033,
145637042,
143893171,
145368496,
144112586,
145612137,
145610081,
147882154,
142143419,
146981980,
144485729,
145632705,
145632723,
138947315,
145610169,
142946573,
145610209,
148212598,
143666053,
146227009,
146174580,
145897656,
141240429,
141723461,
142536823,
146949960,
148252445,
139251162,
141235457,
145612862,
144053128,
138670583,
143515243,
141766134,
148152018,
145612883,
143718517,
139110554,
144222182,
144952447,
146811366,
140381995,
140704572,
145031774,
145609802,
145420593,
144687991,
143315764,
145636985,
141611711,
145643960,
145643967,
145615379,
143679772,
143708056,
148117495,
142867199,
145640717,
145640724,
140441156,
147785992,
140014930,
145287088,
145632800,
145632807,
146888590,
141411362,
138909355,
144426039,
141010534,
145615760,
145615771,
145618900,
145950710,
139818265,
145640931,
145492623,
141106219,
147742381,
140317946,
145147323,
145432324,
148185083,
138817705,
147130503,
143296498,
144826777,
144719165,
147120602,
144403529,
140304256,
147123993,
140325820,
138820620,
138692770,
147243354,
140006247,
146210896,
141688116,
140243216,
147891083,
141679920,
148042843,
144408355,
147936736,
145618048,
146714728,
139478594,
143825300,
143667908,
147169013,
140794538,
143407348,
147184903,
145688764,
139975494,
139954004,
141436428,
145612147,
145612159,
145623569,
145612195,
146384911,
143708106,
148188296,
141241306,
143431126,
146950835,
142965074,
144185925,
146886056,
145127782,
145644941,
140371752,
147215058,
141459864,
145638862,
145638873,
142538966,
147395880,
144934425,
139429857,
147124668,
145638889,
145638892,
145638899,
147358974,
147408250,
145638917,
147358978,
147358991,
144544462,
145638931,
139730868,
141771712,
145403367,
141192215,
147359009,
147359016,
142412118,
147710955,
141446201,
143472545,
143164250,
139576698,
139576702,
145638952,
145638961,
144743155,
147359020,
147359027,
139292289,
140734015,
144153992,
140389357,
145383750,
141310366,
142990118,
142051733,
145615236,
145617882,
145617891,
147217714,
145079417,
145637075,
140624586,
145454478,
147678433,
143559008,
142599112,
144351158,
145472942,
145648408,
143122210,
145612251,
145615662,
138609053,
145640733,
146335170,
145146880,
141985367,
143007598,
144226893,
143511822,
146696059,
145571338,
143595619,
143646746,
145179849,
139842648,
142303911,
145615776,
145615783,
145618904,
145618914,
144132296,
145618953,
138708600,
146227641,
147592661,
147592664,
142367405,
145620325,
147536186,
146705757,
145610979,
145610988,
145610993,
146716688,
138651783,
145620355,
145620362,
139278673,
145611010,
145611015,
142149402,
141286409,
146997901,
147045163,
142215206,
144081435,
145611026,
145611045,
144695632,
147556476,
145620400,
145620407,
146816854,
145611051,
147250907,
145201151,
147622477,
145620420,
145620431,
139606285,
147639603,
145611241,
145248626,
143234311,
145645225,
143220213,
147714960,
146453478,
145611254,
141535768,
145295647,
145645243,
147503097,
140990698,
146966401,
145136078,
144635943,
144635948,
145645278,
144859671,
142983863,
140633277,
145611307,
141837003,
148178613,
145626720,
145611336,
142567134,
140568296,
145620506,
143429229,
145635234,
147064146,
145643738,
146321377,
145615338,
145615339,
145618002,
145618007,
145101980,
145618076,
145636945,
145636947,
145636952,
145636956,
146315478,
142966451,
146111312,
142252027,
145018361,
147536799,
140134471,
140875821,
141597100,
139402205,
146215138,
148220901,
146518189,
142491940,
138507180,
138965181,
145643803,
145643810,
145643887,
145643895,
138691759,
139448159,
140115634,
143830181,
142806088,
139203201,
144069516,
145612051,
145612054,
145612067,
145612069,
145615472,
141299639,
145637174,
141561717,
140849372,
142091042,
145360205,
142110795,
138853227,
142293129,
141052777,
145615694,
145610093,
145610104,
142413356,
145610185,
145610191,
143717492,
146935754,
146456691,
145937214,
147547339,
145637331,
140720656,
145632771,
145632773,
145632816,
145632829,
139767041,
140594182,
142829185,
139087454,
144011826,
145875474,
146864714,
141194304,
139389046,
141162283,
148186389,
147219470,
139483601,
142738185,
146659977,
145199172,
144706555,
145644892,
145644909,
144398710,
145096467,
139348088,
145644921,
143395830,
142236104,
138822865,
138822867,
145615197,
145617853,
145617865,
145643786,
145643788,
145618144,
145618155,
140324982,
147871081,
145377209,
145636995,
145637002,
141282272,
143661733,
139571836,
141229401,
141458993,
145899508,
139967457,
143445776,
145610084,
143641652,
147140309,
138559808,
147148113,
145632704,
145632722,
145610158,
145610214,
143650977,
141524999,
145420718,
146196133,
140379247,
139160633,
141584096,
139108489,
144367292,
139620295,
147268050,
143054503,
147926840,
144422354,
139239840,
144124089,
145620307,
139431584,
144773165,
147183726,
143702109,
147164478,
145612863,
145612874,
145612880,
145272927,
139898076,
141235484,
145612882,
145612888,
145612897,
145612903,
142323000,
143006156,
146656227,
147412915,
142347139,
142547953,
145609803,
145609814,
145652170,
144492152,
143805579,
147585245,
140152719,
138602082,
145709513,
147133582,
143188175,
147013756,
148149078,
148139189,
145615388,
143473380,
139811838,
148011062,
143066448,
143604178,
140540739,
142878134,
141045616,
142449587,
145640718,
142910128,
145632799,
146227018,
141010531,
145615767,
145618897,
145618899,
145640936,
147471134,
145272914,
147243251,
147225491,
143049487,
141606670,
145928179,
145447965,
141782528,
146774846,
145994493,
142921100,
139069388,
147181664,
144826776,
140325810,
143195504,
143924379,
139748264,
147797316,
143749828,
147545916,
142951030,
143513528,
141489637,
138692771,
141688119,
145864550,
143947567,
138911733,
141337694,
140006249,
143211079,
145685085,
139575803,
147417931,
142347935,
144901102,
145618043,
143538198,
143538211,
143538213,
145801671,
142858615,
143748872,
141276512,
141760136,
144455714,
142377354,
145623581,
145612190,
145612200,
139547960,
146997027,
140485570,
145612482,
148119418,
146290926,
146290941,
144529005,
142566185,
140184096,
146886057,
139674064,
145644944,
143844350,
145956546,
145453703,
147105005,
145638863,
145638874,
145638876,
143406488,
147358942,
147358947,
146939930,
147411063,
139839633,
144703384,
148170869,
145638900,
141636386,
147358962,
142411051,
143362540,
147124683,
145638905,
145638918,
146636618,
139953261,
147523742,
147358985,
147358986,
144440312,
144440328,
145925164,
145638928,
145638943,
148059962,
144199400,
147359004,
147359006,
139722493,
142823138,
145638955,
147359023,
147359026,
147359040,
140383770,
145098075,
146042837,
142049744,
145051654,
138826444,
138676249,
140772527,
147248500,
142259869,
145617875,
145617877,
145617890,
145617892,
144800537,
147217708,
141867297,
147152595,
139972025,
145093881,
145637076,
139917010,
145454487,
143664987,
141155584,
145909494,
148228588,
144780059,
146586725,
138483814,
142824073,
143900002,
143900004,
145612230,
145929236,
146357199,
145640747,
146335180,
145640820,
144560132,
141890065,
148249711,
142520977,
147065562,
147162054,
146212090,
145618909,
145618919,
145618965,
143325501,
141630968,
139643427,
144160918,
145620323,
145541907,
139128064,
145610992,
142117319,
148066190,
147794214,
146052279,
138952669,
145611014,
145611016,
144430851,
142432694,
145620368,
145191099,
142215200,
147971852,
145611025,
145611031,
145611044,
144429026,
145620405,
145620408,
145611048,
145611065,
144986033,
140437590,
138969507,
145620415,
145620425,
139253408,
141103193,
145093561,
147532545,
145645230,
147150894,
145357556,
145611266,
142155140,
145645248,
140657484,
146446111,
142669506,
139877251,
144816051,
145645275,
145645277,
148187012,
145907979,
141823269,
145611301,
145611314,
138736828,
148215438,
143869117,
139773096,
141419104,
142943678,
140587251,
148056567,
145611318,
138615103,
145620500,
145643743,
145615331,
145643805,
146447670,
145637104,
145637106,
145637111,
145643900,
145150654,
145615470,
145637176,
145640514,
145640524,
142110797,
138853225,
145632613,
145632614,
145632628,
139484701,
145615704,
139513312,
145610091,
145610106,
145198958,
138508978,
146814564,
139203403,
143184928,
144999947,
145637329,
145637345,
139699581,
146346725,
145632788,
145632790,
145632831,
139447192,
144253724,
142505436,
145198006,
145539230,
146278138,
142969364,
144780801,
142730835,
146604696,
141130319,
140348362,
139087460,
139229005,
145691403,
141804941,
142606100,
145656066,
142140133,
144169063,
144531024,
144531026,
142534638,
142866398,
147219489,
142738189,
142738190,
140156054,
145644894,
145644896,
145644907,
147610811,
144521607,
147979949,
145046338,
145644923,
139020165,
146917797,
145911686,
142632081,
147174625,
139348096,
145615208,
145615210,
145617855,
145617867,
145643867,
145643876,
145643882,
138828848,
145637004,
139694140,
145637043,
145637045,
145631230,
145368345,
144115375,
139048956,
144814080,
148050779,
145612128,
145612138,
143599713,
143610031,
146907294,
145610069,
145610082,
145326339,
141400418,
146963719,
142143418,
146798107,
145632720,
145610160,
145610212,
143635543,
143896745,
143126985,
145511589,
142902671,
142050390,
142358587,
145620309,
146669692,
141745312,
148245385,
143870226,
139636713,
145612861,
139205131,
140534436,
144186306,
140013810,
148152021,
145612901,
139498951,
144888231,
140550338,
140381993,
146292489,
142547275,
147221396,
147802571,
145609801,
145609812,
148226574,
142708783,
143315767,
145636986,
144541866,
145643966,
139334825,
147083994,
138455331,
140540744,
145057116,
145640716,
140008448,
140008450,
143034466,
147849177,
145632797,
145632812,
140094675,
138909356,
142339741,
139894794,
145618882,
145640938,
145640947,
141135730,
139461670,
145928166,
147775329,
138718058,
148304379,
139461679,
139851181,
144345818,
139700142,
141708281,
140751088,
147185568,
148164286,
139977306,
140907429,
147035836,
145074279,
142580768,
145622853,
145133538,
145618045,
141959786,
143510931,
148201799,
141088997,
142957328,
143371114,
139954005,
145612144,
145612153,
145612155,
145612185,
145612205,
146518185,
144692879,
139077881,
145787906,
145612480,
139753840,
142636679,
146886055,
148169129,
144325253,
145644942,
140819302,
139401068,
141451613,
141459871,
141862902,
144446291,
141758755,
145638861,
147358940,
142536826,
139184210,
147395890,
139665927,
139886528,
144703386,
138565895,
142294765,
145638902,
139867341,
147275415,
145638916,
144606271,
147358983,
147358988,
138714539,
148081435,
144825162,
145638932,
145638941,
140383761,
139808703,
145638962,
138430789,
139292288,
144479144,
140734016,
138935658,
144770286,
145615228,
145615241,
145617879,
147217712,
147217715,
140086204,
147436954,
145637061,
146563776,
144941608,
143561781,
142760781,
142746792,
148140342,
145007251,
147390233,
139615505,
145612231,
145612250,
142174017,
147122173,
145640728,
145640734,
145640745,
139831985,
140255006,
138533546,
140106816,
142119201,
141738414,
141738420,
141868040,
143207090,
147458049,
144933540,
143633790,
143325698,
147127618,
142162874,
144000534,
145615775,
145615784,
145618924,
145618964,
146809861,
145628140,
143777199,
144129321,
145814580,
138857622,
145620326,
145620336,
146428356,
139401069,
145610990,
142084246,
139333746,
144428969,
148060785,
147622422,
146602567,
145620365,
139382114,
145611019,
145394555,
145620385,
143568643,
142295902,
145611029,
143628715,
144429028,
145620390,
145620403,
145611047,
145611067,
139761099,
145620430,
146181102,
145611229,
145611246,
148114413,
143347518,
146391304,
145645228,
142844955,
145790852,
138438845,
145645246,
143319818,
145884179,
145611279,
138504894,
143861671,
146585744,
145611299,
145611312,
143367368,
139233028,
145931009,
146194844,
147135090,
143982916,
138593096,
141823271,
145611331,
145611337,
147515013,
138615105,
140568295,
139388101,
139835226,
146667297,
146485917,
145620509,
145620515,
143429231,
143434620,
145635219,
145635233,
139823764,
145643745,
144450880,
144221148,
148010911,
145615333,
145615346,
145617997,
145618088,
145636957,
145636959,
138538715,
146284693,
144951509,
142289137,
145259327,
143172555,
144274054,
145018358,
143108405,
144830868,
142642632,
145497948,
144546280,
140225931,
141131209,
146358716,
146358722,
144560018,
145845225,
145643807,
145643811,
143910922,
139870372,
146447672,
145637118,
139986990,
145643896,
145643903,
146982395,
139448160,
145536745,
145189289,
145612056,
145612063,
145615468,
145615482,
145640517,
142532618,
145758298,
147306895,
143973605,
145632618,
145339430,
145615693,
145615697,
139513315,
142169569,
142037426,
142413361,
145610177,
145610188,
145496562,
145637326,
145637335,
145637339,
145637342,
139022370,
145632776,
145632825,
145632835,
145716771,
145094580,
139767042,
147422906,
145160283,
145099425,
138875409,
146872923,
143824559,
144011825,
145875471,
142437346,
145231427,
141551421,
145570222,
145570225,
147219465,
142071000,
145656067,
141551424,
145570231,
147219479,
145644889,
145644903,
144897103,
144300252,
138488705,
145644910,
142236111,
139020164,
146917802,
146588606,
145615213,
145617871,
145643779,
147121358,
145643870,
145643873,
143435197,
142629355,
147403403,
145618104,
145618111,
145636989,
145637006,
145637050,
145631226,
145631240,
146396009,
143765920,
140523494,
144595426,
145612129,
146201259,
145360213,
142070165,
142620791,
142620796,
139529156,
145610073,
141068084,
143121038,
145632703,
145632708,
145632715,
145653351,
147947194,
145610201,
145610208,
145496581,
143266245,
143747245,
139160626,
144786865,
146307262,
140687807,
142634328,
142922625,
139239833,
145620303,
144363047,
139560473,
148165128,
145612877,
145612900,
138956059,
140984539,
145612905,
148246523,
142492432,
139010675,
147221399,
142424578,
146055025,
145609808,
147220766,
141369476,
146260730,
140350383,
145636964,
144670651,
145631171,
138602087,
145615387,
143085259,
139225085,
143292007,
138753958,
146963770,
145640722,
142573451,
140008451,
142915138,
144342998,
145632801,
139828536,
145184417,
139383690,
145618903,
145640934,
145640944,
141463599,
147141882,
142126204,
146973116,
140040140,
143049495,
138611437,
143625801,
145283788,
144345813,
142577600,
146962777,
146826993,
142211957,
147430994,
140907428,
147170757,
147231230,
143513538,
141622559,
142219419,
145618040,
145281697,
139356349,
145821822,
144943618,
145948355,
145612158,
148271699,
145612191,
141645806,
139878135,
139246493,
145493898,
142981013,
145612478,
143641803,
146290929,
143045579,
141361600,
142965079,
140546045,
145644933,
145644938,
145644947,
146196553,
140506260,
142626010,
141929550,
141459867,
147843493,
141615752,
141425178,
140909681,
141104935,
139798684,
140983068,
145752197,
141927608,
147411059,
147411070,
145638881,
142266818,
147358954,
143223239,
145911745,
143930634,
145239819,
145638909,
145638914,
146127508,
147358981,
148237429,
147178264,
145638939,
145403358,
138428228,
147710959,
146624380,
143192470,
145638969,
142520061,
139954902,
147359030,
146156499,
146844959,
145157742,
142700557,
145615231,
145617881,
145420577,
145890376,
143816728,
139639075,
139170390,
145637073,
144185246,
145032988,
141600136,
148180467,
147251757,
141034988,
142920731,
145612238,
145615657,
144427957,
142174024,
145640748,
139345608,
145640818,
145640825,
145640836,
142194188,
148093870,
139884790,
143207094,
139627199,
139751845,
143587275,
139853567,
143054496,
148003912,
139544071,
140446835,
146546337,
138528688,
138827052,
147700989,
142303908,
145615779,
145618906,
145618961,
145618972,
146397208,
145620330,
143955068,
145233895,
148236691,
145610985,
145610996,
144959665,
145620347,
147367858,
144122681,
143081079,
148236701,
145611002,
144430835,
141311644,
144540595,
145620382,
145620387,
142067796,
142994534,
145112610,
144429022,
144429033,
141286422,
145926959,
145620401,
145611052,
148094333,
145620412,
143928702,
145658211,
145611227,
145611232,
145611235,
140342046,
145868084,
142383134,
147060503,
143059490,
145611263,
145611267,
148189080,
147666989,
145645260,
141073495,
147060520,
147503095,
141585757,
146585739,
145611283,
145611292,
142669512,
140361211,
146890071,
145645281,
138862359,
145611295,
145611298,
145611315,
138593086,
142943688,
145611319,
145611325,
138467418,
145620504,
145620514,
146731541,
141786922,
145635226,
139823763,
145643746,
144450871,
148010917,
145615347,
145617999,
147308736,
146958545,
145618080,
146711709,
146037160,
143430121,
143430660,
145018348,
145722150,
146215141,
139252376,
142352707,
142471072,
143350783,
143872023,
142395805,
142395812,
142468451,
145278026,
145765313,
145765327,
144412840,
147196983,
148203272,
140650445,
143430332,
144089878,
144444316,
145643809,
139901159,
142855971,
142135109,
146184854,
145637107,
145643894,
145643901,
139448158,
140115636,
143830182,
142370267,
145612053,
145612070,
140343118,
145640510,
145640515,
145632627,
147375539,
145615695,
145615699,
145610092,
147659224,
147160902,
138542349,
147993029,
145099305,
146924993,
142481162,
145637332,
143421585,
146161362,
145632774,
145632787,
145632815,
145632830,
146305980,
142699037,
142829186,
147153006,
139508929,
139154450,
141916508,
146278141,
146071413,
141830639,
145735344,
140483546,
142956108,
138685097,
145875479,
140930673,
143945005,
143793984,
143515506,
145251550,
145644893,
147492634,
138454703,
142940095,
145644924,
141816144,
147548889,
145615211,
145617868,
145643789,
144723225,
145643877,
145618110,
145618143,
145618145,
145618156,
143280284,
145636994,
145637003,
145637044,
145631231,
139063301,
141282269,
139048957,
142137140,
148057451,
143618234,
142620798,
145610068,
145610071,
145610086,
141068077,
144223272,
146963720,
142143413,
144485727,
145632721,
145610157,
142946569,
145610211,
145610220,
143635544,
145472416,
141991232,
140665653,
142835776,
142189897,
139620292,
141263169,
146571995,
146574295,
138719700,
141087686,
146994665,
145620306,
145620319,
147183725,
144824908,
139251157,
145612864,
145612879,
140834372,
140130573,
140534435,
147151723,
145612898,
143798639,
145789904,
145612907,
139109518,
142657397,
145609800,
145609815,
146009812,
141339362,
139360577,
145636975,
144539154,
145643965,
145584486,
145615389,
144992981,
146926959,
140540740,
138617705,
141527246,
144395308,
143942215,
139924186,
145640719,
143034469,
140354389,
144342992,
145632792,
145632798,
145632813,
146227019,
138909357,
139383696,
145615766,
145618894,
145299167,
145640937,
145640946,
141463601,
141159676,
148185060,
141252090,
148304378,
139700143,
139764980,
141797561,
140283368,
145433228,
146962773,
147545868,
139978002,
139603884,
141342615,
148164287,
144314608,
143510031,
143095573,
144089035,
139307617,
139481481,
143513527,
142840162,
143330648,
141489654,
143007997,
148042841,
141064092,
141578704,
147628604,
145618046,
141959772,
143050743,
138812413,
139356339,
145821816,
140794553,
140852185,
140763415,
145406297,
141178995,
141282393,
142098901,
144153039,
147642512,
145612156,
145612189,
146954809,
145070471,
145211101,
145612481,
139705050,
143323404,
141802538,
143022733,
145583340,
141673391,
140452634,
143364021,
139099003,
145187479,
147124647,
145638860,
145638879,
147358931,
139839632,
141737140,
141027726,
145638886,
145638901,
142860116,
147358961,
147141033,
142691462,
145638919,
147119890,
145325024,
139953264,
147358975,
147358984,
147358989,
145182030,
145638942,
140683556,
145403356,
141073271,
147359003,
144733015,
142823139,
143270063,
140380026,
139954900,
147359025,
147359037,
139632197,
140219907,
143699179,
141905480,
147552784,
143715371,
142603318,
145585613,
145615229,
145617876,
145617893,
147217713,
143104825,
139853233,
144396973,
144664437,
145637054,
145637071,
147154544,
147075146,
144554438,
142472945,
147678439,
145612234,
145612236,
145612247,
147248608,
138734103,
139086646,
142174018,
145640731,
145640746,
145002983,
145640819,
141187197,
144766554,
140283058,
142670619,
144196865,
142309420,
143741109,
140574944,
144000533,
145618908,
145618963,
145618966,
145157198,
143167736,
145620327,
139128058,
138799176,
145651560,
145233897,
145610991,
146183132,
147288772,
138627392,
139865897,
145620364,
142989469,
145611013,
145620384,
142989474,
143004208,
143020811,
145611023,
145611028,
143349346,
144429027,
145620388,
145620406,
145519849,
143564310,
143834454,
143928685,
145611049,
145611064,
144986029,
138969506,
145620414,
145611247,
141965383,
140252691,
145820880,
146446099,
145611249,
145611265,
148189091,
145645241,
145645247,
145058745,
146446106,
145355773,
146585734,
145611285,
146925392,
143214086,
144393172,
145645276,
145093626,
145611296,
148000257,
143088912,
145036035,
144543291,
142943679,
145611321,
145611334,
148030575,
148030578,
144963576,
142531885,
145620516,
145635220,
144967597,
147064150,
143462559,
145643744,
148010922,
145615345,
145617996,
145504831,
142921638,
145618089,
145111151,
141086910,
146192720,
145636943,
145636958,
146813642,
146558897,
145259328,
140133936,
147180270,
143097799,
144133892,
140625783,
147965246,
138686004,
146447671,
145637103,
145637112,
142698408,
140115635,
145612057,
145612066,
145615467,
145637177,
145632615,
145632619,
145615703,
145610088,
145610107,
145610190,
143717486,
138872667,
147467308,
142889177,
140577499,
145637325,
145637336,
145637341,
146346724,
145632791,
145632814,
145632826,
145716770,
143132619,
142195931,
138686800,
147440798,
145911599,
145911602,
144672460,
144897050,
144950634,
147992172,
145570223,
145187014,
145260459,
144169064,
138834423,
140156051,
146059362,
147137181,
145644890,
145644897,
145644908,
142337608,
140927875,
145895319,
141913736,
142626003,
138526925,
145615207,
145617854,
145617872,
145643785,
145643871,
145643881,
139440007,
145898586,
139602986,
138844321,
145618112,
145618160,
138487855,
144575599,
145636990,
145637040,
145631220,
142446331,
146661782,
141025059,
144535603,
138444306,
141429640,
140523491,
147070337,
142070159,
142070164,
142746919,
145610083,
146963716,
140027491,
146628017,
143717482,
145610202,
145610207,
145496582,
144561687,
148212586,
138808605,
144863537,
140379251,
141584099,
147104437,
146307269,
147485252,
145511590,
145619180,
145045150,
146949954,
147424991,
146896709,
138886194,
145612875,
139985653,
139898083,
146489320,
140534439,
148152016,
139370279,
145612902,
144567742,
140740403,
140984545,
145612916,
139073635,
148246522,
147744261,
147159502,
147159507,
142896915,
145045236,
147802570,
141061645,
145631169,
147127485,
145615377,
143652513,
143066449,
140540725,
148230367,
144317234,
145264488,
144393629,
147039417,
139312150,
145640723,
145311918,
146528332,
147785998,
140918209,
143872024,
145632802,
145632809,
141284160,
141953489,
138512004,
143288327,
139053415,
144426037,
145615762,
145615769,
145618898,
145640933,
138973753,
139461671,
147780296,
140765526,
147545850,
147545859,
147972547,
144478209,
146962779,
140559328,
145225663,
144918860,
147245761,
145706449,
148081819,
144089041,
138911736,
145735760,
147628600,
142658303,
145618050,
143538203,
144734674,
145821812,
145821819,
143407350,
143934986,
147125547,
142992301,
140185420,
138565124,
145856942,
146072639,
145612145,
145612152,
145612201,
145612204,
146518186,
146384918,
144692874,
147148239,
145612477,
140790719,
139051145,
139970410,
146776438,
145644943,
146196552,
147214723,
146709295,
140506259,
147124640,
145638875,
143094797,
141345444,
146979642,
138795271,
147358929,
147358943,
147358944,
145901246,
143475730,
142106039,
148066006,
144033523,
138679104,
145638882,
146420982,
147358952,
142538988,
146915935,
141937275,
145145741,
145638906,
145638915,
139001894,
147358980,
147358993,
144544459,
147319483,
147109292,
140080679,
145638929,
147416467,
141172268,
141901129,
141192217,
147359007,
147359014,
147359018,
140941483,
144134678,
145811834,
139722496,
145638949,
145638958,
145638959,
142839283,
147359022,
147359029,
145999692,
144479156,
139528015,
139808710,
143699175,
144871620,
145900308,
145226826,
145585604,
145376476,
143867267,
142339958,
143694477,
145615219,
145615233,
145617880,
145617889,
147335980,
143724530,
145675473,
147217709,
147217716,
146259214,
145162136,
143104823,
139605049,
147436959,
139639074,
141774101,
147508858,
140249857,
143561779,
146153268,
142298304,
145615660,
147763905,
145640735,
145640817,
140106806,
146480308,
141738415,
144196852,
146696061,
147283130,
145571336,
145627576,
141250129,
141744506,
140446841,
145135217,
145615778,
145618920,
145618923,
142409808,
142733787,
140699806,
143777194,
144992237,
143808095,
145620322,
145620331,
143955067,
143076374,
146705764,
141929554,
145610986,
145610995,
146710832,
141161807,
146602568,
145620345,
143081080,
142215180,
139278671,
143978056,
140666640,
145611017,
144900065,
139514099,
145394552,
145620367,
145620386,
145448712,
143270199,
143454663,
145611024,
144429023,
144429032,
147843750,
145620409,
145611053,
143970532,
145620426,
148254326,
143454713,
145611233,
145611234,
139760570,
145799720,
145645231,
143220215,
147498097,
138509932,
142059472,
143059491,
145611271,
140342056,
142104348,
145136076,
143932503,
147729138,
139280583,
141585758,
145611291,
145645280,
144859669,
147729161,
142715923,
145611313,
143367367,
147163048,
145611327,
145611338,
146361515,
139727904,
145620503,
145620512,
147172152,
145635232,
144241162,
145643740,
145615332,
145615341,
145618000,
146958547,
145618077,
145636954,
145643808,
145643814,
143453328,
144616086,
142407389,
142453143,
146848340,
146848342,
142135112,
141431636,
144997768,
145643891,
145643897,
138527807,
138527808,
145612071,
145612073,
145615476,
145615483,
145615485,
144415394,
145637180,
145640516,
144881210,
145360207,
145360209,
146519470,
143405633,
145615690,
145615696,
145610097,
146429307,
142413360,
145610181,
145610187,
139213071,
146912095,
139871168,
145632775,
145632817,
145632823,
145632834,
145716765,
139112589,
138455841,
141815693,
142969370,
144388325,
142911949,
148070682,
140627165,
140270368,
145231438,
145835127,
139344321,
146872487,
147219499,
147214655,
141816109,
145644904,
142369283,
139371813,
145644929,
141769963,
142744462,
148213472,
148227535,
145617861,
145643790,
143144906,
144562578,
144723226,
147121353,
147220782,
145618105,
145618107,
145618157,
146260769,
145636998,
145631227,
145219118,
145219127,
139974077,
145886815,
139571838,
140415355,
140694021,
141374318,
145612118,
145612121,
145612130,
140995687,
145610072,
145610074,
147065363,
140420268,
145632718,
146628012,
142302661,
145610161,
142946568,
145610219,
145496573,
146857398,
139024467,
146307263,
140706278,
139239836,
145620318,
141065680,
145954937,
147493738,
142696816,
143702107,
143702113,
139156185,
145612859,
145612868,
145612869,
145612878,
145612886,
145612892,
145612893,
145612899,
143718528,
141742112,
148246492,
140366832,
145612904,
145612906,
145492686,
144498411,
148261224,
148153129,
145609811,
144699143,
145652168,
146211432,
146901611,
143315769,
145636971,
145636976,
143748888,
143531989,
148139185,
145615384,
145615386,
145615393,
145615395,
146937152,
140656757,
143066452,
141353199,
143205357,
142575767,
139312141,
139312147,
145640705,
145640714,
141366683,
141043030,
145632795,
141953499,
145529914,
145615753,
145615755,
145618895,
145640940,
145640945,
143247600,
140765527,
145135427,
142684733,
144528260,
143664823,
142628042,
147545869,
141119433,
139034223,
140871045,
142211952,
148268867,
143095572,
147096476,
141818749,
147409176,
142776126,
139481480,
143513532,
145486537,
145074282,
148251129,
140900208,
146555719,
148045660,
141064095,
145618032,
145618039,
144923967,
140656035,
147218053,
145101075,
145612188,
145612194,
145612486,
146161454,
138577136,
143321651,
140071533,
145644932,
145644946,
145644948,
140819300,
141451610,
146588622,
141615755,
145638859,
145638864,
145638878,
143406484,
147358930,
140983059,
141110286,
147124675,
145638896,
142452480,
142839202,
142266819,
142266828,
139927776,
142860117,
147318564,
147523734,
147358953,
147358958,
147358965,
147421904,
141908490,
141937268,
144833674,
145638922,
143684474,
139612450,
144648217,
146668858,
145884507,
146097367,
138807184,
145638926,
145638940,
145638947,
139612467,
142025550,
147359000,
147359002,
142412111,
145397084,
148219969,
147359036,
147359038,
147359041,
144807484,
144807485,
142289809,
144733026,
141368864,
144740479,
140219895,
140219901,
143699182,
143867272,
139478532,
138676252,
147147192,
143667447,
147846852,
148267903,
145617894,
145617896,
138620263,
140038066,
145637070,
145978293,
140814016,
144399255,
142832029,
141155582,
147167964,
145130231,
142001567,
144708237,
145612235,
145615655,
139082766,
144447500,
145640822,
145640824,
145640831,
145640835,
146008237,
144560125,
139836344,
143666146,
143741091,
145618907,
145618913,
145618967,
145618969,
146587728,
144160920,
143243144,
138857619,
145620341,
145060433,
144862237,
138926327,
139333738,
146219306,
139865900,
142790208,
147999956,
138651790,
145620348,
142989466,
143568634,
145611012,
142084261,
141311647,
147131405,
143020812,
145611035,
145611040,
147028473,
142084291,
143355695,
145620393,
145519844,
145864701,
145611046,
146667326,
145620413,
145620419,
147894935,
143928692,
139130100,
139653806,
140040921,
140040927,
144797338,
145645219,
145645232,
144459264,
147150892,
145093577,
142755828,
145611261,
145611264,
145611270,
148189081,
141605525,
145645252,
145645261,
141513279,
144669994,
140500906,
145611286,
141965408,
142284318,
145645264,
145645271,
145645273,
145304166,
147487357,
145611297,
147514997,
140226795,
139212378,
146361492,
145304177,
147767449,
145036036,
146734905,
145611322,
142805393,
148030574,
139698530,
145973855,
146781253,
145635218,
145643747,
142792555,
144444401,
144315741,
145617991,
146715758,
145618082,
144089879,
146771682,
144311318,
142815470,
145534124,
143196235,
145643813,
145643816,
147417244,
147417251,
143453325,
143332439,
146211998,
139986988,
141763047,
145643890,
141370400,
140597393,
142675791,
145288758,
145612058,
145612065,
145612072,
145615477,
145615484,
145637181,
140849375,
140859303,
146519480,
143300275,
139187704,
145615688,
145615691,
145610089,
145610108,
146611462,
146611475,
145610182,
145610189,
143817728,
145937223,
140175623,
143039371,
145127658,
144999953,
142481159,
145632824,
145632833,
146719836,
140157779,
146775483,
144651961,
147157613,
145102867,
144641404,
139508931,
145102877,
139389051,
146946275,
146999707,
144605401,
147839740,
145217999,
145911613,
147219474,
145260460,
139434201,
139434207,
144531033,
145556075,
147459800,
145621163,
147463155,
143440065,
143663279,
145644912,
145644930,
142337626,
143103943,
143665285,
147214690,
139909421,
145617869,
145643782,
145643784,
141383268,
147220790,
139546076,
141672863,
145618106,
145618147,
145618159,
145636991,
145636997,
140147396,
145631228,
145259332,
146821384,
145899506,
147708513,
147708522,
143983584,
146907289,
145610075,
145632706,
145632717,
146628016,
145610162,
145610172,
145610210,
143650979,
139423362,
138808606,
143666075,
139631517,
139697259,
141240430,
145620300,
144146237,
144146242,
138948152,
147812295,
144063671,
146148699,
139632643,
145612867,
145612876,
145464852,
143515251,
139985639,
145612884,
145612891,
145612894,
146322557,
143130233,
140848049,
138908157,
146203218,
139417834,
145194091,
142502417,
144498410,
144498413,
143781791,
145609805,
145609810,
147220755,
141986660,
146743551,
146901609,
140350382,
141472118,
141867352,
145636979,
147127486,
147133586,
143531990,
145643955,
145643957,
143867941,
142914352,
145202658,
145615385,
145615394,
140656756,
141591061,
143671067,
147116742,
142247343,
147672583,
145640709,
147521290,
146558378,
145632803,
147021956,
140094673,
138909350,
139828534,
144279149,
145615754,
145615763,
145615768,
145618901,
145640939,
144323352,
147597976,
144892841,
144528252,
140765525,
145358877,
147418534,
145147331,
145928183,
141092893,
139748261,
141891650,
142927034,
143034868,
138692763,
147226611,
146884840,
147035837,
138983285,
147204226,
140006239,
146043681,
145994547,
147409193,
148251130,
142953853,
143139591,
144408354,
143050747,
143538202,
138883355,
144259938,
146271788,
146915086,
141257675,
145739264,
146539186,
138454073,
145612193,
145612202,
141710093,
143810658,
142994528,
141455170,
140659363,
140452628,
145644949,
145895322,
138781012,
147536182,
140506271,
145835220,
143057100,
143382385,
145638865,
147358938,
147358945,
145901247,
145901252,
148058702,
147411061,
147140991,
144703389,
143334401,
147358957,
147358968,
146936218,
145638907,
146636615,
146636622,
143223249,
144648215,
143077093,
146097366,
145638948,
147746006,
147359001,
147359008,
139292280,
145725029,
141288052,
145638950,
145638957,
147359028,
147359035,
142289810,
141455454,
140734010,
139435129,
147144690,
146042841,
146944425,
145383753,
145731671,
141072298,
139071237,
145617888,
145617897,
142872049,
139478636,
140086205,
141440941,
145637074,
140814017,
148171600,
145909492,
142760783,
141554143,
143505252,
145766407,
147576135,
147576136,
145648407,
145615654,
144139550,
146357194,
147490611,
145640726,
139828452,
145640823,
145640830,
140106823,
143301994,
140688216,
143891013,
143891015,
148093865,
139567987,
143741097,
139842638,
145618912,
145618921,
145618951,
145618970,
141277988,
145610997,
143948011,
144428976,
138651791,
142979158,
143698525,
140268738,
139278672,
145611007,
145611018,
145616484,
143204191,
139020242,
145611027,
144429021,
147843752,
141309412,
147556480,
139350312,
139849647,
141625486,
146800509,
145611050,
145611068,
139849654,
145620418,
145620427,
140367240,
143928700,
139130098,
141103186,
145918921,
146734818,
145611238,
147451770,
145645226,
145645240,
140684638,
145611256,
145611269,
143345187,
139599330,
145295650,
145014523,
145645253,
147446634,
147729137,
142983855,
146324692,
144490234,
146084775,
145645265,
145645270,
145645279,
138862357,
145611310,
140149972,
139021243,
142943690,
139388107,
144392309,
145620502,
145620507,
147146341,
146731539,
145635212,
147064145,
141446505,
147846886,
144489727,
145615335,
145617987,
145617990,
146715769,
147308738,
145618083,
145636962,
143905014,
145643801,
147551158,
143521359,
144733868,
139999355,
145637108,
145637121,
145643898,
145643904,
142370272,
145615474,
147179393,
145637187,
145640511,
145640512,
145640518,
145758291,
146519472,
143877079,
143363729,
140625838,
145632624,
145632626,
145615700,
145610095,
143356577,
145610180,
146456694,
146161361,
145632786,
145632819,
145632836,
144842806,
145099424,
140943403,
142944686,
146071410,
147174512,
145196400,
147572836,
144103610,
146183904,
145554268,
138685098,
145570214,
144386370,
147799443,
147219466,
145644887,
145188291,
142534634,
142866396,
140285569,
144674499,
140050795,
145644906,
142940096,
141727136,
145644913,
145644920,
145644927,
146709293,
148227526,
147505048,
145615198,
145615212,
144130068,
145617863,
143144908,
145643878,
146260771,
138487844,
145637000,
145637007,
145637047,
145637049,
145631225,
145631232,
145631234,
139556967,
140602663,
145573628,
143058330,
145612123,
145612126,
145612132,
142466665,
142068572,
145610065,
145610067,
145610070,
143160849,
145983105,
145632716,
139944137,
146276945,
145610156,
145610163,
145610221,
143266246,
146227007,
141876119,
145679448,
148195541,
145620320,
147174478,
141371015,
142176341,
143112000,
143870222,
145184640,
144792021,
140809503,
146292480,
145612913,
146959080,
145492688,
144867011,
144013296,
146943543,
145609816,
139478578,
143315771,
145636973,
145636974,
140462990,
143007228,
145643962,
145615391,
145555137,
139225091,
142668323,
142327650,
141014991,
141760789,
148261524,
143551104,
145640707,
145640712,
142573452,
145632793,
138909360,
145529916,
144162454,
145618886,
145618893,
142503856,
145640942,
145640943,
141055865,
147138468,
141980717,
141163293,
144892835,
145203416,
145913906,
148304375,
148304377,
148304382,
145283796,
139851176,
147002699,
144305032,
147211088,
145147341,
144826774,
139034225,
139494935,
143180705,
143549693,
139307612,
148251127,
141612705,
145486530,
145486535,
146021329,
141360364,
140006233,
138815815,
140900206,
138661130,
145700841,
142658363,
139425393,
145618034,
145618041,
145666658,
138883358,
143270872,
138724214,
142265524,
139451029,
144153034,
145688752,
144847422,
147880590,
145612157,
140733081,
144692890,
145209262,
142981014,
141566112,
145612475,
145612484,
145612493,
145612495,
147228632,
139784349,
143606468,
141673392,
138484391,
145187478,
140377783,
146112175,
144901674,
145638866,
145324992,
144383999,
145638883,
145638898,
142119465,
147358963,
146668856,
147124700,
145638920,
144606280,
141272744,
144556776,
145884509,
145638938,
145638945,
147119900,
144199389,
144733018,
140668461,
148219967,
139844719,
142960674,
145638968,
141395577,
142997783,
147359019,
144807461,
139292298,
143827573,
147170111,
147973912,
147552783,
145051648,
142700552,
142116909,
146528225,
139919160,
139052725,
139058589,
142291821,
145585608,
142660342,
145615224,
145615230,
147948357,
144284239,
146259225,
139478661,
142036665,
139063218,
148048522,
145637059,
145637065,
145637072,
148228398,
142044980,
143559064,
140540711,
142593956,
140248930,
144716269,
145612233,
145612237,
145612248,
141314292,
145193569,
145640730,
145640740,
145002984,
145640833,
140106820,
146703118,
147262864,
141736457,
144933544,
144913014,
148135826,
140093760,
142795249,
140446836,
142216296,
145135214,
142354881,
144000532,
146614916,
145618960,
145618962,
143777203,
147125363,
145620338,
146428360,
145233894,
145233896,
144428981,
146710826,
142432686,
145620361,
142989464,
142215169,
146239777,
140666641,
148236702,
145611001,
145611021,
145394553,
145620372,
145620381,
145620383,
143428917,
145611033,
145611042,
140053241,
144429016,
144223656,
145394560,
145620391,
143564311,
145611062,
140339894,
138969505,
146981586,
146755867,
143272415,
143681055,
144797336,
145611248,
146948284,
146948286,
142104344,
145868082,
145645234,
143592322,
141535763,
148189079,
145645250,
145645259,
139725735,
145611272,
145611275,
145611281,
145611284,
145611290,
143447273,
145282664,
144228044,
145611316,
142487932,
141680500,
139021249,
140851607,
142926078,
145611320,
145611333,
139388097,
144157303,
146485921,
145620513,
145620519,
148061678,
145635216,
145635221,
145635223,
145643749,
141424331,
145854387,
145765681,
145615350,
145617993,
145618091,
145636961,
144387412,
147115542,
148228405,
145731815,
142377284,
145567822,
146195250,
138442354,
138704700,
142104350,
142178576,
145645245,
145645255,
140500905,
145611278,
147966536,
139598294,
147532588,
144635946,
145196863,
145645268,
139016103,
147135082,
145611309,
138736831,
140557505,
147767444,
138593090,
140128947,
142805395,
145620508,
148255121,
145635228,
144260983,
144970703,
143607414,
143607415,
145643736,
145643753,
148010904,
148010905,
145925739,
139792676,
145615336,
145617988,
138790603,
147173396,
147308726,
145618094,
145636949,
145636950,
146301022,
144851691,
144851692,
139160250,
147180269,
144830876,
142466672,
143366034,
145497955,
140908931,
145189078,
145326268,
144181432,
145862188,
142096967,
138819875,
144833004,
147013105,
139381374,
146083849,
139644584,
145765320,
146391885,
145462694,
140650444,
139279799,
145631318,
147218878,
145640912,
145640958,
143687460,
139243186,
139047755,
147215919,
145631406,
145631409,
145438087,
145840682,
145546640,
145618980,
145618983,
145618994,
145618995,
139814258,
145966262,
140405258,
145640983,
145631431,
145619011,
145619013,
145619018,
142952825,
142952831,
147252578,
144327125,
139851141,
145989285,
145640994,
145641011,
144904723,
145631463,
145080124,
146943453,
145619040,
148141536,
146320017,
144597778,
141885296,
145082113,
145237271,
142082822,
139395263,
142784355,
142784356,
145837747,
144675951,
145445479,
138568398,
144085148,
139681772,
146576842,
143126070,
145635373,
145635390,
146342002,
147142604,
140748918,
141749285,
145609583,
146152635,
146930641,
138552279,
142455345,
139800638,
145609598,
145609607,
142151363,
139558229,
147959359,
144462642,
147023014,
138441652,
142565256,
145609621,
145609628,
145702364,
148250393,
139679896,
145609645,
145456468,
144425020,
142342567,
145960478,
143489319,
144207194,
145643850,
145643863,
141144839,
143052071,
140324962,
144383118,
140093474,
140200198,
146271797,
141617951,
144395164,
142482884,
143527747,
146914333,
142060175,
143484726,
146262180,
143486531,
142476546,
141963033,
145640750,
145640757,
145694138,
143231876,
144569332,
147521218,
145637347,
145637348,
145637362,
144791518,
142127053,
144267265,
146650383,
139946051,
145615748,
139865223,
144815085,
147131248,
143662174,
144927214,
144586924,
140234356,
141646204,
143477295,
138918465,
139351621,
144608008,
144644736,
145818984,
144424167,
145163131,
142292531,
145644411,
144249553,
144417942,
145609671,
145609677,
139214315,
141490723,
146300928,
147475401,
145560881,
139618916,
145609706,
140427700,
139875464,
144296304,
139702573,
141068733,
140423431,
141607524,
145408268,
146114517,
146386407,
144784763,
146288107,
145609747,
144053631,
142016921,
140149976,
139595151,
143458960,
146197847,
141298973,
145629934,
145747648,
145643723,
142234892,
142852111,
141800247,
145752983,
147148944,
142931129,
144285854,
148071971,
145581453,
144590129,
144731381,
142826012,
145643940,
145643950,
146701454,
138968479,
143832256,
145637320,
145640640,
145894470,
145632651,
145615664,
145615723,
141935257,
145640805,
145640810,
144907930,
141279090,
141019615,
144226982,
146318963,
141398784,
144465267,
146554126,
145631285,
141411364,
145934965,
145638983,
147359042,
147359052,
143260810,
147449515,
143224230,
145639001,
147359070,
147359071,
147359074,
147152015,
146395264,
145103840,
145639038,
138435329,
138739627,
139632271,
147548884,
146966272,
143109343,
145639051,
140925645,
147449578,
146256008,
145639072,
145644979,
145644993,
143664248,
145027316,
148172812,
143649273,
142596336,
142329985,
145660234,
147721859,
141414037,
147925843,
148013095,
146457643,
144591361,
145645131,
145645144,
145645149,
148186863,
141115137,
140821306,
142927544,
146544447,
142461537,
147138496,
139891150,
141317345,
145645161,
145645173,
141410337,
146123407,
145611198,
138823111,
141990308,
147110375,
145645186,
145645190,
145645193,
148100225,
147460434,
142291360,
140039294,
145611220,
146321152,
145645204,
145645207,
139738170,
138509898,
142941818,
145429473,
147220753,
145573225,
144477378,
138470595,
141991399,
144386800,
142522784,
145631242,
145631256,
145631257,
142833974,
145611991,
145615414,
145615417,
147126829,
147165692,
140041736,
139845921,
139281470,
147303927,
138466049,
138938826,
140698213,
145404854,
139204143,
148051833,
145644426,
145644429,
145644435,
145690961,
143411135,
142356314,
141440185,
140287066,
146176748,
141813307,
145080133,
145612498,
147384493,
145644450,
145636942,
145636946,
145636953,
147559508,
138830694,
144387516,
146413004,
144863151,
147536801,
141213040,
147180266,
140725316,
141597101,
147147973,
144139557,
146518195,
142932425,
142689843,
147013102,
139627113,
144876949,
141917745,
146475015,
140604512,
144118272,
145466677,
144824493,
143379656,
144413650,
144413651,
148106843,
144645642,
145631314,
142915715,
145484923,
145640905,
145640916,
145640962,
139474072,
147572560,
141066936,
145631407,
145618982,
145618991,
139814261,
142952818,
143298033,
145640975,
145640982,
145640985,
143935788,
144385393,
145631435,
145631442,
139070550,
140988056,
144983762,
145618999,
139335147,
147983181,
145989281,
145641015,
146833706,
142859368,
145353171,
143490026,
145619038,
145968686,
144372246,
144526265,
142564488,
142784352,
147188545,
143077926,
147257771,
143203615,
143883655,
144470402,
139479320,
141995194,
145055382,
145055386,
145212082,
143281849,
141970424,
141538292,
139678075,
148217210,
139681770,
145620669,
145635382,
145635386,
146768968,
139614572,
143025887,
145609587,
142662144,
138734925,
145609603,
140218896,
139543103,
139558233,
144692011,
148131140,
145913037,
139637305,
145609632,
145609646,
146029276,
140838049,
144207198,
144496667,
145643854,
145643859,
147114839,
139607060,
140486749,
146577763,
144125635,
143052079,
141310542,
141730918,
147059270,
145733639,
138858463,
139030608,
145896261,
145284927,
141369073,
145632548,
145632552,
145632557,
145632561,
144234036,
142476538,
144436971,
143710174,
145640753,
145640754,
144661623,
138709639,
145694142,
145637351,
145637358,
144106557,
145615744,
144658241,
140025080,
146508208,
147152869,
141128397,
143327491,
146170276,
147637447,
147152878,
141043416,
147476475,
139605950,
140893120,
138918461,
144608020,
139605956,
142749247,
144680746,
145644412,
146971510,
140765523,
143149030,
145609667,
145609676,
140469670,
145560885,
147603414,
139473015,
145024516,
143669751,
145609705,
142971793,
138922938,
143203200,
141068729,
138599801,
139783745,
144940758,
140779209,
145609751,
141157870,
148262269,
147212847,
146124625,
142567139,
141293098,
146132996,
145917302,
145336387,
142569125,
144646580,
140396276,
139634073,
145643711,
145643712,
142234884,
138777546,
145727210,
146541243,
145041394,
145643954,
145569170,
147879891,
146166735,
147150125,
147924720,
139369806,
147264833,
145637300,
145640637,
145640641,
145640643,
145632647,
145612261,
145612271,
145615663,
140754905,
140754907,
140844533,
141963050,
145640806,
145640809,
146199103,
142436798,
140966391,
147190642,
148247258,
143897865,
139649197,
145206623,
142519263,
145631306,
143271637,
144514255,
146231856,
145638987,
148192505,
147359048,
147359057,
143224226,
143766888,
145638997,
145639015,
147359067,
145639018,
145639035,
147227959,
147938647,
143157421,
145639047,
145639052,
145644954,
147449563,
147449567,
144506639,
147529797,
145639068,
145644989,
145644994,
148163545,
140334750,
141286227,
146203369,
142329991,
141414033,
141414038,
140975357,
148013098,
145702303,
144337654,
145645145,
145645148,
141881918,
140885316,
145611165,
146544438,
140464083,
145645165,
141384643,
148121696,
145611194,
140582868,
142511788,
145645178,
145645189,
145645196,
140832326,
142551215,
142551216,
145611221,
145834198,
146317796,
145645203,
145645208,
147150856,
140705108,
141816982,
147330000,
145266461,
140580300,
147169069,
144537287,
141784047,
145631244,
145631253,
147143937,
145611995,
145615400,
145615413,
145615418,
142464898,
144689532,
145612116,
144418785,
138888879,
144533514,
140190246,
145670749,
140072411,
146307088,
140179564,
145337179,
142645994,
139349257,
146493102,
144625853,
143854079,
147046290,
142911165,
141508796,
147707208,
143354925,
143671702,
144640948,
147200089,
140098282,
147849420,
145641030,
145644425,
145644430,
141779999,
145631467,
142911355,
145612510,
141558475,
145641047,
145644447,
145644465,
146313293,
145631496,
146172486,
145116553,
145524239,
145641073,
145641076,
145641080,
145644469,
145644473,
145644478,
145644479,
147143194,
140856051,
144624906,
140257102,
145631521,
145631525,
145612556,
145631537,
144793515,
145612573,
145612574,
139758952,
145469601,
143073255,
147043956,
145644517,
141499576,
145631558,
145631572,
145612595,
145612605,
145644534,
145644535,
144950794,
144950799,
143013456,
145837417,
139230966,
143545214,
147606537,
145295655,
145517266,
145645267,
145645282,
140633278,
145036028,
146897385,
143394243,
145611324,
145611329,
140568303,
141378727,
145620501,
145620518,
147172146,
145635214,
145350171,
140210334,
147064156,
145236040,
145643750,
144450868,
142792557,
145615351,
145618003,
145618006,
145101976,
145618079,
145618097,
141831745,
147172352,
141340180,
143112978,
145018352,
138704696,
139030622,
143079272,
143163729,
142980040,
145326271,
147147974,
146642581,
146384926,
144043821,
139678734,
147013104,
147350797,
144993422,
143350784,
145559862,
145563944,
144124328,
147625447,
148035341,
145631319,
147218877,
145640909,
143674653,
145640955,
139474067,
146554234,
140643601,
145631412,
141054240,
146974304,
145618977,
142386544,
141896788,
145631422,
145631428,
145619008,
143346685,
140701048,
140074588,
145640996,
145641005,
144364675,
144452063,
145631448,
145631457,
145353166,
145080121,
145619041,
143088231,
145795710,
143685902,
139777736,
144526271,
142919834,
140456303,
148196296,
144675954,
138771751,
139966738,
144635122,
147988572,
138731655,
144052020,
142359298,
142359299,
140670318,
145620663,
147146485,
139977245,
145635380,
145635391,
140868501,
142261291,
144575285,
139879120,
143668588,
140303685,
140994671,
145609580,
145609593,
148219054,
146364726,
146354193,
145609610,
145609616,
141257936,
139558228,
139614615,
145609638,
145609651,
145456478,
145961975,
139897257,
145181705,
147722145,
141943095,
142089196,
142089197,
143668301,
145477542,
145643851,
145643862,
139604911,
145686338,
142704543,
139959671,
140928776,
138639371,
145518581,
139143791,
141522784,
145655080,
145733638,
143509335,
144488352,
138738675,
142689805,
145640767,
142680851,
143832642,
141902045,
141225456,
138705738,
145637365,
138789808,
142725249,
142705346,
145672920,
139771468,
145615734,
145615749,
144658240,
147005564,
147340728,
145302859,
142000947,
142000950,
138553391,
140025083,
147455831,
138896116,
147975788,
140321428,
142079176,
147690028,
147300945,
139605953,
142292528,
142579113,
145609674,
143670664,
146300947,
145893677,
139442446,
145609691,
145609692,
142700152,
144296301,
141064571,
147186361,
145609722,
139543217,
143359018,
146114514,
138681581,
145192814,
146485023,
139023543,
145609737,
145609738,
145609748,
146520728,
148250499,
145095486,
142297849,
139741658,
146535260,
145643722,
142372170,
138664603,
142550192,
141912777,
147020041,
144481951,
141500926,
145279685,
141314107,
141763096,
145643935,
147473240,
142707105,
141346587,
143168583,
147746489,
145771847,
143492381,
140254500,
144832737,
148067740,
144780519,
145637305,
145637314,
145640658,
145632637,
145632652,
145339434,
143462849,
145612263,
145615667,
145615682,
144673808,
145615713,
145615728,
138566843,
145640793,
145640795,
144349551,
140106801,
147883745,
141948075,
141603446,
142875149,
143412891,
145631286,
145631300,
145631301,
144514254,
145934964,
145638980,
143260809,
143224227,
140588815,
139403128,
145638998,
140683629,
147152016,
139168349,
141433002,
140440322,
146064964,
139446359,
145639021,
148124130,
140975182,
140299702,
138471813,
145639048,
145644955,
145644966,
145644969,
146300641,
147449564,
142304595,
141514241,
145639075,
145639077,
145639082,
142184193,
140788858,
144584154,
142329993,
144038088,
141414030,
141524072,
144474705,
141646954,
142949711,
145884080,
148186868,
140283863,
140659154,
145611168,
145611171,
142778376,
143651743,
138641896,
146634119,
145645162,
145645174,
141053784,
139965128,
145611197,
138809569,
145815321,
138457618,
145139611,
145139615,
142220533,
145741952,
138574675,
147186109,
147166844,
145868076,
141900220,
146823566,
142380111,
143664947,
145611990,
145612001,
147089585,
145612103,
146329557,
147385612,
139038025,
145362389,
147623856,
144022546,
145378460,
148057702,
145641017,
145641027,
145641028,
145644432,
141440186,
145631477,
145631478,
146550232,
145612501,
140088586,
145641060,
145641061,
145644452,
145087194,
145612524,
145612527,
143795193,
140664707,
145631514,
145631531,
145524248,
145539803,
145612547,
145612561,
145612562,
145644511,
147732253,
145631550,
139057583,
144565089,
141953620,
142437738,
145631575,
145612587,
145612590,
145612602,
139996639,
147270117,
139556156,
145644541,
146970223,
144359863,
139868806,
143013461,
142633243,
142480208,
144626703,
144755376,
145904150,
138678430,
147792156,
147703702,
139849655,
142987379,
145620428,
143928695,
143076452,
143255394,
146181104,
146181113,
146027339,
147309725,
144816012,
139320893,
144903928,
145645235,
147050901,
147138582,
145645244,
145645258,
141073500,
145611276,
145611289,
143067456,
143214087,
145295665,
139196833,
147532591,
145645263,
145645283,
144381646,
145355792,
141419103,
146414890,
145611335,
140568305,
141378722,
145620511,
145620520,
144148430,
145635213,
145635224,
145635231,
145643741,
145643748,
143558130,
148010903,
145615342,
145615349,
145617994,
145618001,
145618008,
146715766,
147308725,
140687382,
145101978,
145618096,
144492123,
145636955,
145731816,
144404105,
146748841,
139252383,
142247337,
143231768,
145132048,
146475013,
146083844,
141534845,
145462695,
148089415,
145278060,
145631320,
147973267,
145966256,
145640969,
139124982,
139286104,
145479641,
145618974,
145618979,
145045995,
147322333,
145337898,
146814800,
145619019,
142674726,
142952827,
139851146,
140760690,
145641002,
145641009,
144152085,
145631444,
145631451,
144808461,
145080123,
147162153,
145619036,
145795705,
147846489,
140907172,
147784055,
147907352,
141491689,
144470400,
144675955,
145966351,
147188557,
144178532,
139106657,
145620678,
145635379,
145635388,
145635389,
145547401,
142126526,
141001987,
139577882,
140275484,
147099424,
140950873,
145609578,
146342009,
147122705,
139800641,
139800648,
147858506,
139512506,
139558226,
139558227,
147341433,
139846601,
147391302,
146160453,
145609626,
147148355,
145609649,
140224956,
144425030,
138524318,
138524323,
142089194,
145643847,
145643849,
145643856,
145643861,
145686339,
143955767,
138569597,
146871213,
145518583,
144689488,
144488349,
141112386,
139030615,
144245572,
145632545,
145632554,
146914331,
142711506,
146262183,
142325959,
139341628,
146990202,
145694128,
141902036,
147922431,
147922438,
145637353,
142937502,
142725247,
140820281,
139510355,
145345529,
142599718,
144205765,
145615737,
145615746,
145615747,
141420046,
140025077,
141083986,
146462710,
147134481,
140369356,
138793172,
141402361,
146559194,
142982949,
143600300,
138957549,
147131297,
139944444,
142552348,
144424162,
139656319,
144922025,
140865242,
146977320,
146157532,
146157536,
147152925,
140228735,
140059044,
148229676,
138566204,
145644414,
143078225,
146237134,
145609682,
148080027,
146173467,
140462423,
146207392,
141068734,
144252619,
140616158,
145609717,
145609726,
144899112,
144352930,
144784769,
143668731,
140719900,
145609732,
145609739,
138619039,
145399700,
145379532,
139672927,
140095828,
145150043,
145643724,
142234886,
138506214,
143132091,
146467940,
142852123,
142649951,
146192735,
145643937,
145643938,
147746487,
146660839,
146081412,
145418520,
145637301,
145640652,
145640657,
138853222,
145632634,
145632640,
145632649,
145632650,
140383066,
145615669,
145615671,
145615680,
145615712,
145822763,
143227784,
144597519,
139084945,
139696398,
141667287,
141958477,
143258817,
140054418,
140371111,
142388538,
146624386,
144721623,
147359055,
148058799,
145992807,
145638995,
146662308,
144781248,
142142538,
143451331,
141608578,
148072584,
144712955,
145639034,
148124150,
147449559,
141156399,
145639054,
145644956,
145644970,
146372672,
140635860,
143208329,
143010410,
145957479,
140788867,
139841607,
142111746,
138991783,
142975015,
141414035,
145350161,
143468491,
146457640,
148215282,
144591358,
141562409,
145645132,
145645139,
140105568,
142369524,
141768769,
147864156,
139854827,
145611174,
142148486,
146544440,
148229377,
147193864,
148121694,
148132363,
143431955,
143776201,
142551196,
145611192,
145611199,
138809565,
142081607,
145139610,
141990305,
142530331,
145645194,
145741956,
143017603,
147150831,
141743913,
143597705,
145611205,
145611216,
145611223,
141709171,
145166816,
145645210,
141561052,
146287847,
142941813,
146043839,
141816975,
144477377,
142563894,
146590602,
141575292,
148075708,
145631246,
145631251,
145631260,
140128087,
143345840,
138644575,
142833978,
144890512,
145611988,
145611989,
145615398,
145615416,
144798892,
146545523,
146549750,
141151570,
145612100,
144278771,
140081742,
146773350,
145856963,
147482270,
139414276,
140072395,
139669572,
140138010,
143957751,
144012607,
147494778,
141120829,
139349247,
147707206,
146108463,
139204142,
147119815,
141779991,
140101881,
145641025,
145644422,
142356318,
145631469,
145631483,
147061656,
145612503,
147559505,
144851686,
139611445,
146349695,
146796497,
147520195,
138442353,
144830861,
144830871,
143097797,
142642635,
141597104,
148230359,
141861777,
146775715,
141175226,
139660285,
143161743,
139975831,
147738173,
145694182,
146475018,
144022616,
144323156,
139622890,
144758608,
143433935,
145631309,
145631316,
145631328,
145640904,
145640907,
145640918,
145121107,
145966250,
142806601,
141316712,
147086578,
143663796,
145640963,
145631404,
140385246,
145580204,
145618985,
143519310,
145640977,
145640987,
140536149,
145631437,
144808454,
147162127,
139635082,
138459685,
145619001,
145641013,
144808455,
145619033,
139397370,
143490764,
145296798,
143094597,
145451569,
139542376,
143282801,
145533334,
143203617,
147913933,
143969935,
145012101,
141471425,
148217208,
138846565,
146302068,
145620657,
145620671,
144188798,
145635384,
145547389,
143545869,
147953527,
145609585,
139543086,
141501601,
139648427,
146354201,
143025906,
147858502,
145609605,
145424637,
138485059,
139558231,
142828179,
141142350,
142565254,
145609620,
145609630,
139864542,
147789077,
145609643,
145609656,
141018018,
140896978,
146892880,
145643844,
145643857,
140486745,
144747997,
147227297,
138470189,
143275669,
144215143,
144991155,
145122798,
138639370,
143207953,
143573320,
145632550,
145632559,
139520937,
146262171,
142487117,
145640759,
141166616,
147871243,
142680844,
141587608,
147009264,
145637354,
143723487,
139196109,
140424252,
143736206,
145213957,
145615742,
139323272,
143358213,
145072418,
144981109,
138931335,
139041731,
138896125,
141102132,
139017120,
146559193,
143669552,
143782533,
143841770,
146789876,
147084434,
140169416,
144086386,
144608007,
146812665,
144644734,
143589079,
140659114,
144177529,
145644418,
146213366,
145609666,
145609669,
145609679,
143647536,
139551168,
142129811,
146152735,
145893688,
140010508,
141793189,
143669753,
144252613,
145609699,
145609703,
147189533,
141373303,
146024023,
139941430,
142767174,
145835379,
138599835,
148138182,
140573483,
145399696,
139456183,
140109123,
144200212,
140958934,
142482105,
140805261,
138805183,
144646582,
139646101,
141972789,
147530290,
145643718,
143686739,
143132085,
143665602,
139713915,
145111272,
146182153,
144997751,
148071969,
141632322,
145643943,
146166743,
146701405,
147287574,
138693593,
147924714,
139369800,
147179438,
138936755,
146106258,
147502173,
147244083,
145637322,
145640645,
145640649,
140108049,
145632645,
145612254,
145612255,
145615674,
144673805,
145615720,
145640800,
144351533,
145686168,
144663998,
138943648,
145765329,
145185730,
140796700,
145333506,
142519256,
144857034,
143271635,
146231862,
145638974,
145638985,
143993006,
147893018,
147359050,
147359059,
147449509,
143766890,
140409528,
145639006,
147359065,
140702159,
145639016,
145639028,
145639041,
145639045,
145639058,
143390135,
141505118,
141065710,
143738283,
147449572,
145074531,
138502327,
145639067,
145644984,
146087708,
145514439,
141414031,
144474697,
142464156,
145702297,
145645138,
145645151,
146219647,
141210333,
145611158,
145611167,
145611176,
143289123,
146634114,
145645155,
147103635,
143776194,
145611189,
142469513,
141090407,
146634131,
145645183,
147166833,
145611209,
145611214,
147137328,
141090412,
145799697,
147833932,
145645213,
146769167,
145429472,
138744852,
147990422,
147519768,
138824538,
144311553,
146491840,
145611993,
145615402,
145615407,
140987336,
140081734,
140190244,
139230153,
146500456,
139084939,
147494777,
146150649,
144429890,
143658247,
139445396,
138837967,
139232035,
146493104,
147046292,
147545118,
141652570,
147413992,
145331694,
145641020,
145641032,
145644441,
144391060,
139142455,
145631473,
148234899,
147061652,
145612516,
146570500,
145641049,
145644459,
139903949,
147719745,
145631494,
145631497,
142638351,
145612535,
138743797,
145641070,
145641083,
145644471,
145644488,
140508635,
140508649,
145631523,
146437658,
145539809,
145612554,
146610266,
147774487,
142685468,
146972670,
145644500,
145644504,
147143211,
140013658,
139922824,
141725144,
145631539,
142731756,
142419770,
147187366,
145612583,
145276728,
145644529,
143207648,
145631567,
138840288,
140133014,
144950797,
144626698,
147428812,
145100188,
139230968,
146096136,
144489228,
142222698,
147600334,
145077323,
142892678,
138678437,
142095996,
139674582,
139113262,
146221719,
144882473,
145350102,
140644297,
146739130,
141602792,
140640777,
143024826,
142287028,
142872853,
145631324,
147224451,
145640922,
145640925,
145640952,
142207036,
147215920,
145631399,
145631408,
141418121,
139059588,
145618981,
145618992,
139814260,
145989268,
145640976,
145640981,
145640991,
145631441,
145641000,
145641001,
145631452,
145631453,
143000479,
147945900,
145619030,
145619037,
148196295,
145296802,
143145731,
143094593,
143426541,
141126924,
138597508,
139114447,
138818428,
144684427,
138814012,
148170364,
142785207,
145620658,
143218836,
142652198,
147006378,
142772325,
141077285,
146599850,
139117086,
141509465,
145609589,
143601440,
146443136,
139833129,
138734929,
146342008,
139845172,
142345315,
138552281,
144509877,
145609612,
146377825,
142853408,
140707419,
142996146,
144974738,
145609634,
145609641,
147783039,
145609647,
142767109,
146160494,
144499342,
141943089,
147597161,
141364657,
145643848,
146332531,
145666558,
145841864,
148007892,
144334655,
144576004,
141502186,
145533756,
144395116,
141626802,
141996044,
145632546,
145632563,
146262175,
143494772,
145640749,
145640752,
145640755,
144569326,
147188528,
147467318,
143701329,
141191705,
147009268,
145637346,
145637350,
138510657,
142127051,
146552564,
139510354,
142737791,
145345537,
139025650,
147203900,
147332869,
145615738,
147934736,
145102510,
145252211,
138931339,
143378638,
146170260,
142829283,
139106667,
145177012,
146466804,
147005577,
142585281,
146462723,
138979535,
138660933,
147152893,
142745297,
144151106,
138775211,
144712351,
148044695,
139564150,
143477297,
141160314,
139690097,
142203472,
145644417,
141743648,
139394738,
146202978,
146237142,
145609664,
145609675,
146160518,
142521882,
145609695,
142822134,
145609708,
145609711,
145609718,
139783753,
146386411,
145609733,
143293934,
147441693,
145367656,
143458953,
143458962,
144200217,
142629997,
138895167,
139646087,
143880625,
145917292,
146090045,
139285139,
142675364,
141377662,
138686014,
142124587,
142377118,
138810283,
143466081,
143661560,
145279681,
143390899,
145806422,
146381325,
145963980,
145637309,
145637310,
139708637,
145632641,
145612252,
145612267,
145615670,
145615681,
139530951,
145104587,
145640796,
145640807,
142205250,
144727684,
140966397,
147423287,
145950533,
143483703,
146263799,
146702198,
145631289,
145631293,
145631296,
147667849,
147669674,
139477793,
146231857,
145638989,
144743163,
144781247,
147359046,
147359063,
141939307,
147119280,
145639010,
139713154,
147359068,
140440313,
139446363,
145639017,
147449560,
143157422,
144318032,
145644959,
145644962,
142191005,
148126469,
140577937,
141156239,
145644988,
141574397,
144572786,
142329997,
144028374,
146902339,
144186644,
143914894,
139276843,
141414032,
147229889,
140843755,
146206380,
143289118,
144591359,
145645142,
145645147,
140283867,
147924079,
145611163,
145611175,
145611180,
146544437,
139178893,
140592645,
145645159,
141410330,
145504466,
145611181,
145815326,
138823109,
140582867,
146321146,
145645179,
145645188,
139488920,
147247177,
142291358,
141920109,
145611222,
145611226,
145834203,
145645198,
145645202,
145645209,
146749814,
145790843,
141904883,
141915493,
139147106,
140705114,
147811076,
141575293,
145631243,
145631254,
139358559,
145611997,
138721313,
146545528,
145612098,
145612099,
139809820,
141125250,
145670755,
143873119,
146543418,
140179581,
139940499,
139445400,
139116328,
141870341,
139102554,
142197628,
148059760,
143354926,
139828546,
147295532,
140130239,
142275147,
145138749,
140101865,
139177921,
145641024,
145641036,
145644431,
147432499,
145631482,
146550238,
139400201,
143035692,
144279292,
145612504,
145612512,
143523486,
146960104,
145476339,
145641053,
145644444,
145631509,
144409101,
139400210,
143155679,
145612520,
145612531,
144137854,
145641074,
145641079,
145644477,
145644480,
145644484,
142573718,
140508639,
147732245,
145631527,
139791685,
145612543,
146610259,
144027737,
145644508,
143200673,
145631538,
145631543,
144565093,
145612572,
145612575,
145612579,
140314459,
142802244,
144294072,
145644516,
145644525,
147171329,
138573832,
146414487,
145612606,
141592010,
146853608,
142761663,
145644545,
142182961,
143858349,
145208316,
147996940,
146674388,
145837408,
145837416,
146820205,
143958419,
146087057,
140043268,
140248401,
142617601,
142381156,
148159751,
143588170,
145576823,
141957392,
139458429,
142819235,
140184747,
141359701,
147213875,
147115439,
147791185,
139734439,
143430124,
144191194,
144761609,
139469715,
145705071,
143381632,
147198027,
141609631,
142488754,
140908935,
145059697,
144455706,
147768231,
146384927,
138787356,
147350798,
144993417,
142108253,
147120542,
143872021,
146391884,
147254723,
139307374,
142599728,
145631323,
147218879,
145640914,
145640921,
145640951,
145640960,
146199047,
143918121,
147215923,
145631410,
139059578,
145546642,
139793747,
145618984,
145618989,
145640973,
145640984,
142862366,
145631426,
145631433,
145631440,
145619006,
145640999,
145631454,
145631461,
145619022,
145619029,
139111580,
143145732,
140920161,
144526259,
145577942,
145237278,
148116900,
147913938,
145948566,
141321867,
138882324,
145212075,
148223951,
140109113,
145620660,
145620667,
146576833,
146834940,
140768899,
146149769,
145547392,
147004588,
142199244,
142785210,
140360502,
139614574,
147316616,
145609592,
143722481,
141319295,
145535092,
144509876,
142455350,
146888002,
144250536,
145609609,
145609615,
140626609,
145609623,
145609637,
142828190,
144511904,
143779284,
143779291,
145609662,
147597153,
144496671,
146119270,
148186092,
140486746,
143275672,
139959665,
141221127,
140242404,
144397100,
146897581,
143509328,
147689629,
145632555,
145632564,
142060174,
142154122,
142476540,
145640760,
145640769,
145640770,
140048351,
145694148,
138817110,
145705309,
147467313,
147206683,
141588483,
145637360,
145637363,
144106553,
145853109,
146251605,
144981125,
146971409,
138896114,
138979529,
145013246,
146559189,
147637449,
141078812,
145529474,
141646200,
141600576,
147937866,
147690034,
144590774,
144608006,
142842670,
140561176,
138782237,
144267694,
139796680,
146773893,
147967984,
145561983,
143868573,
141576175,
146244178,
146244181,
146244187,
141156976,
142541180,
143779293,
145609673,
145609683,
139214314,
145939786,
143541136,
143541147,
142639147,
145609689,
145408253,
142822133,
140571883,
144433668,
142822139,
147388731,
145609730,
145609746,
142790723,
147853499,
139976733,
147507788,
140925998,
143458954,
146585447,
139285140,
145643728,
144221104,
146143702,
146143704,
145167750,
139583734,
147455377,
138810282,
143466074,
141164777,
142200019,
146166738,
144184645,
141336861,
146433927,
145061834,
139718976,
138877624,
145637311,
145637318,
145644238,
145339436,
145612259,
145612268,
139970341,
144673814,
145615719,
145615725,
145615726,
145640799,
144297795,
148216269,
148250847,
146318957,
138719685,
147404419,
140387371,
142519268,
145631290,
145631295,
139019549,
147669675,
145638971,
145638978,
145638981,
145638992,
139725376,
147359054,
143260811,
139485595,
141653326,
144687057,
145638999,
145639004,
145639013,
148124125,
141706605,
147359069,
142539099,
145369390,
139095781,
145639019,
139948748,
138942042,
140464074,
145639049,
145644965,
147449569,
140743225,
141043865,
145639070,
145644977,
145644982,
145644991,
145644996,
146087711,
142918947,
147496962,
142465788,
140788860,
142329989,
142329996,
148218107,
140714523,
148240940,
138664373,
144398401,
142084230,
140466728,
144014305,
145645158,
145645160,
145645167,
145645168,
145414385,
144958969,
145645180,
145645187,
145741950,
146793188,
142132802,
145371976,
147137331,
146317780,
148073174,
147833927,
145645201,
140575865,
146433326,
139250043,
147519767,
141900210,
146661688,
138507894,
145927685,
139731850,
147074027,
145612002,
143522979,
143369388,
142464896,
145612107,
142346255,
141125247,
144948537,
139279655,
142425705,
141432102,
145404852,
139118098,
147707216,
140694327,
146976719,
147956019,
146971273,
140101866,
145644428,
145644433,
145644438,
141789461,
146550229,
145641039,
145641044,
145641058,
145644445,
145644454,
145644463,
145631487,
145631490,
145116551,
145612536,
139219645,
140524338,
139459413,
144393813,
145641062,
145641071,
145641082,
140695849,
145973009,
144624903,
144624912,
142854651,
143569328,
145631516,
145631519,
145631526,
146817907,
145524245,
147384537,
147181502,
140102094,
141405377,
145631535,
145631546,
142419774,
139057584,
145612567,
139758950,
148079117,
148179264,
142816387,
145644524,
140156911,
145631556,
145631565,
145612604,
146518526,
139890162,
147041799,
145644537,
145644546,
148267105,
145837419,
140608142,
141440068,
142726790,
138741703,
146254470,
146583898,
142919366,
148257638,
144958124,
144958125,
140412713,
139893533,
142381158,
147792161,
146628128,
143592324,
145611251,
145645254,
141168938,
141513273,
139918598,
147729148,
142983850,
141073499,
140693726,
145611288,
143447275,
142470144,
148229487,
145282669,
144656751,
145286059,
145517284,
143394247,
147135096,
147767443,
142749983,
145611323,
145611326,
145620517,
145620521,
141786921,
145635225,
145635227,
145635230,
139823757,
145643734,
145643737,
145643752,
148010906,
148239326,
145618004,
145618005,
146715763,
144481818,
145143009,
145618095,
138735382,
146711708,
145636951,
138999831,
147115532,
146037161,
143108408,
142363955,
142370374,
145497956,
144456641,
146260901,
142932426,
147013103,
147490706,
144993421,
144999941,
145559861,
145537125,
147169271,
144745961,
139133582,
141222815,
139025658,
145631307,
145631317,
145640911,
145966261,
145640948,
145640957,
147672870,
140643606,
141054242,
143911795,
143911809,
147953829,
145618978,
142952817,
140536146,
145631423,
145631424,
146814804,
145619009,
145619012,
145619015,
139814268,
145641006,
145641012,
143675662,
142859366,
139043029,
143900834,
145631447,
145619039,
139397377,
140405849,
147784059,
145237273,
143145737,
144912043,
144675952,
141147136,
144431849,
145635374,
145635375,
145635392,
146452999,
147155964,
143748098,
142892950,
146149757,
146255988,
142261289,
145819910,
145392012,
143864604,
145100320,
145609577,
145609582,
140954098,
146152636,
144603731,
144068953,
139648420,
143003231,
139800637,
139558230,
144603736,
146160464,
145609627,
148272222,
141732584,
147783046,
139960187,
145609644,
145609650,
142767088,
140224959,
138689850,
145643852,
145643853,
145643864,
142799632,
138646074,
141310540,
138569596,
146846100,
140093476,
139860574,
141730921,
147202115,
140656038,
139641106,
140660005,
142250317,
144488347,
144160093,
146642571,
145632551,
146262179,
143356558,
145640751,
141994885,
148258838,
139739414,
147922434,
145637349,
141664997,
140774605,
144373990,
145672922,
145908986,
144501332,
144640956,
145615732,
145615733,
145615743,
145615750,
139645254,
145252214,
144927208,
145207439,
145072423,
140025099,
144302718,
142130880,
138957545,
147476481,
144875043,
140865231,
147134530,
142045648,
140059058,
147397082,
142106526,
145644410,
145644413,
138782256,
138902405,
138902408,
142579111,
142724498,
141749367,
140784281,
141079350,
145609678,
144803865,
145560897,
147603415,
142521888,
145609690,
145609693,
142102605,
139875466,
145408258,
139702575,
140423430,
144974837,
145609720,
145609721,
145609735,
145609736,
142025853,
143720488,
139646082,
139045367,
146760374,
145747649,
145643721,
143552307,
141775685,
145181559,
144464557,
148022818,
147148935,
147020043,
146541240,
145041392,
141164781,
145643934,
145643941,
139135685,
143575126,
144282022,
139847279,
144002704,
145324190,
145637304,
145640639,
145640642,
145640653,
145640656,
147462175,
143935181,
145632636,
145632646,
145632653,
140425025,
145615665,
145615666,
145615683,
145615684,
144673810,
145640794,
145640804,
143847110,
141989247,
145865793,
148216274,
144578312,
144987063,
147370737,
140371106,
142519264,
142349976,
146316583,
144514252,
141758877,
143131371,
139142922,
143224229,
144262889,
147164770,
141939295,
142025613,
147359064,
141608579,
145639031,
145639036,
145639037,
142266958,
138435330,
146668974,
148237545,
144733111,
148072602,
141065705,
144101773,
140743222,
139171418,
141011271,
146640656,
145639073,
145639076,
148163546,
146087715,
141574400,
144912861,
142972532,
142286136,
142286137,
141663549,
145660232,
141414036,
144474704,
146457644,
142279008,
145645133,
145645143,
145645146,
144930225,
141115136,
145611169,
145611170,
144802144,
146966273,
143650133,
141051841,
143776197,
143015254,
145611195,
145611196,
138809566,
144688771,
145645177,
143322408,
147888118,
147166828,
145611217,
143044567,
144700682,
145645206,
148062341,
140486852,
146785107,
145631255,
145631258,
147533130,
143811452,
145611992,
145615412,
145615415,
145612104,
145612105,
140987343,
138749907,
139349251,
143854083,
143854084,
144770837,
146212356,
146945942,
144057127,
147295518,
143216371,
141693602,
145641029,
141440187,
141681792,
145631465,
145631479,
146550230,
145080125,
143035701,
145612500,
144696845,
140581599,
145276653,
140088585,
140088588,
139903959,
147719751,
147719754,
140127017,
146399555,
145612525,
145612526,
146593444,
145644481,
140013655,
140508642,
142408750,
142408751,
145093566,
145611257,
141965386,
145645257,
147729134,
141073497,
144669998,
145611274,
145611294,
144090702,
141965413,
145645266,
145645269,
147729159,
147487355,
145611303,
145253007,
142470148,
145286062,
145517283,
142943686,
142943687,
145611317,
145611330,
145973857,
147146340,
148255105,
144967598,
145643733,
145643751,
145615352,
145618078,
145618081,
146711698,
145636948,
139247895,
147559514,
140814008,
147330540,
144851693,
145878739,
144191190,
147180264,
147649501,
141827618,
141597110,
142466671,
140908932,
142243374,
148220907,
147909673,
139543850,
144876946,
141804174,
143591514,
143872022,
143227914,
146391887,
143202366,
142872841,
145640910,
145640915,
140677850,
145163823,
145640956,
145640961,
143687461,
147215918,
145631411,
141418122,
145618993,
145618996,
138458246,
142674716,
141534010,
145640972,
143918137,
145631421,
145631429,
145631430,
139635085,
145619010,
139814267,
143663850,
139686000,
145640995,
145631458,
145631464,
145619024,
145619025,
145619042,
146952577,
145265027,
140074613,
145968687,
143406114,
143685901,
143685904,
140842178,
145577946,
141698460,
141675704,
148116899,
142513003,
143883653,
139942377,
138489167,
145948565,
144675953,
147093795,
141147139,
139942389,
148223972,
145620664,
145620665,
145620679,
140210472,
142090058,
144393403,
148219034,
139614560,
139614573,
145609596,
138691431,
146888005,
146888006,
145609608,
145609619,
144443956,
143690323,
147186279,
145919081,
145609622,
140542673,
141132959,
141132962,
139679897,
145323595,
147783035,
145609661,
142961926,
141355969,
141567706,
139210103,
145477543,
139002684,
142704542,
145122805,
139374724,
147212772,
143509333,
145533753,
143869692,
142482888,
140467755,
145632558,
144018641,
143710176,
145640756,
145640766,
147166009,
145637359,
145637364,
146977145,
139510350,
142777877,
138947712,
146251608,
142745262,
144041911,
138931325,
147131232,
142000949,
144263869,
146172358,
145883286,
144599648,
147301953,
138436717,
141362004,
138896129,
138638039,
144335235,
141265476,
138918466,
139847752,
143397271,
144608009,
140561174,
138782235,
142639127,
144417941,
145609672,
145456487,
143541143,
139473012,
139618917,
139023508,
140616150,
145609707,
142971800,
143647542,
147189539,
139875476,
144887567,
145408256,
141569354,
145564981,
143359015,
143359020,
139456163,
144878034,
145609749,
145609750,
148175835,
142612551,
142629994,
142065234,
144667004,
143416899,
145917295,
145344518,
138610218,
138816456,
143179618,
147139754,
142036603,
142124765,
142852117,
146781776,
141074081,
146541241,
146609142,
146499151,
145643951,
145643952,
139272695,
143168584,
145334914,
139369809,
140241487,
140254499,
142123370,
140905008,
145637315,
145637321,
145640638,
138853214,
145339435,
145612264,
145612265,
145782956,
145615722,
145615729,
145640808,
145640811,
147569009,
141603453,
146263796,
141136976,
145206624,
143425621,
145631299,
145631302,
143271644,
144514253,
147132215,
145638977,
145638982,
143224228,
147812613,
144527099,
145000875,
145639000,
145639003,
145639014,
139730949,
146493837,
141706612,
144555246,
144555247,
147359072,
147359073,
140281853,
140440310,
139207376,
144334009,
145639022,
144869087,
140492055,
139221777,
139982212,
145639050,
141046320,
141046321,
147449565,
147449566,
139171417,
143327962,
145639074,
145639083,
145644978,
145644981,
145644992,
138586586,
144572780,
142329992,
142329995,
144186640,
147229884,
147229898,
142633351,
148013103,
141454280,
144077203,
140466732,
145645150,
143093169,
142927546,
145611159,
146544445,
143345106,
147138501,
146457647,
145645163,
145645164,
145645172,
146782874,
146123406,
140851456,
142081601,
148229385,
138823110,
145645191,
145645192,
145741949,
145834196,
142328661,
146321150,
139885692,
145645205,
142982030,
138509897,
140860357,
142916375,
139390876,
147329994,
144301952,
144596958,
144828086,
147791100,
140538884,
146661684,
146210468,
143368021,
138795958,
142380109,
145612006,
145883101,
145507447,
144955449,
145392758,
146704965,
143957742,
138749914,
144811225,
146783999,
145404853,
146150641,
145934007,
146493099,
141179414,
141795725,
144881468,
142540363,
143713413,
139828549,
144996656,
145644424,
145644427,
145644434,
146313288,
145631476,
146176747,
142694796,
146621980,
139559450,
139559455,
145641045,
145641059,
145644448,
145644449,
145644451,
145644466,
143894330,
145631491,
145618093,
145636963,
142233404,
143923483,
138559687,
144798067,
144798070,
139135694,
143108404,
141498950,
138858476,
141609632,
138668673,
144181428,
145767712,
141750265,
145862199,
143742594,
142932422,
147013117,
144509120,
147350787,
143635540,
144993415,
140058027,
144412837,
144578313,
148089403,
144868621,
142872850,
145631315,
147218883,
145640913,
145640919,
138625706,
145924488,
145640949,
145640959,
145640968,
146554235,
142995315,
145631398,
144711080,
145618976,
140836411,
145640988,
143674715,
143935796,
146666009,
145631427,
145631432,
145631434,
145618998,
145619007,
142022781,
145631462,
145619021,
145795708,
141383903,
143685906,
147784061,
142454597,
145237268,
144067863,
140920168,
145212077,
142372161,
145620668,
145620675,
142717565,
146219982,
140282232,
141001986,
141533157,
147122682,
145609576,
145609584,
140717978,
143563023,
145609604,
139558232,
144068957,
142853413,
146166170,
144922642,
147747401,
145609629,
142945487,
146984048,
138487204,
141732587,
143779283,
145609657,
145609663,
141005461,
142129809,
147468430,
140181500,
146892878,
145643843,
145643858,
147121387,
145164949,
140165917,
141645491,
145122802,
142569919,
147059267,
141502188,
139699397,
146106197,
143869694,
139321784,
145632556,
145632562,
146413212,
147077623,
142060176,
144436970,
141963042,
144702693,
145640762,
145640768,
146962522,
141602371,
145637361,
142988699,
139493074,
144205762,
146222836,
145615752,
145180256,
140025067,
147005553,
145261472,
138493615,
143386255,
139624343,
146251623,
145013247,
147988626,
143426637,
142454685,
143782534,
147476474,
147084439,
141245175,
138918462,
144086390,
143195390,
142842669,
146812662,
148128898,
139137979,
143246913,
145818979,
146580228,
142292533,
144177526,
138782262,
145676093,
139394737,
142639121,
145609665,
145609668,
143669756,
138599798,
138604476,
145609704,
138901300,
142079900,
147189524,
145408254,
142822135,
141068737,
141050376,
145609723,
139189315,
138681577,
145609745,
141607528,
143185976,
140879972,
139976732,
142617689,
145095475,
146585445,
143720485,
139741672,
139045358,
146760376,
145643713,
145643727,
141056538,
147148948,
142931132,
141362882,
141187694,
142826014,
146166740,
143168582,
144354940,
145771841,
145991713,
139369805,
140254501,
139847273,
145193063,
145637319,
145640646,
147818240,
145632655,
145612253,
145612260,
145615717,
145615724,
145615727,
139274761,
145640801,
145640814,
144838695,
146997020,
147569011,
144319521,
143273901,
142917497,
138868259,
147766661,
148106973,
139767045,
145631303,
138546773,
143411009,
138874879,
143271640,
145934970,
145638979,
145638986,
148190717,
147359047,
147359053,
147359058,
143669251,
144687056,
145000871,
145638996,
145639007,
147449523,
145327991,
144712953,
145639020,
145639026,
147227958,
139948747,
145442407,
146658291,
145639039,
145639046,
145639053,
141046323,
148166716,
147449568,
147449577,
139171420,
145639071,
145644983,
145971011,
141711024,
142329986,
142329988,
143096188,
147015100,
140877978,
140853706,
146510625,
143876906,
145765380,
148241837,
143093165,
140885315,
145611164,
146766376,
145645166,
145645169,
141410332,
147150827,
145611186,
142083374,
143232831,
141315378,
138851447,
142704015,
140860329,
145626609,
142328665,
144700677,
145645197,
139905256,
142722167,
144975689,
147548091,
144947535,
139673489,
145869329,
147362257,
146433325,
145631261,
143969367,
145054863,
141796995,
145611994,
145615403,
145615410,
142794122,
147180251,
147165681,
145612108,
145612114,
145612115,
141938269,
146278854,
144326506,
139281474,
138493202,
142939432,
147494771,
145404851,
142646000,
146493092,
145053328,
145200402,
144823370,
147616161,
148106987,
146722421,
140101867,
143413915,
145641031,
145644439,
145205760,
142356313,
145631466,
146550228,
145080128,
145612509,
143795187,
145641041,
145641043,
145641050,
145644455,
145644462,
145644464,
139465098,
145631489,
145631504,
144409106,
146533999,
145641063,
145644468,
145644474,
139924945,
140127913,
146691589,
145631511,
145631524,
142638361,
145612548,
145612557,
147181510,
144166157,
146972671,
145644499,
145631540,
142066381,
145644530,
145644532,
145631564,
145631566,
145631573,
145612597,
145612603,
138840287,
142761673,
145644536,
145644538,
146283045,
146549039,
138806252,
141498122,
143902520,
138491841,
146418676,
144704893,
145208323,
146418679,
146405302,
140082869,
145287099,
143024823,
143922376,
142286977,
142505439,
144645646,
144645649,
145631312,
145631325,
145640908,
145966253,
145640966,
139474076,
145631401,
140385247,
145618986,
145989269,
145640978,
145640990,
140988052,
145619000,
140436763,
143346691,
144231000,
140760680,
145641004,
145641014,
145631443,
145631449,
143000474,
146310072,
145619032,
145795702,
144470392,
139542377,
144271875,
148266542,
145533335,
143669506,
143969938,
142971158,
138486476,
140527890,
145597013,
138882322,
141629256,
139942383,
142570729,
145620674,
142717564,
145635383,
144100680,
146149759,
146255998,
144384181,
145609590,
146455696,
144401123,
144974735,
143206701,
145609602,
145609613,
143617561,
139846608,
140707420,
139638563,
145609635,
140542669,
147868281,
141132965,
145609652,
145456475,
141943086,
142089189,
144747996,
143955763,
140928784,
140093483,
142166050,
140200192,
146271794,
141502185,
141626753,
139030613,
139520942,
143058439,
139762087,
142476536,
142487125,
142329653,
143701328,
141902040,
147922427,
145637357,
142988697,
139510353,
139510359,
145615735,
145615741,
142672676,
142585282,
139620475,
142351929,
143883725,
139395357,
143585623,
143246906,
140059042,
142803003,
139869587,
143790646,
144086387,
140865239,
143195394,
147540772,
139605958,
142842671,
146861256,
146577707,
138782244,
144821475,
145644416,
145644421,
142719001,
140971427,
143872531,
147485419,
140571819,
145609680,
142767110,
147660236,
144803856,
144803862,
145609698,
147292082,
147153977,
145609712,
145609715,
145609729,
140458915,
141607540,
139565091,
148262268,
145336379,
141435714,
138666427,
139672923,
139672925,
140642282,
143416895,
146720668,
145917305,
145450523,
140396272,
140095843,
142808289,
141972788,
141972799,
145643719,
145643730,
148022824,
147020035,
144133855,
148258347,
147340125,
145279694,
148053090,
138762421,
145643933,
145643942,
145643948,
141793752,
147924717,
145637306,
145640648,
145632638,
145632644,
141586675,
145612258,
145615675,
147269170,
145615730,
141935265,
141603464,
146318955,
139417240,
140650447,
143082287,
142519257,
142519259,
140184090,
145631292,
139742621,
142388535,
145189557,
141503103,
145638975,
145638988,
147359045,
147359060,
139142924,
145029372,
148124122,
147359066,
141749785,
148171019,
145639029,
147298302,
141706618,
147449561,
138464549,
142495024,
145639040,
145639059,
145644960,
145644963,
147449571,
145721079,
140621741,
144506634,
147990000,
145289668,
145639062,
145639064,
145639084,
145644985,
142184188,
145847808,
148089121,
141449829,
142330001,
147725589,
145434931,
143596369,
139803626,
144591356,
145645135,
145645141,
144523471,
147621495,
148037005,
142945273,
145611162,
145611177,
148229379,
148121688,
148121690,
140885319,
141410325,
141410327,
140851454,
143015247,
145611188,
145611201,
148229388,
147110364,
145645182,
143597703,
145611210,
145611211,
145611225,
142075602,
146321160,
145868075,
145645212,
145645214,
145875660,
142941798,
142941803,
142939181,
148239287,
142868966,
142522785,
145631250,
145247330,
145611985,
145612000,
145615404,
146545527,
142325842,
145507437,
145612096,
145612097,
145612102,
144117053,
142346242,
141369001,
139281465,
141125253,
144260297,
147269052,
140155192,
145863913,
143863788,
141198824,
147494774,
146150650,
142645991,
142159339,
141671356,
142275159,
148057703,
145503415,
145641021,
145641037,
145644440,
145631472,
145631485,
147061651,
139400199,
146033508,
145612507,
145612515,
145612517,
139326637,
144137849,
138976643,
147469630,
145641052,
146723951,
145631498,
145612534,
140524345,
138743796,
145641069,
145644483,
145524242,
145612555,
146610263,
145430442,
147774486,
145644490,
145644505,
140013657,
146313348,
142419758,
141633553,
139057590,
145612578,
145612584,
145465980,
142685480,
142761661,
145644515,
142419790,
141841268,
139853894,
140498376,
145612588,
144439295,
144443292,
145644549,
138636710,
138636712,
144950796,
144950798,
144292045,
142653871,
143659647,
139230971,
138678440,
144387801,
144292102,
138788582,
144515342,
143213525,
144957235,
140066332,
142125429,
138806344,
139929990,
148038931,
145643755,
145643756,
145643773,
145615274,
146822377,
145643829,
144983102,
145294411,
140111435,
147791156,
143218843,
142377139,
144907295,
146383141,
141156078,
147857365,
139475208,
139499282,
145637272,
145640614,
144884861,
147244093,
142110799,
141084770,
145529129,
147126101,
141700276,
144876944,
147175770,
147279809,
146083845,
142392584,
141534846,
142395815,
147622838,
141349663,
146162911,
140715538,
145631308,
145631313,
147218876,
147218881,
145640906,
142962865,
139177925,
144893867,
145631413,
139059583,
139793750,
143358273,
142451694,
145640986,
145640993,
144461810,
145619002,
145619005,
145641010,
145641016,
148198777,
144364678,
145353157,
143257626,
139635087,
143957978,
146210085,
145968678,
146873074,
145451570,
140264224,
143327424,
138882317,
141428756,
143969934,
144599594,
147093793,
145176992,
141471414,
141471415,
142785204,
139880110,
147090717,
146197281,
139255795,
145620670,
145620677,
138925072,
145635381,
145635387,
142652196,
144100681,
142545746,
145528467,
141533155,
144509866,
145609579,
145609586,
144021772,
140626590,
145609606,
147938852,
138485060,
147341432,
139846602,
139101702,
142853415,
145609625,
145609631,
139512513,
145052848,
146160475,
144536799,
145609648,
145609654,
140070450,
147468432,
139897252,
146300922,
146783462,
145643855,
145643860,
145754101,
140486748,
145666568,
138569592,
146626773,
145518584,
147059269,
145164687,
138858464,
144571936,
146642573,
146642575,
145632547,
145632553,
141011991,
142487127,
145092507,
145141326,
145141328,
146217650,
145705306,
143701326,
147046285,
141902038,
145637366,
144205757,
147889130,
145615739,
145615745,
142147588,
146251602,
146773808,
146462717,
143378643,
142293326,
146251620,
145252223,
144302722,
143833924,
140884699,
147084432,
143782532,
144151107,
147540770,
145561945,
144380892,
146557076,
143122770,
144653320,
147084437,
147745187,
147540776,
144194390,
146812664,
146157529,
139140478,
147024004,
138493699,
145667569,
145667573,
146161658,
147783049,
145609670,
148080028,
143647532,
144949592,
142865552,
143142476,
145609702,
141569347,
146160538,
145609725,
147363166,
140555385,
145609743,
140573482,
144396290,
140109124,
139717666,
145879834,
139976734,
139646084,
143416897,
148251414,
142811334,
145643725,
145643732,
143132090,
145193512,
138777549,
142124750,
145039676,
144481949,
142931134,
145643939,
145643946,
143927631,
140710170,
145771849,
147287575,
143667159,
145640644,
145640651,
145632642,
145632648,
145339453,
145612262,
145615668,
146546133,
145245331,
141935261,
141185234,
139084946,
145640812,
141557220,
141907867,
141868133,
148270103,
140371110,
139649196,
145631305,
144857031,
142388533,
146231850,
145638984,
142230003,
147359049,
147359056,
147359062,
144687058,
138654740,
145638994,
143812711,
141217291,
144262898,
141433001,
147656454,
138763607,
145639027,
145639033,
148124136,
145190864,
144168053,
146762986,
145639044,
145639055,
145644975,
147839845,
140939653,
147449575,
143977507,
146256007,
140522703,
140621743,
147382531,
145639069,
144719533,
143751307,
140955840,
144957280,
147925853,
139811088,
147255101,
142279003,
144337649,
144591352,
145645137,
143093163,
148186864,
146836038,
148037003,
148037009,
145611166,
142461538,
139606389,
141210347,
143776199,
145611184,
145611193,
145611203,
147110368,
145645195,
143451971,
145611204,
145611206,
145611213,
145611215,
144220550,
145645216,
145645218,
145366284,
148180715,
138732197,
138919499,
145631259,
145009604,
146713462,
144890509,
145611987,
145611996,
145615401,
145615408,
147180249,
145507436,
145612117,
139372958,
140190243,
147235988,
144240293,
147100897,
141550014,
140354954,
147772068,
139349260,
146493101,
147046301,
140780143,
143438125,
147200088,
140101875,
145641033,
139121852,
141789455,
145631468,
142911354,
148234902,
147061653,
145612502,
145612511,
143795189,
141618591,
145644457,
145631502,
145612541,
140145744,
140526103,
140088598,
145641065,
145644487,
143664091,
146691587,
145631513,
146843960,
145612550,
145612559,
145615955,
140946920,
141296874,
138743801,
141558517,
145644489,
145644492,
145644494,
140013656,
140013659,
141195737,
145631547,
145631554,
141633549,
143808005,
146283040,
146089221,
145631571,
145612594,
145254711,
143493869,
138636714,
144950800,
138491834,
148178347,
146063063,
144611406,
147600335,
144387791,
138802242,
138710669,
140049160,
147792151,
146221714,
145683852,
141091704,
145797757,
145576821,
145188108,
144233111,
146287729,
145643758,
145615270,
145615279,
145617920,
145617926,
139455237,
145643825,
142897769,
147588036,
141627576,
143790267,
145131849,
145615421,
144868618,
142599730,
145631321,
147218882,
146769960,
145640967,
145631416,
139970699,
146666008,
145631425,
147157005,
145619004,
145641008,
138859010,
144152080,
145631445,
145631460,
147155240,
145353162,
145243537,
145619023,
143088228,
144526254,
142919833,
140264227,
138628642,
141491690,
145506289,
139627879,
145049155,
139106650,
146973883,
145322336,
138882326,
144431847,
145620662,
145620666,
145620676,
141064042,
144871276,
142717566,
145635376,
145635377,
145635395,
145547398,
141439982,
138731660,
142261290,
141471436,
146768971,
147200779,
141123338,
145609594,
145609597,
146152640,
146152645,
146160434,
143563026,
145609617,
146971706,
144603735,
141142351,
145609639,
145323597,
141149253,
139157801,
145609655,
145609660,
140224958,
145456479,
139881817,
146160497,
146204936,
142089192,
140940445,
140940452,
145686342,
142497508,
139959672,
139305280,
148007895,
143366029,
146262167,
146262174,
142487119,
145640763,
142368361,
145694132,
138817123,
148258835,
142696315,
141902041,
141000177,
146650389,
147934741,
146773789,
146069119,
147005561,
138931342,
147201035,
144263886,
146172353,
144302707,
142490333,
142176069,
145975183,
143205480,
139100889,
143689486,
140981388,
147084433,
144424163,
138918456,
145180552,
141670085,
140561191,
146577711,
144644730,
144424164,
145667568,
146157539,
142719011,
144278046,
148270409,
145849037,
142639122,
147660232,
144352878,
142521879,
147456402,
139214326,
145564976,
146870952,
147136889,
145609710,
145609719,
144899114,
144296305,
140174857,
145609734,
145609741,
145609744,
147250092,
145136316,
146090038,
145361521,
146585446,
144200225,
142629989,
143221784,
139159691,
143255495,
142619285,
142077866,
138816453,
145500916,
145643714,
145643726,
143665610,
141217887,
143022992,
142931124,
143946634,
145643947,
143141005,
147521085,
144596180,
146081403,
141378153,
143828161,
145637302,
145637317,
145640654,
145876328,
143405637,
145632656,
145339445,
145612266,
145615673,
145615678,
145615710,
145615716,
138566839,
138566842,
147569012,
144412828,
142280203,
138719692,
142875152,
148211120,
145631288,
145631297,
138530602,
146231849,
145638976,
140398855,
146629226,
145857277,
146054363,
144262885,
146502891,
145638993,
145639002,
143812712,
139460552,
144262900,
139168346,
139403133,
139207374,
145639025,
145639032,
147499040,
139493481,
138471819,
145639061,
145644967,
141668001,
146877859,
147449576,
139171423,
142111740,
145639063,
145639081,
145644980,
138586585,
141711025,
142329994,
141621192,
144186635,
145660216,
142975008,
141114400,
144654970,
144287846,
140466731,
145645134,
145611172,
142314265,
139424718,
146766377,
145645153,
145645170,
140486238,
141220385,
145611183,
145611185,
145611202,
142081606,
145266672,
148215332,
146472426,
147150833,
147150840,
138576296,
139050154,
142132797,
143597707,
145611218,
144697630,
139885693,
145645217,
140538413,
142107638,
144668737,
145631262,
146823570,
138644573,
138767227,
145611986,
145612004,
145612005,
145615411,
145612106,
145612113,
143320944,
146815909,
143658243,
146493093,
146493100,
139412127,
141322538,
144996655,
143438128,
139692832,
145641023,
145644423,
145644436,
142990868,
145631474,
145631481,
147061661,
146761227,
140076612,
141618599,
145641042,
145641056,
145644456,
145631501,
144409100,
140232518,
145612523,
145612528,
138630785,
145641066,
142827108,
145631532,
145612542,
145612551,
144954075,
143656641,
138743812,
147207045,
145644493,
145644507,
145691040,
144793497,
145465977,
146283039,
145631555,
145631563,
145612598,
140092188,
142816389,
145644544,
145644553,
145254701,
146872631,
146674385,
147083293,
142167211,
139561275,
138741708,
145764226,
148243372,
145506206,
146230746,
145643768,
145643775,
145615264,
145615280,
145617929,
145617936,
142712252,
145643833,
139466298,
145504811,
141831752,
141086914,
145164914,
144907296,
147330514,
142330677,
143072581,
139466317,
142627408,
140464898,
148010973,
145615440,
142794136,
139262532,
143441469,
147716112,
146045682,
145637261,
145637275,
145640610,
146720886,
140150816,
145972603,
144889395,
143881336,
144838704,
138705721,
142122528,
148202668,
147218283,
146738110,
144468903,
143060744,
142024821,
145631358,
145631363,
146938050,
145409252,
146487055,
145305518,
143640053,
145149214,
146477606,
145409263,
141545257,
139501881,
148171994,
147027999,
143497215,
142666318,
142957480,
144181427,
146308399,
148139299,
142932432,
139142085,
144999942,
147120541,
138900169,
142395799,
142395800,
146798130,
143922375,
145631311,
145631326,
145631329,
147218884,
145640920,
145924491,
145163820,
145640950,
145640965,
143247604,
140118585,
145631414,
145631419,
141104313,
139059582,
145374860,
145618975,
143519315,
139685994,
145640989,
142296709,
139961495,
145618997,
143346690,
142674725,
145640998,
145641003,
145203396,
145631450,
145631455,
145619020,
145619031,
140645792,
142103547,
147619468,
143546772,
147485265,
144526269,
140198678,
142758573,
141041383,
147808776,
140264235,
138771740,
141964279,
138544462,
144886037,
141134628,
145620673,
145635393,
140282242,
146149758,
141846452,
148219027,
146599848,
143545871,
145609591,
147067734,
143167745,
140607220,
144250533,
147186252,
145609599,
145609614,
147122727,
142828177,
142698099,
140163271,
143003250,
145609636,
146160480,
147783045,
145609642,
145609653,
145609658,
139897251,
147120104,
143686683,
147217706,
145643846,
142124551,
143052080,
142085199,
145294415,
139744833,
144943634,
144991157,
141502184,
144488358,
141626754,
141333803,
144507870,
145632544,
145632565,
146048682,
142487126,
147424264,
145640765,
146217655,
142680849,
147950236,
143701327,
141225458,
142775165,
142360054,
145637356,
142988708,
145615740,
140377084,
140194323,
146069121,
148097017,
141964290,
142804761,
144886048,
138979533,
146170269,
143677815,
144380887,
139720924,
138436724,
144472832,
141381164,
142552343,
144922030,
147690037,
141537571,
144086388,
146360021,
143195395,
147777061,
138782248,
145222391,
146244190,
139394736,
139600474,
143318832,
142541190,
145625942,
146300938,
147633500,
145609701,
138901295,
144675130,
142822132,
147122824,
145181767,
145609713,
145609728,
147528328,
147274825,
146136862,
145031568,
145609742,
138982310,
146987561,
145399694,
143185978,
142701301,
145336378,
140926009,
139672922,
145450522,
148183864,
145643716,
145643731,
144687900,
146143699,
141775677,
143665604,
144853359,
142854059,
148022825,
147020034,
145167754,
147340126,
145643949,
147879874,
140710169,
147287572,
140254496,
144373751,
145061837,
145637307,
145637312,
145640647,
141035876,
145876320,
145632639,
145632643,
145632654,
140425030,
145612257,
145615676,
139530954,
145615714,
143268535,
145822761,
143227781,
141467283,
145640802,
139595913,
142917498,
145021140,
143412898,
142124182,
142519258,
145631291,
144741312,
142388534,
145638972,
145638991,
147359044,
147359061,
138441181,
146537845,
141758901,
145639008,
143270105,
145029389,
144026780,
145639023,
145639030,
147449562,
145639043,
145639056,
145644957,
145644964,
139736154,
141505116,
148248926,
147449574,
145639065,
145644976,
142329987,
142330000,
144587720,
143183825,
139803631,
146073895,
143804141,
145645136,
145212936,
145611161,
145611178,
148229373,
145645157,
147323806,
142064011,
145611187,
145611200,
142081604,
145873527,
145645185,
147150830,
145611207,
145611212,
142084470,
146317792,
145645215,
145191287,
142941810,
145366283,
142939182,
145313406,
143104835,
141575289,
143368030,
143297795,
142407955,
145631249,
143735511,
145611999,
145615409,
147180248,
145612111,
140081745,
145925879,
140471213,
146815907,
145826913,
142645990,
143658249,
146376133,
146493091,
147205912,
143459710,
145200403,
146856622,
138990907,
145476332,
145641018,
145641034,
145644443,
142990865,
145631471,
145631484,
145612506,
145612518,
139204269,
139559447,
146337744,
147523014,
141618594,
145641040,
145641051,
145644458,
145644461,
143894328,
148127733,
145631503,
144879886,
145612533,
145612540,
147555735,
146135853,
145641064,
145644467,
142827102,
146691588,
145631510,
145631512,
145631529,
145612552,
147181505,
140664721,
141493715,
145644491,
145644502,
140013660,
145631541,
141633552,
145249715,
145612585,
142437745,
145644514,
145644531,
146283037,
146644955,
145631569,
141841269,
145141627,
145612600,
140054717,
142434186,
147762407,
145644547,
144950795,
144626700,
147157815,
142653870,
142892674,
146418675,
141957331,
138710654,
138622637,
147962183,
142947633,
146322760,
139230974,
143191389,
144626708,
147725498,
145369511,
140303573,
142919365,
139674580,
143555419,
143043149,
144594719,
146377715,
138445808,
140193549,
146230744,
145643770,
145615275,
145617927,
145617942,
142365715,
145643830,
138662201,
139071845,
144412071,
144949665,
146315476,
139200785,
140133940,
146164657,
141597102,
139121538,
140395614,
146611459,
147627105,
143231753,
144993425,
146475016,
145845222,
140625979,
142192235,
140058020,
144412834,
142878192,
144189613,
144758610,
145631322,
145640924,
146769958,
138967016,
145640954,
139474071,
142901041,
145631402,
140385240,
139059586,
145618987,
145618990,
145966264,
145640974,
145640979,
142862367,
145840696,
142952835,
143900827,
145631446,
145631459,
143664777,
145619028,
145619035,
143490762,
143094595,
140920164,
141126926,
145577939,
147649120,
148015294,
147257768,
145296814,
145388292,
143969937,
147340719,
146312428,
141538288,
145635378,
145547391,
141846449,
146484858,
145609595,
140626583,
146455695,
146160440,
145609618,
140307839,
144692019,
147108582,
142513928,
145609640,
140224951,
138487200,
147122762,
140224973,
142777016,
144154850,
142089191,
148267636,
140486747,
145686292,
141144834,
145348684,
143022933,
143052076,
144535072,
138589804,
145709541,
141730919,
140200194,
141461159,
143869690,
144391563,
147586612,
145640761,
144569328,
147206677,
145637352,
147104377,
145345535,
142456529,
145615731,
145615736,
145072421,
141083987,
144815066,
142822773,
142000956,
147005572,
144572290,
143782539,
144804786,
141381163,
142552347,
147084436,
140169413,
142079189,
141024994,
140671183,
148264171,
144821477,
145644415,
145644420,
146987917,
145609681,
145609684,
144803861,
139473014,
142521892,
147186357,
145609686,
145609688,
145609697,
143993396,
145316757,
146417338,
142924603,
145609709,
145609716,
140391001,
145190304,
144724595,
145609731,
144988108,
147250096,
148000993,
143293944,
145336374,
140926001,
147971972,
142629995,
142294971,
143416892,
139054538,
141972787,
141377664,
145643720,
144052269,
147171166,
138696614,
138810281,
145279683,
141314112,
146192731,
145643945,
143390901,
145311688,
148063116,
142764273,
145637303,
145637316,
145876324,
146753882,
145245284,
145612269,
145615672,
145615679,
147173721,
145615711,
145615718,
144853589,
145640798,
139696395,
143258820,
146318965,
146318969,
139417238,
140650450,
145631287,
145631298,
143411014,
143199412,
146231859,
138870443,
143484336,
143766892,
141470323,
139403120,
145639012,
146964104,
143892661,
144555249,
141126166,
141368011,
146064961,
147566382,
144555262,
140975180,
146372661,
145639060,
145644968,
147449570,
145639079,
145639080,
145644986,
145644997,
141574395,
145554429,
142596333,
142329999,
145002136,
143183823,
143914896,
145660222,
147229887,
145669675,
139803627,
144474696,
146457639,
145645140,
141570806,
144614750,
148186855,
148132350,
147623618,
145611173,
146544443,
140119379,
147882960,
144523486,
140516458,
142551195,
141840142,
145611182,
145611191,
144316402,
145164105,
148215331,
147110363,
145645175,
145645181,
147460430,
138574677,
142551208,
142132796,
144794210,
145611224,
142081609,
139196752,
145645200,
145645211,
146749812,
144444308,
144272623,
138470607,
143104831,
146184783,
138498817,
145631245,
145631252,
145615405,
139404137,
141151562,
145612101,
140987338,
139809818,
145370313,
146967774,
144948536,
143805163,
145404850,
142434923,
142439071,
140452621,
145641022,
145641038,
143308078,
146313287,
146091294,
145631475,
145631480,
139296829,
147061662,
145612514,
144137845,
140076609,
145641055,
145644446,
146664493,
147719758,
145631488,
145631499,
140503993,
145087192,
143155677,
145612522,
145612529,
148113840,
141753454,
147950419,
145641068,
145641081,
145644486,
142573720,
145612564,
142685470,
145644506,
144602856,
145631545,
138620886,
140610823,
145612565,
145612566,
145612581,
139758951,
142348761,
142761662,
145644518,
145644527,
145185272,
145631557,
145644543,
145644550,
145644554,
145077317,
145025703,
145837418,
138993631,
143882118,
148218022,
144489230,
144600350,
148259798,
146221704,
146221707,
146403702,
139161581,
139963451,
146377728,
148257689,
148083296,
141414024,
145643774,
145615265,
145617937,
145617941,
145643834,
145643841,
140269561,
146366123,
145890381,
139567018,
144907292,
144907297,
141604049,
143372789,
142752557,
144792909,
145612010,
145612021,
142640855,
142640857,
145637256,
145637267,
145637274,
145640600,
145065093,
145185547,
139497475,
143103049,
138800435,
140984047,
145092503,
141606510,
141136843,
147218282,
144468897,
141958581,
146125794,
142471077,
145631357,
145631364,
138798879,
142608907,
145615344,
145617995,
145618086,
145636944,
146301024,
145565267,
146315474,
147559506,
144798057,
140329765,
139072939,
143097800,
142466680,
145497947,
144181424,
146308385,
138942351,
142096977,
147350791,
146475019,
147557254,
142395816,
146552673,
142872848,
145631310,
145631327,
146083960,
147469489,
145640917,
141977422,
138967013,
145640953,
145640964,
142207037,
147215921,
140643600,
145631403,
145631418,
139286111,
145546646,
145618988,
142348623,
145989264,
139685995,
144635045,
145640971,
145640980,
145640992,
145631436,
145631438,
147917103,
147162136,
145640997,
145819898,
145631456,
142063236,
145619027,
145619034,
142075005,
145968680,
143145736,
144372250,
144526268,
147340722,
145012100,
139106666,
140109117,
145620672,
145547388,
145547403,
147006374,
142261295,
144138693,
141846453,
145675028,
142605309,
145609588,
143601439,
142261307,
146152637,
146152643,
144250534,
146315810,
146212184,
139445009,
145609600,
145609611,
141373191,
141142349,
147858509,
145609633,
147722134,
143779287,
138788729,
145609659,
142767104,
138483139,
142129805,
138524321,
141722325,
140940458,
144496673,
146119268,
143093830,
143556106,
139959669,
138589809,
145632560,
143650885,
145640758,
139099629,
145694133,
145694146,
146217656,
143184946,
147922442,
141588481,
142360053,
144714248,
145637355,
142988707,
147241650,
145345525,
145345540,
145213958,
145857118,
147934744,
143277092,
141907098,
147005565,
139328497,
144302712,
144155793,
141480212,
145975176,
142441252,
147152875,
140737958,
138489230,
144046444,
139106714,
140796623,
141646213,
138771828,
143282921,
147690027,
147690038,
138782242,
140659111,
145644419,
146244185,
139394735,
143037814,
140613540,
146970766,
145609685,
144433621,
142353899,
142405115,
142521887,
144920370,
145549124,
146859991,
145609687,
145609700,
147189534,
142865560,
144980115,
138599804,
145609714,
145609727,
143359013,
140950690,
147136894,
140757811,
141607542,
145399693,
143293939,
147321328,
146949082,
141293104,
145501973,
145917303,
143221781,
139442534,
139371020,
144483793,
147516286,
143166008,
148195070,
145643715,
141767626,
141173024,
141802052,
147328420,
148258349,
143466076,
142114326,
142573212,
143168578,
146093887,
142764282,
146106261,
147502180,
145637313,
145640650,
145612270,
145615677,
145615708,
145615715,
145615721,
145640803,
144604550,
144351530,
147190646,
144576521,
141019609,
139626483,
141603462,
142784347,
139417242,
138719689,
145631294,
144741311,
143961283,
139919822,
142995300,
148009814,
145638973,
145638990,
148190713,
147359043,
146533032,
138441182,
147656448,
145639009,
145639011,
143812717,
147893025,
139713158,
145029388,
145639024,
147152032,
146372660,
145639042,
145639057,
145644958,
145644961,
147449573,
140635866,
145500545,
145639066,
145644987,
140609204,
142329998,
141127784,
143787076,
145702298,
147012108,
145645152,
141904825,
145611160,
145611179,
147193874,
145645154,
145645156,
148121692,
145611190,
138823112,
145645184,
145741947,
142132799,
145611208,
147137329,
147833931,
145166810,
141678098,
145645199,
145790848,
142895322,
141900212,
146396934,
145631241,
145631248,
145009602,
144890518,
145611998,
145615397,
145615406,
146545525,
142464901,
147126822,
145612112,
138721425,
141231350,
146967773,
142886653,
146329555,
146500457,
145826914,
145404855,
146150648,
143658246,
146376124,
142572881,
144625849,
142159337,
141322542,
138659375,
148087541,
145641019,
145641035,
145644442,
144391057,
145631470,
142937623,
145612497,
145612505,
144137851,
144696847,
145641054,
145644460,
142568249,
145631493,
145631500,
147782085,
145524235,
139791676,
145612519,
145612532,
144219980,
141761099,
145641067,
145644472,
143675738,
145631522,
145631528,
144503426,
145612553,
143656642,
143643646,
147141761,
142685465,
145644503,
145631542,
145631544,
144565094,
141584817,
145249720,
145612569,
143073253,
145644513,
145644526,
146644954,
141098005,
140272023,
145631568,
138573831,
146414486,
145612599,
145612609,
147124581,
139438002,
145644548,
139715392,
142653869,
145526397,
146589586,
142947619,
142947628,
142403829,
147600332,
147304928,
139561282,
146221705,
146221708,
138788571,
141449781,
144957237,
145367426,
141663525,
142819234,
145191710,
141414021,
147217616,
140864419,
145643769,
145643771,
145615276,
145617925,
142712256,
142365718,
145643831,
142024395,
145913350,
147163447,
145644453,
139924933,
145631492,
145631506,
145631507,
145612537,
142960110,
140088599,
145641072,
145641077,
145644475,
145644482,
144624902,
140508641,
145631517,
145612544,
144280855,
144027740,
142827121,
145631536,
145631551,
144565092,
145249711,
145249714,
145612570,
145612577,
145644521,
145644522,
146283033,
145631561,
145631576,
142419782,
139521292,
145612591,
145612608,
138471251,
142816391,
145644539,
144952817,
143013460,
138491839,
145100194,
147129071,
146063060,
146254460,
142812988,
142222701,
144957233,
139495349,
145797760,
148008018,
145885285,
143191437,
142985459,
140975305,
140975308,
145576816,
145576820,
141515957,
141414027,
145643761,
145615269,
145615283,
145643823,
145581189,
146424876,
142330672,
142238612,
145944156,
145096978,
143372793,
143032314,
145612014,
145612015,
145615425,
141635872,
145637255,
145637262,
145640603,
146193083,
141670725,
142824164,
145905206,
139859118,
139296642,
141675105,
147218294,
140994113,
145439577,
141697634,
143997351,
145631331,
145631345,
139580793,
138531481,
146279815,
142192482,
139070646,
144411362,
144411369,
147079981,
139395519,
139771646,
143757535,
144621331,
142441883,
139816566,
147239518,
144669472,
147217205,
139277871,
147786486,
144268617,
143189157,
141386201,
142591067,
141289745,
145611075,
145611080,
146991400,
141764595,
145620454,
144366402,
145543813,
143864548,
140923982,
143454732,
145865299,
145611112,
139406844,
139359977,
145297960,
143245450,
145620465,
143833247,
142910775,
145609549,
145609550,
145611121,
143657765,
139241973,
145620484,
145620487,
145620498,
145204103,
143834545,
145611148,
142326817,
145639224,
145639231,
141397481,
140658262,
141482442,
145381666,
145364091,
144898100,
147215273,
145618131,
145618132,
143895934,
145637017,
145637018,
146783805,
145631175,
145631187,
142580167,
147151401,
139291205,
146845082,
146540398,
140840278,
142879700,
139682111,
145018364,
146309630,
146534235,
145326233,
139124663,
139666849,
146483689,
145637223,
145640568,
140123398,
140013171,
145610120,
145979148,
141169610,
142597180,
142597181,
143662895,
142553510,
146241235,
145640865,
138525219,
145631378,
145631391,
145631392,
143911793,
144396723,
142733201,
138505337,
140905801,
145639093,
145639107,
140386069,
144487424,
142051079,
145957484,
143802070,
145639117,
145645037,
145792598,
139769993,
148225671,
141828563,
139819038,
140788903,
145639150,
145645049,
145645058,
142009583,
143326249,
145639164,
145639165,
145645066,
145829076,
142442571,
146094922,
147224725,
146202043,
148225710,
147265915,
145479831,
142077426,
140647325,
143804115,
138941650,
145639182,
145455463,
140466723,
145639201,
145639203,
145639216,
145639218,
145645114,
139982428,
141721901,
148090531,
145635243,
145635250,
147383621,
145046622,
147949885,
146787325,
145620553,
145620556,
146470140,
145904308,
145635273,
138603310,
145452531,
143372148,
145620588,
144616442,
145635288,
145635295,
141959473,
141280202,
143071829,
143753524,
142834840,
145620599,
145620600,
145635315,
139755893,
146851451,
142326918,
144357023,
145620620,
139115426,
142023818,
145635331,
146649373,
143968950,
139757898,
145620646,
147322541,
142706425,
147584150,
145635353,
147258663,
145609827,
145609832,
145609835,
145615295,
145617949,
145617963,
145617964,
147227289,
138713543,
146104132,
141884717,
142731299,
140294892,
139432446,
147165716,
145179512,
140508124,
140612627,
140049938,
138660506,
145217338,
145632674,
146358714,
139971659,
142780749,
144171033,
148020706,
146200464,
144394614,
146819051,
145074283,
138911749,
141306630,
148035922,
141054602,
146608062,
146209190,
145882082,
145635200,
146677889,
144143391,
138493888,
145644612,
145644613,
148272587,
146363108,
144376184,
145631664,
145040520,
141224610,
145616085,
145616086,
145616097,
143618965,
140474362,
142086181,
139968491,
145644623,
145646756,
145631670,
143522437,
145612711,
145612714,
145616120,
145616124,
145616127,
144695256,
140085079,
145644650,
141325863,
145665488,
145631688,
145631691,
145631692,
147187540,
145612732,
145612733,
145616135,
145616149,
142434319,
145638748,
145638758,
145638762,
146133008,
142834993,
144075840,
145069513,
141752215,
147042837,
144236534,
145069521,
146829168,
145756188,
146270170,
145258844,
143040487,
146802152,
147840328,
146213496,
146270180,
139996480,
145536821,
147087481,
138545627,
147977639,
145612513,
146593437,
144137848,
144137853,
146337747,
140088589,
147143158,
146723941,
143209792,
145116550,
145087189,
145612521,
145612530,
140145745,
140664712,
145644485,
141021733,
142573717,
143622444,
145612558,
145615954,
144280854,
147774490,
145644495,
145644509,
146791080,
140918627,
145631533,
145631548,
145631553,
145612580,
141461735,
138825303,
145644519,
145631570,
147916006,
142908636,
139066986,
143624479,
145612592,
145612593,
139542280,
147270123,
148179271,
147273140,
140127768,
140663893,
145644551,
147617576,
138933251,
139810973,
138993630,
143075004,
143882115,
139230977,
142997929,
142892687,
146254465,
138678428,
138916126,
147195912,
143882120,
142812973,
141899414,
146221715,
146187331,
141686693,
140617003,
141091703,
146739126,
138650641,
146377718,
144857652,
148160268,
148013594,
142940591,
143882174,
147362810,
141174467,
145434919,
145434926,
138649428,
141524060,
145615278,
145617938,
145643842,
139466300,
141743859,
141713787,
141812765,
145581195,
147588033,
141628479,
141760141,
145615422,
145615427,
145615438,
142250388,
147215551,
139475202,
140304951,
141236405,
146947163,
145637277,
143396719,
147459286,
148089956,
145972619,
138493259,
144544986,
140890909,
145030606,
147350052,
147218285,
147218292,
146305989,
145094563,
140994115,
144883671,
140742166,
148003890,
146278111,
146840444,
145631330,
142990755,
141896730,
142864785,
140584348,
141357915,
143983737,
147117299,
140654647,
139213618,
145916142,
146393667,
141944119,
144341602,
141386199,
139474301,
141441821,
142040877,
138443007,
145142166,
145611085,
138750957,
145620445,
147497930,
147630627,
146855565,
146855574,
147184213,
144108413,
145620460,
145620467,
145936239,
145609547,
145609552,
145611125,
140364287,
147611045,
147571697,
138945481,
145609574,
141473581,
145639225,
144148262,
144148265,
139132146,
139948751,
142073409,
138827959,
143821801,
145639244,
143577625,
145441025,
140124454,
146922276,
147904196,
145618123,
145618130,
145618137,
147093088,
145637012,
145637021,
143170478,
138798000,
146783803,
145631189,
143582968,
144776682,
146551350,
145991707,
142764263,
139408680,
145418428,
145637218,
145637225,
145637228,
145640566,
143218255,
145679096,
142152031,
140354946,
145610117,
145610126,
142391556,
146778037,
146039526,
145170221,
144319517,
145640878,
138523395,
143911789,
145639094,
148150977,
147534987,
145074593,
145639112,
145639119,
145645035,
146753012,
141598215,
139819033,
146765546,
145639134,
145639137,
145639152,
143543647,
146005411,
143279492,
145639159,
145645078,
140697503,
144070667,
142919050,
140055107,
140839437,
145639176,
145639179,
145639180,
145645108,
147518529,
138667791,
148197157,
145639206,
145645112,
145645121,
145645130,
146250133,
141715702,
143726303,
143655335,
144394840,
145620525,
146388218,
143942828,
147645013,
145901983,
147383609,
145620550,
145620566,
147136067,
146388238,
145768627,
140497629,
139977127,
145635277,
145452532,
144039937,
144039942,
145010873,
143138300,
145761196,
145635294,
145635301,
144653983,
144551561,
145128501,
145620592,
143919161,
145635311,
145635320,
139224222,
144342261,
145620623,
145620632,
145620633,
145635332,
145635341,
142122771,
145925397,
145152106,
145620636,
145620643,
145620650,
147172295,
145635357,
141644792,
145615291,
145615298,
145617952,
141650498,
146260756,
140639997,
139639127,
143582919,
148162721,
139012962,
146887326,
139961006,
143230975,
147086414,
145610023,
147077610,
145632679,
142143425,
146597172,
142692723,
140471373,
146358709,
147695869,
144534499,
143900836,
139392641,
140778378,
140778388,
141539192,
138670038,
141372637,
142474650,
142474659,
147917041,
142301489,
140900210,
142878673,
145635185,
139670195,
147713565,
142921216,
140543670,
138643263,
145644600,
145644608,
145644615,
143836032,
140708802,
145040525,
145612698,
145616088,
140256003,
145646760,
147863469,
145631667,
145631668,
145631686,
141268810,
145612708,
145638743,
148192269,
147155311,
145616147,
146788070,
145638749,
145638753,
145638760,
145638763,
146832690,
146100874,
147132691,
144034365,
148262338,
147151038,
144096785,
146829169,
138850254,
144759562,
138808920,
144548677,
145843998,
140083911,
141676875,
145073399,
140732089,
142482224,
148185914,
147509711,
147785075,
147785076,
146052935,
138477849,
142112232,
139664644,
145412356,
142877465,
139287043,
147947152,
145631505,
145631508,
145026946,
145087193,
145612539,
145641075,
145641078,
145644470,
145644476,
140762715,
140762716,
140257101,
145631515,
145631520,
145631530,
145612545,
139318582,
145631534,
145612571,
139758940,
143656645,
141133859,
143824045,
145631559,
145631562,
139379670,
145612601,
145612607,
140092190,
140247280,
147141826,
145644542,
143397910,
143013459,
144937336,
142121467,
140438459,
138993633,
142167203,
140438468,
145001005,
141961814,
140114685,
146916857,
143698784,
140564841,
138737794,
141449788,
144515335,
140066340,
147256822,
140184751,
141414028,
141414029,
147159924,
148013087,
147677241,
145643762,
145643763,
145615285,
145617932,
138839412,
145643839,
142897768,
142377146,
147167736,
147330511,
139012953,
139837634,
142627411,
145612012,
145612013,
145615430,
138863104,
146045677,
142967276,
145637263,
145640609,
139264546,
144884868,
146720873,
145319746,
139989143,
145627353,
144811307,
145905209,
139312367,
144248450,
144321098,
138705734,
141922596,
142382239,
148202664,
146125793,
141252282,
145631344,
145631347,
142024829,
145631360,
145631374,
147885655,
142121128,
143812272,
146057546,
139756952,
139552555,
143640054,
145149212,
139340254,
147625645,
144432921,
146694349,
147217206,
141718512,
140182820,
146393692,
141235430,
144552915,
142086145,
145142168,
145611074,
144932701,
144223697,
143812866,
144296998,
145543811,
140923985,
147008304,
145611096,
145611097,
145611102,
145611111,
144570194,
145620455,
144937075,
147820475,
145611119,
145611122,
143657774,
145201221,
139879097,
141568492,
147777781,
147777791,
145620485,
145620486,
145620496,
145204102,
145609562,
145611146,
147239926,
142565029,
148031644,
148031645,
141660576,
145639248,
145639249,
141285565,
141707458,
147215271,
141262807,
145379874,
145631176,
145631181,
146406906,
138589908,
140964320,
148264369,
145972589,
143575128,
145354658,
145688777,
145640551,
145640552,
145610016,
146828013,
146828016,
144725702,
147407243,
139308724,
145610119,
148080685,
140479568,
138812923,
144929401,
144289511,
145640864,
145631379,
145631380,
145631393,
145631394,
145645005,
145645008,
139336292,
141748437,
138586594,
147699744,
138841449,
141488678,
144704714,
145514170,
145639130,
145645021,
148225670,
141107503,
147553593,
145645046,
145645048,
145645059,
145645060,
142135687,
146364604,
147174764,
145882416,
148197122,
144227851,
145639166,
145645067,
145645072,
146670007,
142077425,
145639197,
145639198,
145645094,
145645095,
140169986,
143333780,
145639200,
145639217,
145620528,
145620529,
145635248,
145635249,
147253375,
145620555,
145620558,
142210003,
145635260,
145635271,
145635274,
139537398,
142324941,
145620571,
145620585,
145620586,
145579072,
141430953,
141959485,
143653794,
141138133,
145154241,
141364252,
144389620,
145620597,
145620598,
143926572,
141409342,
143076625,
139755895,
142199181,
145831003,
138727923,
147276537,
145620618,
140919201,
147203179,
142023820,
146959327,
144805710,
147870483,
139667820,
145635369,
142545725,
142545726,
146068136,
145098475,
141821316,
146955528,
143260235,
145609825,
145609826,
145609833,
145609834,
145615297,
145617947,
145617960,
145779616,
142948252,
145127003,
141614738,
140812895,
146594817,
139720314,
142543697,
142543707,
143221070,
138437788,
140004239,
140612626,
145610029,
145610040,
143318285,
143318288,
145632658,
145632661,
145632676,
146067079,
142812108,
146392030,
142701962,
142701965,
143440754,
145954196,
139492803,
144571080,
147950344,
147950347,
140862763,
143417778,
141227337,
141029632,
145195961,
144818843,
143383863,
144933550,
142950776,
145276638,
139215822,
141967930,
146819049,
140196487,
144985018,
141137271,
144587139,
145214322,
145994590,
142661207,
145635202,
143076874,
143446776,
144679147,
144376186,
145631658,
145631663,
138436812,
146244202,
145612678,
145612692,
145616099,
143874362,
140374238,
139968492,
145644633,
145644634,
143522435,
145612713,
145616111,
145616125,
145616126,
144695241,
143829487,
145644644,
145631693,
145631694,
145631703,
146238355,
145612731,
145616132,
145616133,
143965088,
146155512,
144075839,
146090063,
140564977,
146985468,
146370944,
143166019,
139678160,
141752213,
147042839,
146751973,
146687015,
145059049,
139752859,
142018859,
141361154,
146294001,
147509694,
147781102,
145344608,
143284931,
143965890,
138545623,
146811956,
147648378,
145356151,
145612546,
145612560,
145612563,
143824037,
145644496,
145644510,
145631552,
141633559,
144661956,
145087242,
145612576,
145612586,
148179263,
141953635,
147959042,
141165358,
140098381,
145644520,
145644523,
145193254,
145879204,
145631574,
145612589,
145612596,
141592012,
144439287,
145644555,
142464020,
138933248,
138933255,
141150612,
145100192,
143659649,
143659650,
143365255,
142812968,
146254461,
140438464,
138754839,
147792149,
144882478,
140322353,
144017839,
146193933,
141414025,
139518137,
143550740,
145643776,
145615268,
145615282,
145617934,
145643824,
142897765,
145581191,
140111427,
146909767,
142433518,
145615423,
145615426,
139476179,
141510229,
142640858,
145637264,
145640594,
147138140,
142217255,
145326302,
144855814,
148248054,
142020857,
143554825,
145905205,
148214676,
142028762,
144248451,
147218281,
147218295,
147218296,
145220236,
140424236,
146278112,
145631333,
145631375,
142344843,
138863710,
142013998,
141386980,
142861755,
142485553,
142117916,
139501883,
147823997,
146181649,
142968372,
140061134,
145883994,
145271966,
139729847,
146207034,
146393656,
145085112,
147824013,
147177988,
144437454,
140363920,
147122477,
143100410,
147217207,
145912768,
145047785,
141944116,
142615165,
143773458,
142086152,
139335369,
145611081,
145611091,
145620438,
145542032,
140418451,
140686234,
139406843,
143245457,
145620463,
145620464,
146186472,
145609548,
145609551,
147983741,
140364286,
147777774,
145204100,
147571702,
140791668,
145611136,
145611147,
145611150,
145932846,
145639229,
145639230,
139132150,
141055544,
142938328,
139327165,
144435884,
145364092,
141186301,
140841662,
139298670,
140425819,
145618133,
145618134,
141691263,
143110284,
143851484,
145637016,
145637019,
145631177,
145631188,
139291207,
139797707,
146406899,
140976091,
145557062,
142384233,
142848964,
142848965,
145637214,
145637224,
145637229,
145640569,
145640570,
140623177,
145800983,
144014832,
143946739,
140354945,
146439558,
144319520,
147114064,
148119426,
142597182,
142597183,
140489039,
140489042,
142125818,
145319860,
142363117,
145639091,
145645004,
138661425,
145093340,
145265463,
145639115,
145639116,
145645038,
140394701,
142559945,
143888596,
144903031,
140905847,
145639140,
145639149,
146298921,
141735810,
139190649,
145639163,
145645068,
145645082,
145645085,
140880621,
144070666,
144119855,
145639183,
145645105,
143847953,
140719700,
140169982,
141284720,
138480720,
146945313,
145639202,
145639205,
145639219,
145645113,
145645123,
145645126,
145620543,
148090533,
140238728,
145620551,
145620554,
145904306,
146893706,
144653966,
147510686,
144039938,
140541602,
139211757,
143138296,
145635289,
145635290,
144551557,
142459836,
144049104,
148184616,
145620601,
143138306,
143926568,
145635314,
145635316,
140033813,
143525583,
146979585,
145620612,
145620619,
138868995,
145635329,
145635344,
145635346,
145635347,
144405742,
140033822,
140033832,
143968951,
144685413,
143281841,
147107061,
145620635,
145620649,
142023833,
145635352,
145635355,
145098471,
147004582,
144805721,
140662893,
147457257,
145615294,
145617962,
142804122,
147227287,
140352190,
144271343,
146104133,
146406898,
138580690,
140618704,
147170388,
147086418,
145113469,
148004711,
146121713,
145632675,
147859704,
146647141,
142668420,
144392292,
139902467,
141992705,
148020705,
143986926,
140520274,
145132678,
147181761,
144587137,
144785272,
147948195,
146877811,
143566365,
141708402,
144545634,
145635199,
148150041,
143286593,
140141325,
145644611,
145644614,
143080706,
145631644,
147155269,
141783367,
143818285,
143791751,
145631671,
145631681,
140416034,
145612700,
145612712,
148177433,
138931658,
145644646,
147863477,
147734370,
142934422,
145616150,
145616151,
147908424,
145638759,
145638764,
142442863,
146100863,
146100866,
138773039,
145233413,
138453430,
141299040,
143808892,
147123483,
145756190,
144759557,
147781094,
143978305,
144548676,
142018858,
146802142,
142877415,
144548719,
147239168,
142112226,
143965898,
139984358,
144717647,
140442123,
147987264,
147901032,
143680397,
139319402,
143414900,
145521115,
145609843,
145609859,
145810992,
145615311,
145615314,
145615328,
145617980,
142354143,
141382539,
146989130,
142265405,
147590714,
145637246,
145637247,
145640574,
145640589,
146314287,
145610061,
142076568,
138940665,
145632604,
145632609,
145347067,
139484634,
142996934,
145632684,
138801425,
141414022,
145434921,
145576832,
146078158,
147119554,
145615267,
145617939,
144834445,
145643836,
140595780,
139466306,
146366116,
141713795,
143783722,
144412069,
146899978,
141086915,
141343470,
142841875,
139215067,
145131860,
144475546,
144391235,
144792911,
145612008,
145612017,
145612019,
141072585,
142599128,
143331652,
141245973,
142642639,
145637269,
145637276,
145640613,
143396720,
144884862,
143921325,
147160886,
145423625,
141649060,
144756444,
138705722,
147218284,
144519552,
143022729,
139524477,
146045523,
141640331,
145631335,
140389997,
145631355,
145631362,
146120088,
141386985,
141095231,
139340248,
141268186,
147672194,
147202614,
142117926,
140941185,
143003916,
145274828,
140470762,
141145627,
147217203,
147217210,
141944120,
140654654,
144934041,
145611073,
145611077,
142913058,
140669389,
143245448,
145620444,
145620447,
147497931,
146855566,
139489362,
143864546,
145611093,
141540965,
139359984,
142195080,
145620475,
142910777,
145611115,
145611126,
146462435,
148000082,
147983732,
147983733,
141568489,
142180408,
144930222,
139705862,
145620482,
145620492,
142385314,
145609556,
145611157,
147928124,
145639226,
141904625,
145025672,
145083538,
145812656,
140114610,
147159801,
143577619,
146379575,
146379580,
143700165,
148170197,
141285568,
145618129,
145618138,
140237968,
142417394,
147687596,
142115382,
148052381,
140147394,
143851481,
145032770,
146406907,
147143922,
143125841,
144235178,
145972601,
145354670,
142384240,
145637217,
145640558,
145061842,
141153741,
144463290,
147407238,
139742474,
141783354,
141783359,
145610109,
145610118,
142146354,
140632667,
145711839,
144812311,
142959891,
138732497,
142583285,
142712862,
147848207,
145640866,
143413908,
145631389,
143966733,
143966740,
145639088,
145645018,
147136257,
146343500,
144321794,
145639129,
145645020,
145645026,
145645027,
147321233,
147889987,
142745984,
147497006,
147553598,
140055055,
145645043,
145645064,
145829065,
146268742,
139528190,
141828576,
145639158,
145639162,
145639167,
145645079,
146733809,
147527932,
145479828,
145006255,
140647323,
145001929,
145639188,
145645101,
147394949,
147544382,
145639209,
145639214,
145645109,
145645129,
142135763,
146753086,
140100793,
145620535,
144197717,
143972835,
145635245,
145635252,
143910451,
145115125,
143770618,
145620562,
145620567,
144781524,
145635278,
144653970,
138890191,
142097923,
146203746,
145010852,
145635293,
145635302,
143001290,
139947045,
144082898,
141138134,
145620602,
145620609,
140921118,
148163780,
145635326,
145620629,
143140309,
140919207,
146956290,
142023816,
145635349,
144654041,
148160454,
145369718,
143968952,
145925398,
139707459,
145620637,
145620644,
145635351,
145635372,
142445810,
147258660,
143891841,
147209034,
145609829,
145615292,
139092795,
140486750,
140206902,
139187329,
138487825,
140639991,
145334834,
145724130,
146887335,
143565109,
141884721,
143012273,
145610026,
146993685,
141171568,
145632664,
140676316,
138448875,
146099820,
145234823,
142944461,
141335270,
146686418,
141267098,
147528819,
147337879,
142501801,
143986922,
144596548,
139660862,
142216302,
140520270,
140149235,
146737031,
144985020,
144620489,
145635191,
145635206,
146036307,
147129909,
143517204,
145644618,
144376187,
140708801,
138926151,
145631649,
141742783,
141433588,
145612687,
145616096,
145616103,
140374239,
147181816,
146191505,
145644628,
143080713,
144534883,
145631675,
145631687,
141630641,
147187498,
145612709,
145612716,
145616122,
145638744,
146155503,
145644648,
145644657,
147734365,
145631689,
145631698,
145612727,
145612738,
145616129,
145616146,
142161641,
145638746,
145638752,
148265137,
139159726,
148183869,
147644007,
145747657,
138655016,
140600020,
144717590,
144127806,
142616008,
143589953,
139824060,
144568575,
142491257,
144857845,
138907007,
147530286,
142496974,
142496983,
145609754,
145609844,
145615324,
141280614,
142407380,
139135459,
147899985,
141577170,
140475776,
145232546,
145637158,
145637162,
145637240,
145637249,
145640588,
147943420,
144232219,
144718590,
145632590,
143430997,
145632699,
141371370,
142043379,
145610146,
145610151,
148268158,
145640776,
145640785,
143092047,
144407054,
138526154,
143854092,
147645839,
145047286,
147707195,
143587269,
145537231,
138764769,
145640896,
145558017,
144231296,
138550019,
145607289,
147164562,
145889778,
144231304,
142224165,
142110800,
147051385,
139802638,
143881341,
142028769,
145892960,
140766792,
143253878,
144816884,
144816890,
147218289,
147801621,
145994143,
138944310,
141239437,
142636665,
142636671,
144083666,
142905454,
139468540,
145631334,
145631353,
145631367,
138531484,
141167119,
145305517,
138863712,
142864787,
141095230,
141577814,
138841290,
139395520,
147248771,
146477608,
141424931,
139734986,
147672193,
139368914,
143228558,
147823993,
138671727,
147117296,
139693103,
146471249,
143453994,
144802982,
141548450,
141311035,
146652220,
141944123,
146692592,
140843215,
145611083,
145611089,
138969508,
147385835,
141764585,
145620443,
145620446,
148185343,
141798177,
140923979,
145611092,
145297966,
142195083,
143245451,
145620457,
145620472,
146186480,
145611116,
145611129,
140545051,
138631447,
147983736,
144323877,
146449472,
140793640,
139463992,
139994733,
139994739,
147614682,
145609572,
145611139,
145611156,
142921945,
139085759,
143807183,
145639237,
145639242,
141327964,
143664399,
146075156,
142938333,
144950784,
144950791,
145441021,
140706858,
148173897,
147621690,
145618126,
145618141,
142417383,
145637011,
145637024,
143170474,
144260029,
145518573,
145637216,
145637222,
145640549,
145640561,
145372729,
145610019,
143577221,
145610113,
139998368,
147685519,
147425141,
148088371,
139567984,
146772057,
145487703,
144634930,
145640874,
146044677,
145631384,
142363126,
145639102,
142226396,
139913014,
146557713,
139336299,
147166662,
142218797,
145639109,
145645030,
139621675,
146268716,
142963942,
146204853,
145639142,
146811572,
142009577,
143668837,
144792450,
139528187,
145639153,
145639157,
147147336,
147147338,
146158040,
140621865,
145006246,
143317156,
145639185,
145639191,
145645104,
145024175,
141610719,
142393571,
145639208,
145645118,
145460488,
140100787,
145620523,
145620538,
146388214,
145635242,
144938406,
142912643,
147383613,
148032750,
145426603,
142490990,
145010845,
141189346,
145620548,
145620564,
145318617,
145214952,
145635268,
142539197,
138890195,
147425774,
144963638,
145620580,
145761192,
145635282,
145635297,
145635303,
139947048,
144541363,
142126439,
141517709,
146521869,
145128499,
141873266,
145635308,
145635322,
145635323,
146126654,
143287432,
145620628,
144701298,
145635338,
140033830,
145925399,
145152104,
147941264,
142300830,
145620641,
145620655,
141851529,
142023840,
145635360,
145551505,
139137179,
143548292,
144938847,
145609821,
145609840,
145615302,
146743547,
140486751,
144879193,
144215544,
146104125,
139364548,
146406895,
139080711,
143637268,
141833806,
139617227,
141895816,
143306043,
147893914,
142858708,
147717229,
144399523,
142967223,
139387171,
138989102,
145632667,
143710170,
147169216,
139152865,
141599310,
140472969,
141651008,
140838689,
140692482,
141584107,
141267095,
147116992,
146195881,
141135508,
147525488,
147155158,
147917043,
142168393,
147848497,
145882087,
139672357,
139724725,
142260753,
143286595,
145644603,
143836023,
140708800,
145631665,
141201593,
141204093,
145612693,
145616093,
148177430,
146542310,
144046514,
145644622,
145644643,
145646764,
145631674,
145239630,
145612704,
145612706,
145616119,
145616128,
148177435,
144915194,
145638739,
145644651,
142378087,
145612724,
145612741,
145616143,
147908429,
146568414,
145638751,
145638757,
146100878,
148252513,
148028313,
141752223,
146832711,
139960380,
143751719,
142000431,
142877387,
142475601,
146684738,
148127635,
146270187,
147781100,
147151084,
139491122,
147977627,
145471760,
141791943,
140732107,
140222910,
142112234,
145412354,
144717649,
144365570,
140442115,
146090195,
145609755,
145609757,
142571611,
145615325,
145617973,
145617979,
146715746,
140786088,
147795235,
147712283,
146989132,
143532013,
145232549,
145368505,
145640486,
145637239,
145637252,
141666644,
143835227,
143835229,
145610053,
145632595,
145632601,
145632692,
146885438,
145610133,
145610147,
145640788,
141438615,
145274403,
140480260,
139993842,
145209287,
145416422,
142810435,
145640882,
145640892,
145640895,
145640901,
145609304,
138669560,
147884459,
147520405,
143031128,
142814603,
140276644,
140001272,
141742176,
141617641,
145915079,
145607314,
147216301,
143458370,
144946561,
146905744,
145759659,
145464846,
139511006,
139333734,
143705028,
147202710,
143603072,
143603074,
146278129,
140483545,
145632352,
145632363,
145037797,
145797100,
146229617,
144553652,
144330170,
143191443,
143542781,
146377713,
147233773,
144233110,
142819233,
145660213,
145506209,
146287730,
145188147,
147083384,
145643757,
145643772,
145615277,
145617924,
145643821,
145643832,
140949482,
139567021,
145294410,
141559713,
139475037,
139072382,
143072578,
139466321,
147567895,
144475553,
145612023,
145615435,
144552279,
145190646,
139475207,
142990355,
146541481,
145637273,
145640598,
145640602,
142338648,
143103043,
147724377,
148162805,
146597284,
147218288,
139304124,
146275805,
144883684,
144519559,
138888224,
138944309,
141640335,
142905453,
145097414,
143327057,
140724348,
145631339,
145631352,
140389993,
145631366,
146487059,
141329269,
142192488,
139610350,
146057539,
138841291,
145924819,
139438853,
145305522,
144576797,
147142534,
147824008,
139213615,
145428504,
147217199,
142094115,
139816578,
145380742,
139592471,
141944128,
145611082,
146991402,
146047014,
139865975,
147830060,
140669386,
141764584,
145174020,
145611110,
141540954,
143097050,
145297965,
140364257,
138857742,
145620471,
144414519,
143456752,
145611114,
145611130,
147401125,
143657769,
147688806,
146449473,
145620488,
143200043,
146239914,
145609568,
145609571,
145611138,
145611153,
145639238,
145639243,
146187244,
145230171,
144055970,
145932855,
144950792,
145441020,
140706859,
146439944,
146230752,
141247778,
143258230,
145618142,
145637010,
145637027,
143170473,
146783810,
145631185,
148182496,
141814553,
142879703,
138527826,
145760228,
146309629,
147365869,
145637221,
145640562,
145610018,
140623170,
146314289,
138429771,
145610114,
145610129,
144963151,
143480678,
144230795,
142779778,
146678572,
145845273,
147999915,
140467842,
147114070,
148095457,
145495819,
145487704,
142712861,
143819580,
141973969,
145640859,
145640870,
145640877,
138776367,
138525218,
145631385,
145639101,
145645014,
139377502,
143751328,
145639125,
145645039,
146364591,
146268715,
147389734,
144548296,
142940212,
142940226,
146765548,
145639131,
145639143,
145639148,
146992116,
145001910,
144704749,
145639156,
145639171,
145639173,
144178030,
145645077,
143322299,
140187404,
140978357,
143333779,
145639184,
145645088,
139237474,
139530012,
142393570,
144681479,
145639210,
145645117,
147541523,
147376510,
145620522,
145620524,
145620539,
147885311,
145635241,
144579112,
145460495,
145620546,
145620563,
142210016,
146388230,
146553980,
145635263,
138890200,
144049086,
145620579,
143919150,
145635298,
139947041,
141323212,
145620605,
146687750,
147357263,
145635309,
145635321,
142031925,
140858432,
142199185,
145270894,
143183953,
144342265,
145620625,
141024117,
145635337,
143632201,
147085511,
143968947,
139076911,
145620634,
145620640,
145635363,
140395121,
138744815,
143548295,
142561012,
145609841,
145615287,
145615288,
145615305,
145617955,
141365388,
143774418,
141895817,
147717235,
139044333,
140860910,
147558681,
147086426,
147165709,
144514538,
145610022,
145610037,
138951329,
148117489,
145632668,
145339459,
140676320,
143710169,
144708298,
141980399,
139501373,
146647140,
139392635,
145198489,
141161049,
140258880,
139882772,
144219903,
145276643,
142474655,
141977367,
147917042,
141815734,
139313301,
145725939,
147848498,
145635187,
144407751,
145882086,
143071011,
145180169,
139672360,
139694943,
145635210,
147129894,
143517208,
145644606,
145644621,
145631653,
141201592,
145612683,
145612694,
145616092,
146191513,
145644625,
145644640,
145568216,
145631679,
145612705,
145612719,
145616118,
144695247,
147129947,
139852243,
144915195,
145638735,
145638740,
145644652,
147431479,
141723166,
147643289,
145610863,
145612723,
145612742,
145616142,
146990629,
144895970,
144895971,
145638756,
145638767,
139932951,
145747654,
148028312,
146011276,
146751965,
146751974,
146014256,
144179683,
139159774,
143991359,
146684744,
147840332,
144759588,
138434028,
147151085,
147087471,
143558595,
141796960,
147977637,
140699955,
143965903,
141100447,
145609762,
145609845,
145609849,
145615320,
145617978,
138735262,
142354149,
142269686,
143563637,
146886673,
146989131,
143671526,
145368502,
146998794,
143440378,
138869681,
146956413,
145637150,
145640483,
145640485,
145640504,
145640577,
143678034,
145053805,
145610056,
147909574,
145632602,
140518139,
143430993,
145632695,
146235750,
146235754,
145610134,
145640774,
145640789,
142638117,
142105203,
147579888,
145726528,
144246454,
141662749,
144857004,
140303577,
138710668,
139561278,
138933299,
148243514,
146096142,
146405322,
145192356,
138756960,
142329984,
147121052,
145506215,
140184746,
140751523,
145615266,
145615271,
145617922,
145643826,
140111432,
138978870,
143072576,
146386420,
141795100,
142939334,
143494689,
142791208,
145612007,
145612011,
145615429,
148099058,
138633982,
146882575,
143103039,
138476037,
143518260,
141176847,
142856441,
145905203,
145030611,
148113565,
147241276,
147218290,
146275807,
144883682,
139510347,
146278109,
145631332,
145631341,
142024826,
145631372,
140359889,
145461588,
146120094,
146460773,
146057541,
144411365,
146852676,
146968502,
144576778,
139340249,
147079990,
142970496,
144684677,
139685458,
140879368,
145085109,
145948832,
145274826,
144854242,
146694347,
147217204,
139156130,
142094113,
144268613,
146968568,
145492609,
141633103,
141037638,
146393683,
146759610,
147178036,
138460186,
145611069,
145611076,
145611079,
145284413,
145611094,
145611095,
145611108,
144932706,
145620469,
145609545,
147983742,
144323870,
141568497,
146191985,
145620477,
145620483,
145620490,
145204104,
145609566,
145611144,
148223793,
142158377,
145639227,
145639228,
145863388,
143789443,
142166056,
147139550,
143936572,
143700166,
145618128,
145618135,
145379873,
145637014,
145637028,
145631183,
142580164,
146406908,
141225125,
140840280,
146534231,
144311658,
145637219,
145640564,
140944585,
145610124,
143567161,
144242850,
140463278,
145201889,
139190146,
141169611,
142597184,
141537402,
144634925,
145640880,
145631388,
145631395,
143911794,
145639087,
140386085,
142878929,
145957491,
144942650,
139841619,
145497373,
141676276,
145639128,
145645041,
146268712,
147320866,
140726165,
145639146,
145645053,
144281089,
141773148,
145639154,
145639161,
145639168,
145639175,
140484898,
146243423,
142626721,
145479827,
142184275,
145006249,
141690480,
145639186,
145645099,
146781226,
147544380,
147544381,
146717734,
147278751,
145639204,
145639215,
145645119,
144372947,
146781235,
147383605,
147376517,
145460476,
143846225,
145620541,
145620544,
143923269,
141888386,
145635237,
145635246,
145635247,
143712336,
145951441,
143485509,
145620552,
145620557,
140497632,
145635259,
145635261,
138890198,
140696148,
145010853,
145620584,
145635291,
145635292,
143001291,
141430951,
138603313,
142126433,
145620594,
145620596,
145620603,
141409339,
145635318,
142144672,
146974991,
144685408,
144575218,
146889346,
145620630,
141024119,
145824816,
145635343,
144278510,
139076906,
147999184,
145620645,
145635354,
142533619,
147349315,
139137183,
145086181,
140690824,
145609824,
145609828,
145615293,
145615307,
145617943,
145617961,
139203034,
143667859,
143805613,
141833801,
138865171,
142543698,
139011826,
143221083,
147086430,
139088255,
148214480,
145610025,
145632670,
140676331,
143710161,
147865505,
142810432,
141205591,
138528705,
142354909,
147953782,
140520271,
139059573,
140307054,
139689397,
145535750,
144545633,
141612690,
146036302,
145123888,
138941322,
145635196,
146036308,
144143387,
145644617,
144376185,
138926154,
141204086,
141433587,
145616090,
145616100,
144046519,
145644638,
148122932,
145631677,
145239636,
145612710,
145612715,
145612717,
145616110,
145616123,
146990621,
143829486,
145644647,
145644658,
145665487,
147447304,
145631695,
145631702,
147155313,
145610865,
145612728,
145612737,
145616131,
145616145,
147137686,
143380120,
145638747,
145638754,
144667023,
147993935,
138435586,
147194094,
144754342,
144200294,
139659454,
146061114,
143808891,
145471759,
142443994,
138545631,
147509700,
144275189,
145412366,
140442108,
142294103,
143908608,
144394114,
145609856,
145617967,
145617968,
140952633,
141382538,
142407378,
145244808,
145528893,
142118777,
141296173,
144657445,
146800013,
147173581,
142462388,
138869678,
143506783,
147952938,
145637159,
145640502,
146081421,
145640586,
145640587,
142127917,
145610063,
145632589,
145632592,
145347068,
145347073,
141408329,
145632689,
146885433,
145610136,
141438610,
144686247,
142105197,
148009999,
141983416,
143587267,
144337015,
143475112,
145529319,
145640886,
140548206,
143098643,
146105204,
145607288,
142424594,
143460477,
143628219,
144618821,
139488642,
140576994,
140007336,
140598266,
148203593,
145607318,
142316725,
139073739,
144150090,
144013374,
138457395,
145103687,
144560865,
139333735,
143763185,
147419417,
144368125,
148186328,
144359935,
148273222,
142381157,
147944095,
145576817,
148243386,
143661869,
141414026,
145576825,
140864429,
145615284,
145615286,
145617933,
145617935,
145477527,
145643822,
145643837,
145643840,
146366121,
148156781,
143783726,
142238613,
146386415,
145131856,
144710504,
147140091,
145615419,
145615428,
147213393,
147716116,
146045679,
145637265,
145640593,
145640606,
145326303,
141038580,
141880417,
143103050,
145092501,
140188802,
147218297,
145631346,
145631359,
145631373,
139275350,
146057547,
147823998,
142666307,
146477620,
139239605,
140481164,
139438888,
142770166,
147177989,
145698194,
144516788,
143535229,
145175479,
142094128,
141519033,
140230688,
138915642,
146451197,
141633107,
146692597,
139863955,
145611090,
141649750,
144813131,
145620440,
145620451,
142973023,
145611113,
144570199,
141528088,
145297957,
143131575,
145620466,
145751279,
145611124,
145611135,
147983737,
142805383,
139879096,
145361520,
145609560,
145611145,
144802129,
141440005,
147566391,
139132152,
145490151,
144055965,
145639246,
145639250,
144386522,
143013448,
146736813,
147673829,
142562798,
145631178,
145631193,
146224882,
140421821,
142675682,
145557066,
142007218,
143668517,
138527821,
139469733,
147365860,
145637213,
145637230,
145640553,
145640554,
145640567,
141767951,
141266920,
145610013,
141106808,
147407242,
140354942,
138557871,
145610121,
143379451,
144708396,
139956275,
143229404,
145170222,
138503390,
140577647,
140694450,
140489041,
145640862,
141868228,
145631376,
145631377,
142444894,
140729199,
140905800,
145639092,
145645003,
145645006,
145645011,
140386080,
142878936,
143733230,
147534989,
145721084,
145887727,
142051076,
148083058,
146765540,
145639118,
145645022,
145645036,
143139905,
144998840,
147101571,
145639133,
145639151,
145645057,
145645061,
146656450,
147862827,
145645069,
145645083,
145645084,
142400303,
145639177,
145639192,
145645087,
145645089,
145645096,
147136346,
139530010,
140169981,
145157190,
138959957,
143804124,
145639221,
145645124,
145645125,
146781228,
143726305,
144963582,
145620530,
145620531,
147172183,
138693030,
139787226,
148032743,
146470134,
142210004,
142215392,
145635276,
138890208,
145620570,
145620587,
145579069,
145452552,
147613163,
144166722,
145824784,
145824798,
139779951,
146126643,
142929252,
138874220,
139433339,
145620617,
146696821,
142728961,
147203177,
145635327,
145635330,
145635345,
146959325,
143281842,
145620648,
145635368,
146068138,
145098472,
145098473,
147141331,
138974478,
147258649,
146955527,
143891845,
145615296,
145617944,
145617946,
140330727,
148103862,
148162722,
142123625,
146619976,
141833811,
147245233,
144889669,
142846401,
145007236,
145610030,
145996958,
140173336,
145632657,
145632660,
145632677,
139892066,
147865504,
141335274,
143690843,
147903129,
145195959,
146476631,
142216308,
139205592,
145137207,
144690298,
140900212,
141710689,
144690304,
145635201,
139995647,
140660922,
139636707,
140141327,
141876578,
145568208,
145631647,
145631661,
146244203,
141221952,
145239618,
140871191,
142919996,
145612691,
145616087,
143874361,
145644632,
145644635,
145631680,
145631683,
146807937,
148259392,
145644645,
142010420,
147723352,
147734369,
145616134,
147254989,
139200075,
146568421,
145638765,
144869513,
140965786,
147348003,
147512450,
145150054,
141300298,
143809788,
147598762,
145756185,
148104774,
147025012,
139374165,
144287967,
147617832,
147132750,
143554542,
142600577,
139491113,
140034000,
141458024,
147087480,
147087486,
142735367,
140359629,
139470755,
144519859,
144557613,
143504162,
142486343,
148045671,
147208972,
143154798,
145609769,
146215771,
145609857,
145810997,
145615312,
145615317,
145615327,
145617986,
144338188,
142882031,
142882034,
146856452,
144573719,
141518338,
141700054,
140254489,
145637145,
145640497,
146081426,
145637244,
145637245,
145610045,
145632610,
145632686,
145632700,
146235741,
147620408,
146805925,
145610142,
145640780,
145640781,
141994888,
145050368,
146045879,
146045880,
142047228,
140872651,
142810439,
141971556,
148135847,
142917631,
147211309,
145558013,
143098640,
141996848,
148085613,
142924953,
143583815,
143038099,
141834843,
143640260,
148206249,
142827886,
145607293,
145607311,
146729352,
140276641,
140001262,
142747629,
145531119,
138499778,
145607324,
147216304,
147216309,
147665967,
140590458,
145523120,
143053196,
138458659,
142667272,
145615437,
145604404,
139476176,
147857367,
147716110,
147716115,
139499280,
145637260,
148033720,
145326299,
144889396,
143881339,
145030621,
142028773,
144248448,
147218293,
147218298,
138888236,
145631351,
146271936,
145631371,
145409251,
139580790,
141167123,
141167130,
146487058,
146553666,
141095234,
141095240,
144469554,
142659201,
144621326,
139610369,
141918200,
140061132,
142010294,
140795554,
142944892,
141832705,
140110336,
146393669,
140932520,
140230687,
141386197,
144298302,
141560411,
145671837,
141441819,
139444433,
145123529,
145611087,
143375584,
140339927,
147497938,
145713216,
142134472,
145611109,
147688795,
143097049,
145297956,
145971320,
145620459,
145620461,
145620468,
146047050,
147983743,
147777784,
145609565,
145611143,
145611152,
145611154,
143807179,
145639233,
145230172,
144055967,
144950788,
144950793,
146892104,
144898093,
146230755,
142562806,
145618122,
145618124,
145637020,
145637029,
146783809,
145631184,
145631190,
147798380,
147561167,
147561169,
146426398,
145972581,
146483692,
146483694,
145637220,
145637226,
145637227,
145640565,
145800988,
139840574,
140354947,
138557861,
146733672,
144200975,
145610125,
145831308,
139665336,
143282622,
144604678,
139102556,
144968748,
144968750,
146241229,
146241236,
146873714,
140489036,
142125830,
144634926,
142363130,
145639095,
145639106,
142008090,
147534988,
146765541,
142528049,
145639111,
145639113,
138804180,
140331738,
141828562,
145639138,
145639144,
145639145,
146002728,
143797625,
145639155,
144281090,
144070661,
140484901,
143664320,
147714808,
144101899,
142400292,
143317161,
145639178,
145639181,
145639187,
145645100,
145645107,
139237466,
139237468,
143847955,
145645110,
145645111,
145645122,
140172561,
143146454,
145620542,
147645021,
145635236,
142119677,
145620545,
145768613,
145635258,
142637483,
141250900,
145620576,
145761188,
145635286,
145452541,
141959474,
140457441,
141854479,
142324945,
141090978,
145620593,
143138310,
146687749,
146834886,
145635310,
145635312,
142302021,
139224219,
145620613,
145620624,
145635340,
145635342,
147423068,
146521913,
147870480,
140696216,
138871888,
147107059,
139224225,
141628016,
145620651,
139602738,
139936927,
147203185,
145635356,
145635362,
141414198,
147349316,
139757927,
143960541,
145609836,
145615299,
145615306,
145617953,
148092390,
140093467,
141894180,
146915082,
141190499,
145610031,
142565836,
139586129,
147531441,
145632671,
145632678,
147859709,
141839601,
147148132,
146647142,
139971658,
144993432,
144392294,
140258878,
146308564,
138937082,
148057712,
141199183,
147666884,
147334059,
145882080,
142168395,
138773998,
139694935,
145635186,
139495040,
146651363,
146036301,
145635190,
145635195,
146201721,
140660918,
140543671,
143517201,
145644602,
145644607,
146363097,
145040526,
141224602,
145612677,
145612697,
145616089,
144046518,
140256009,
146132089,
145644639,
145665478,
145631666,
145631669,
145631678,
145612702,
145616115,
144287342,
144695252,
141539799,
144897766,
142378083,
142378089,
141723163,
145677207,
142923965,
145612745,
145616139,
146874195,
141283015,
142684940,
145888642,
146568412,
145638761,
142442868,
142442870,
146370951,
145889197,
144034372,
139752856,
146221865,
146370961,
140060063,
141299036,
146061113,
143931607,
148262365,
145447155,
147781096,
148097801,
144025852,
143128011,
144568570,
138545628,
144857842,
147152202,
139297696,
139664639,
143833801,
140300259,
142486342,
145609759,
146323908,
145609855,
145615310,
145617975,
145617982,
145617985,
138645914,
142407377,
140744078,
140306387,
141809097,
147274085,
145637148,
145640490,
145640572,
142698688,
145610052,
145610055,
145610057,
145632597,
145632606,
145632607,
145632688,
146235739,
139958160,
146805927,
145610131,
145610135,
145610137,
145640773,
145726527,
145780702,
144007088,
144173817,
140837096,
145823832,
145823835,
145823841,
145640881,
145640888,
145640894,
145640899,
147144118,
146381606,
148201068,
146037994,
142316661,
144698359,
143098642,
146595505,
138729342,
142814607,
140863586,
144448245,
145523110,
139073738,
142825022,
147539407,
138613908,
138458655,
141858135,
146189915,
142200882,
147017938,
145037787,
145728803,
142808962,
142808967,
146448777,
147012300,
143239875,
142583969,
147881382,
145632368,
145888215,
147220133,
145632392,
145632399,
139759981,
147954263,
144293284,
141790211,
146584765,
138460669,
139315771,
144059495,
143914885,
141414023,
141811637,
145643759,
145643766,
145615273,
145617931,
146713262,
145643828,
145643835,
145581188,
141258502,
141559716,
141559725,
141343464,
147596245,
141868684,
147610239,
142627406,
141372252,
144792912,
145612009,
145612016,
145612020,
145612027,
145615431,
139019224,
147215542,
139475206,
145637259,
145637266,
145640599,
145640605,
145640608,
141310548,
139240845,
141880413,
147168116,
146202487,
138476039,
148193940,
141372583,
147875143,
148202665,
146275809,
144969992,
138888219,
143060711,
145631343,
141351877,
145631356,
145631361,
145631370,
138531482,
148077157,
146057543,
140850772,
138841295,
143640055,
147079992,
147821672,
148184114,
143362261,
147117322,
142094122,
140945235,
138460184,
145611070,
145961635,
147500055,
146680523,
143210629,
145611099,
144570197,
140339935,
138631444,
141540957,
144530361,
140923991,
145611118,
145611123,
145613709,
147983738,
141556101,
140793632,
145620481,
145620493,
145620499,
145204106,
143834548,
145609555,
145609564,
145611142,
146075147,
148141727,
143526740,
143526747,
139693545,
145639245,
143577615,
144474579,
142565048,
143700156,
145618120,
141448760,
140147395,
145637030,
145631180,
145631194,
139484302,
138527819,
145972592,
146309626,
139124665,
139124668,
142384239,
145640555,
145610012,
145610015,
143835231,
145610122,
140463268,
141138884,
142891787,
144929395,
138724979,
144289515,
147506778,
142712865,
145640860,
145640863,
145640869,
145631383,
145631390,
145631397,
145639089,
145639103,
145645012,
145645017,
142292956,
146557716,
147520724,
145887732,
142912117,
144321793,
139083515,
145194428,
145639126,
145645025,
145645032,
143307057,
146268710,
145645051,
145645056,
145645063,
141773150,
141265991,
144307064,
145639170,
145645071,
143962057,
147047001,
147224723,
148111404,
145639193,
145645090,
146781224,
139477276,
140169983,
144681470,
144923286,
143804126,
145639213,
143097115,
142224247,
140100790,
145620532,
145635244,
145635253,
140831795,
147097167,
140151682,
145620559,
145318619,
145635270,
145635275,
142637477,
145620582,
145620589,
142097958,
145154244,
148184614,
145620610,
138832475,
139920538,
140858421,
141359882,
145635336,
142533605,
144805711,
138910516,
145064375,
145620647,
145635370,
147349323,
148257872,
144586292,
147640267,
141821637,
145609822,
145609830,
145609839,
145617945,
145617959,
144518503,
141654073,
143582910,
148162720,
145724127,
145858286,
141884715,
139799734,
139044322,
141368728,
143725211,
139953995,
145610028,
145610041,
143567089,
144663703,
145632665,
145632672,
140676322,
142933113,
145166094,
141976367,
145512929,
145468354,
143215265,
145276639,
145380276,
139059571,
145864562,
140900211,
143703152,
141612695,
141612697,
139586970,
146036304,
145739746,
141776587,
145635198,
145635205,
138697636,
145036898,
140305677,
148150052,
145779634,
145631648,
145631652,
145631659,
145631662,
145612679,
145612688,
145616102,
144046517,
143638216,
142113462,
146132083,
145644626,
145644636,
144356395,
144356400,
145665484,
145646758,
142581389,
145616108,
145616121,
142768128,
145644649,
145644656,
145631690,
145631697,
145631700,
145612730,
145612735,
145612744,
145616136,
147136960,
146155516,
144968367,
147617408,
146751970,
148185831,
143565769,
140682340,
143931601,
148104763,
143040480,
146684748,
146294002,
146270182,
143589952,
147989026,
144588238,
139992951,
140741037,
142496975,
147208973,
145609766,
145609771,
145609852,
145609854,
145617965,
142916547,
144875953,
145044089,
147346594,
143178594,
141296171,
147918179,
142317667,
143895077,
142133381,
142462386,
143506781,
145637147,
145637156,
145637165,
145640495,
145640496,
146081428,
145640580,
147778620,
145610047,
144232218,
145632680,
145632691,
145632698,
146235747,
145610152,
141644199,
143658750,
145640771,
145640775,
145640786,
144351517,
146550223,
139181717,
145637399,
147266492,
145537230,
141374683,
144242183,
146669451,
146215439,
148203554,
145607290,
140287326,
145373780,
138845256,
138447550,
143182882,
145197894,
145607299,
147796300,
140007338,
143582030,
142252779,
147164597,
147774911,
145915071,
145060404,
145607319,
142897018,
141279756,
141279765,
142473735,
140483534,
145632344,
147804642,
146245469,
144079372,
141302204,
141375850,
143267785,
147560861,
145632378,
145632379,
145632385,
146339195,
143479172,
139139650,
138513098,
147342574,
139156127,
142770167,
147177986,
147188825,
140363919,
145912762,
142094112,
142922288,
140230684,
146934322,
146727109,
146393694,
143773459,
142086147,
147250914,
145137880,
145620434,
145620452,
145611101,
145611105,
143097046,
142195072,
143245460,
145620462,
145620476,
139489385,
145611120,
145611127,
145611134,
146441834,
145422585,
147983740,
141094776,
147726654,
144414529,
143734800,
145361517,
139994744,
145609561,
145609575,
145611149,
148223791,
144269525,
145932839,
145639234,
146323520,
148031643,
146063014,
139434475,
143664438,
141285560,
141285578,
141707455,
145618121,
147687593,
145637023,
145631182,
145631192,
146224885,
146540393,
145557061,
146534238,
138437792,
145957391,
141743231,
148189527,
145637212,
145640550,
145640557,
140107972,
145610017,
143665981,
145610110,
145610115,
141272011,
148080689,
143089779,
142891789,
143039386,
146678568,
145845279,
143282621,
141548158,
143309052,
146572021,
148268422,
144050211,
142553513,
145487708,
145857093,
147103031,
140489035,
145631381,
142444893,
139286095,
142363122,
145639105,
145644999,
145645002,
145645010,
142292954,
143733234,
144487425,
139336296,
144098044,
141808307,
144119794,
139872006,
144170427,
141488676,
142528046,
145639110,
145639114,
145639121,
145645023,
145645034,
139621676,
144548297,
144681408,
144998826,
145639136,
145639139,
145645044,
143920600,
145792610,
147147318,
141781174,
141735809,
146202016,
139819045,
147749249,
145645073,
145645080,
142919048,
147871918,
146325931,
143333775,
148197150,
145639195,
145639196,
145645092,
145645093,
145645106,
147394953,
145900667,
145654348,
140169985,
140169987,
146945310,
142798193,
145645128,
145058598,
142576696,
142717396,
140100801,
145620527,
145620534,
144197728,
145635255,
145951438,
143487682,
143329654,
148032744,
147777847,
145768610,
145635272,
145635279,
145010851,
145620575,
143138298,
145635285,
138603316,
139602686,
145824786,
145635313,
142199180,
146623172,
143525579,
145064365,
145620616,
145620621,
146956287,
145635334,
145635348,
144405740,
141392061,
145620638,
145620652,
142023828,
145635359,
145635364,
145389728,
145609837,
145615300,
145617950,
144919329,
145668694,
147353140,
146104127,
148162723,
147893930,
147182893,
145405304,
147697542,
139953997,
145610034,
145996962,
145632659,
145632663,
140676324,
143136324,
146358711,
146647145,
144973826,
141599309,
148020703,
147337878,
145129391,
145276650,
147155162,
141295520,
143070994,
147147539,
141858133,
138774013,
138588844,
144531641,
145779628,
142817329,
142817332,
143517200,
145644610,
144376179,
145568209,
140834713,
145631646,
145631657,
145239622,
145612690,
142002880,
145644631,
145646767,
141723156,
145631684,
145677189,
145612701,
145616114,
141271281,
147624532,
146144701,
142019828,
147803656,
145677195,
147954119,
145255771,
145616138,
139198998,
142989654,
145747658,
144208397,
146370960,
141748840,
146510740,
142778822,
141300304,
140083909,
141366051,
145756199,
142600586,
146270175,
139491119,
147123539,
142600590,
147785078,
148231303,
144226114,
143965907,
144450076,
143978010,
144557605,
143504169,
144442263,
143680399,
148270760,
145609773,
145810993,
145615313,
145615316,
145617974,
147173358,
147148958,
145772929,
145750350,
145637149,
145637154,
145640489,
145640493,
144092266,
145637234,
145637241,
145637248,
145640591,
145610049,
145610060,
144711719,
146121660,
139484637,
138557875,
145632682,
145632696,
143979130,
145610143,
145640777,
145640784,
145640791,
143702976,
144686254,
146340619,
139181720,
145416418,
145416423,
143820533,
142958545,
143633879,
145823840,
145640889,
145537723,
146669453,
141624491,
146105209,
146730931,
145732115,
143038103,
141834832,
144448241,
145607297,
145607306,
147796316,
147483072,
143767837,
142224180,
145607325,
145607328,
147216305,
147216308,
143582057,
140590454,
140807488,
143169485,
144547482,
146653295,
141279758,
142667259,
145309577,
139949647,
144769394,
145632350,
145632358,
145632359,
145232248,
147062866,
138809888,
141302198,
147238332,
144736388,
145690053,
145632369,
147912859,
145632393,
140382454,
146400433,
144663144,
147000576,
144196113,
148208853,
147994800,
145632425,
140741104,
146373241,
144071312,
143856737,
146488285,
147994815,
145632434,
147296629,
145396242,
146136963,
143398309,
145632466,
138621615,
145782770,
143825733,
145632477,
138481237,
140451793,
146899976,
145294408,
139593540,
143218847,
147330512,
148163165,
140844364,
144475551,
145612025,
145615433,
144552274,
145637271,
145640596,
145640611,
148099047,
138959435,
140155185,
146675496,
139498231,
148202671,
147218286,
145750757,
144519565,
139826128,
142636666,
140724350,
145631337,
145631350,
144667599,
142024822,
145631368,
141413215,
142192490,
143687604,
138896296,
147981501,
138540613,
146471241,
147672192,
141515391,
138730885,
140061146,
142344874,
138688840,
148184128,
144630913,
147374672,
141289734,
140135040,
146444536,
147857920,
144552923,
138616362,
142086153,
145611088,
146991406,
147250909,
145620436,
145620449,
143121896,
145611103,
145137885,
143097048,
145620456,
145620473,
143740441,
147820480,
145611132,
147983735,
139879098,
144930220,
145620479,
145620494,
142991597,
145609570,
145611140,
145639223,
145639232,
145639241,
144374571,
146075142,
138827955,
145932853,
146280110,
139452973,
144950789,
142191569,
141285574,
143783753,
145618127,
145618140,
140929687,
143800917,
145637025,
145631195,
139011808,
144637909,
141563116,
145354672,
147488510,
138975046,
145637215,
145637232,
145640560,
140107959,
141106810,
143218249,
139527248,
145610112,
145610127,
143161752,
140463273,
142456273,
146678566,
147999909,
139675754,
145487702,
142197642,
145258141,
145640872,
145640875,
144461777,
145639098,
145639099,
145644998,
145645016,
147876638,
146006988,
147758803,
146474426,
145639123,
145645029,
145021974,
146268717,
147889985,
142745982,
144956288,
142963943,
145639141,
144178023,
146992118,
145645075,
147583423,
146553170,
144098099,
145001927,
141503304,
145639190,
145645103,
141699301,
142851242,
145645115,
146250131,
142717393,
140137403,
140683681,
145620537,
146388215,
145635235,
142027805,
144938424,
140053392,
140336870,
148032732,
139204987,
142119676,
146388239,
143972859,
145904300,
147584949,
145635265,
143626568,
142097921,
145010869,
143753500,
144073156,
145620568,
145620577,
145620581,
143919147,
140921107,
145635287,
145635296,
146395380,
141959477,
142949797,
145620607,
146687748,
145635306,
145635307,
145635324,
143001298,
145620614,
145620627,
146956284,
145635339,
142391048,
148160452,
140033825,
141136394,
139854610,
145620654,
147203187,
145635361,
145635366,
141414200,
143748093,
146923303,
145551508,
145615303,
145617957,
144032420,
139502908,
142062482,
143774416,
142714379,
141766383,
141884710,
140211192,
145610032,
145610035,
148180569,
145549753,
145632666,
145264497,
147196746,
147586182,
146358706,
145191496,
144876941,
147538836,
143706301,
145160137,
138822285,
142501799,
144817035,
145200409,
140246770,
138630739,
145135223,
143664882,
138853854,
140592060,
145635189,
145635208,
147780455,
138697640,
142904808,
142628188,
146600751,
145644601,
145644604,
145644619,
145631655,
145222393,
144463868,
141224603,
139169802,
139995669,
145612681,
145612696,
145616094,
145616105,
138616364,
144046515,
147563724,
145644642,
145631673,
146234386,
145612703,
145616112,
145638737,
147431485,
142567716,
140166834,
147447301,
147734362,
145255769,
145612725,
145612740,
145616140,
145616144,
146539357,
147140876,
146568413,
145638750,
144869515,
144208384,
141752220,
145150047,
140600022,
148068601,
141299048,
141300302,
139439778,
146684741,
142294583,
142443998,
145832110,
144568573,
143880729,
144857839,
147785081,
143833798,
147785089,
145943539,
140461601,
138888707,
145609760,
147266992,
145609847,
145615322,
145617972,
146715747,
139760253,
148074024,
146009800,
139457290,
147621807,
145244811,
146856447,
138470791,
142265401,
146098628,
141674519,
139019218,
145637152,
145637238,
145637253,
145640575,
145610051,
145610054,
145632596,
143871912,
145632693,
142043390,
145610148,
145640772,
145640787,
139264740,
140058010,
146050703,
143985017,
148010002,
144246452,
145640891,
145640902,
146215435,
138459994,
145528206,
140646589,
140550344,
147259826,
142814584,
141878988,
146105211,
143959154,
148153144,
147221427,
145732113,
138845263,
142814606,
142762540,
145607303,
143698247,
143775217,
143291039,
144395708,
145607322,
147216302,
140911239,
142825025,
144721491,
145759658,
138458662,
143661561,
141488423,
138694620,
140588523,
139409565,
145632343,
145632345,
145632353,
145037794,
144977423,
147124097,
138995726,
143239872,
145690048,
147881372,
145632367,
145632384,
145953528,
144581278,
148109564,
147216740,
142101675,
146096141,
145350099,
141583425,
142925635,
141449783,
141372906,
143542782,
148243380,
143664560,
146287731,
145077391,
145178483,
141515962,
145643765,
145643767,
145615272,
145615281,
145617921,
145617923,
145617928,
145617930,
145643827,
139466299,
142262605,
146386419,
141799553,
143007284,
143818487,
145612026,
145612028,
145615432,
145615434,
145615439,
145637258,
145640597,
145640607,
148099052,
146720878,
148261485,
140155182,
141507047,
145423624,
147148172,
139195591,
146275808,
139826131,
143060710,
143633785,
145631340,
145631342,
145631349,
141351876,
145631369,
145409249,
145409260,
138531490,
148077165,
145305519,
139552560,
140584347,
143497204,
148167706,
147672191,
140481158,
147080014,
141548448,
147217198,
141718513,
139816569,
141363419,
140110337,
144630928,
146146728,
147830057,
141503983,
145620432,
142029846,
147008306,
145611106,
145611107,
145620470,
147820479,
140721823,
144930221,
145620491,
145609563,
145609569,
145611141,
139693542,
145639235,
141904624,
148031641,
146118447,
145639251,
145381663,
144950790,
143936579,
144292039,
144582735,
145210762,
140710052,
141050941,
148022815,
140051562,
146601677,
145637031,
145631173,
145631179,
145631186,
146540392,
145972600,
143575131,
145991694,
145188889,
147365874,
139608195,
145637231,
145640563,
145610014,
147148067,
145610123,
145610130,
148080683,
141138886,
146973490,
146515684,
139190145,
138812919,
140804219,
142597185,
145661345,
145258144,
145640861,
145640871,
145631382,
141124520,
145639097,
145639104,
145645015,
139449093,
147876641,
147876643,
142213010,
139332361,
140905804,
145645040,
143543629,
146753010,
142447519,
141150461,
147159674,
147956918,
143797616,
146082538,
145639147,
144178024,
145645042,
145645050,
145645052,
145645062,
139528199,
145263493,
139416469,
143797632,
144332334,
145639174,
145645070,
145645076,
140484899,
140312749,
146498436,
142626722,
146325941,
143333776,
145645098,
139118989,
146781225,
147303414,
140169984,
143804120,
145645120,
143083205,
145460494,
145620540,
145635238,
147383606,
141947005,
142122686,
138868924,
145635262,
145635269,
142637478,
141952371,
142951736,
141305128,
145010868,
146194920,
145620574,
145620583,
145635284,
142772233,
144166719,
144010230,
145620590,
145620595,
145620604,
145620615,
145649506,
145635335,
147870478,
145635365,
145635371,
141414203,
142533614,
144805720,
147258653,
142561019,
145609838,
145615301,
145615308,
145617951,
145617956,
145617958,
142821098,
147875923,
145668702,
141650499,
146260746,
146260747,
146104119,
141833800,
148136405,
142543695,
139967298,
141884714,
146415958,
147170394,
139044321,
139044330,
139425544,
140004230,
140004235,
145610033,
145610036,
143567090,
143318295,
145632673,
145264500,
139892068,
145160140,
145234836,
143108768,
142918300,
139882775,
139824960,
142168392,
145016526,
145635197,
145635207,
142817326,
145644609,
145644620,
145631654,
145631660,
145885690,
145522278,
145612680,
145612699,
145616091,
145644637,
145568228,
141723155,
145631676,
146234384,
143522430,
145612718,
145616107,
145616109,
145616113,
145638734,
148107246,
143129564,
142656872,
145631701,
145610866,
145612743,
145616130,
145616137,
146539365,
146155506,
146133004,
146133009,
140856934,
147993933,
146370949,
146751971,
140121583,
148262339,
144754343,
142475596,
140702642,
141752227,
147598767,
146751977,
142999536,
143040481,
143808905,
146684736,
146684743,
142877421,
140287894,
145422744,
144568572,
141391865,
144427466,
146965887,
139664634,
141658742,
147530289,
143965908,
143696475,
139725951,
143558600,
144696099,
145609763,
145609772,
145609774,
146955555,
145609846,
145609853,
139817821,
146224954,
146886684,
147712285,
139532899,
146989137,
148266045,
140313612,
138764424,
140368815,
147717237,
146695181,
147952937,
145637146,
145637151,
145637157,
145640488,
145640494,
145640503,
145637235,
145640578,
142698686,
145610048,
145610050,
145610059,
141857216,
144546275,
140508375,
145632683,
145632690,
140577905,
146885436,
141582304,
138811546,
145610132,
140569100,
142105196,
146340627,
143954462,
145537236,
148135834,
147515724,
140155444,
140852901,
146215438,
143565593,
141003328,
142814596,
148153139,
138845259,
144567819,
139888560,
142531649,
146105220,
145607300,
145607302,
143775216,
140169778,
141866429,
145607317,
139488647,
147885354,
147159573,
147164613,
143722061,
146001107,
141545255,
139354614,
147625642,
142989050,
146393654,
138592513,
145085117,
144802981,
145271968,
145916134,
147760502,
144762290,
147217201,
145912771,
140279695,
143671939,
141560429,
141740470,
142086149,
145142167,
145611071,
145611084,
142689190,
145137882,
145620442,
145620453,
147630628,
146957763,
145751283,
147820468,
145609546,
145611128,
145611133,
139835217,
147983739,
140554325,
145620480,
145204116,
145946389,
143456755,
143456757,
145609558,
140795793,
145639222,
145639236,
147566388,
141904627,
138599504,
141482435,
144587579,
144950785,
142875906,
146671881,
146141676,
145776298,
145618136,
142417388,
146018455,
145637013,
138798006,
145631191,
147798379,
141685945,
140976094,
143125852,
147950179,
144743970,
144743972,
139044317,
145991691,
145637211,
145640556,
147888983,
147939597,
138652911,
145610116,
144242854,
147808526,
148068863,
145851751,
145711832,
145979152,
147425142,
142959890,
144929394,
144367254,
143690896,
146572020,
141537410,
140489043,
141973975,
145640868,
145640879,
145631387,
145631396,
143826937,
145639090,
145645000,
145645001,
145645009,
142213013,
141294741,
145957488,
143645442,
144942651,
139872004,
141488675,
139083514,
145639127,
145645033,
146784507,
139336300,
148225666,
140999017,
147933740,
144903033,
145639135,
145645045,
144281088,
138614006,
145263490,
144227840,
139686677,
145639160,
145639169,
145645065,
145645081,
145645086,
139594720,
144738130,
145639194,
145645091,
144750059,
144119879,
145639207,
145639212,
145645127,
139199677,
140137407,
140100791,
145620526,
145620533,
144197719,
144197726,
145635239,
145635254,
145635256,
147383612,
144049060,
139880013,
145010846,
145460502,
139744003,
145620549,
145620560,
146388228,
145635280,
147510683,
145010861,
139433298,
145620572,
138808335,
138808336,
145635300,
139520029,
146126641,
141959481,
141517708,
145830992,
145128507,
141138136,
147276536,
144963663,
147809919,
147119408,
142458081,
145620611,
145635319,
144541384,
142459844,
145064366,
145620631,
146494343,
146956288,
147203173,
145635328,
147613750,
140033829,
138930520,
143287455,
145620639,
145620642,
144070871,
145389729,
139137182,
147457258,
145609823,
145609831,
145615290,
141221134,
145825815,
141895815,
142200086,
142008894,
145610020,
145610024,
145549749,
145632662,
142933114,
147385596,
145512932,
140335864,
146431120,
147528813,
141534900,
145706234,
139876403,
139842659,
146310002,
140988389,
142800885,
138911745,
143071000,
143755763,
142212051,
140262557,
139888423,
145635204,
145635211,
146900768,
146900777,
147069139,
138763106,
145644616,
145631645,
145631651,
145612685,
145612689,
145616101,
142331639,
146191507,
145644627,
145644630,
145631685,
147857952,
145612707,
145616116,
141755585,
145638733,
145638742,
145644654,
145644655,
145387613,
147560363,
145631696,
145612729,
145612736,
145616148,
145379012,
139200077,
141982529,
144075841,
143416910,
141348138,
138993102,
144717561,
145059045,
139537595,
143751722,
144127799,
144759558,
143978312,
139314159,
145843997,
138434031,
143466801,
147577007,
141897669,
140732108,
144980293,
147530279,
147901031,
141390184,
141390191,
145609752,
145609756,
141707452,
145609851,
145615315,
145615326,
145617976,
146009804,
146977809,
144518584,
143443361,
147918165,
145772928,
142462390,
141951232,
147214322,
148069484,
143949391,
141863916,
145637164,
146064107,
145637242,
145637251,
145640579,
145640592,
144736856,
139252336,
143835226,
146373877,
144232217,
147998835,
145632600,
141750283,
145632697,
145610144,
145610149,
145610153,
145640778,
145640783,
147094222,
144351520,
147227564,
139487951,
144546877,
142529786,
143820534,
141008399,
145640898,
147164555,
145248276,
143349166,
145607287,
144452555,
143698236,
140848099,
143583809,
139852498,
142814602,
145889780,
145607305,
141117902,
143838500,
143281147,
144448243,
143400718,
145607326,
145607327,
147216306,
138995708,
139511011,
144547488,
143053198,
144044701,
142667260,
139196297,
145327656,
142508737,
147845385,
143603075,
146278121,
141460773,
144560901,
146189912,
144011822,
140810735,
145632349,
145632357,
145632364,
145690047,
147881373,
145632371,
147137803,
144690547,
146339192,
147220141,
141848412,
140239257,
146488278,
142004170,
139931331,
145632410,
141415195,
143498081,
145288283,
141170851,
145632435,
145124363,
141464406,
146438213,
146280540,
143438993,
145504815,
140549282,
140111433,
139195607,
141559729,
148212072,
141868687,
139012959,
145131864,
144663592,
145612022,
145612024,
145615420,
145615436,
144552273,
142870480,
147634110,
147985733,
146220746,
145637257,
145637268,
145637270,
145640595,
145640601,
145640612,
148099048,
147768233,
147591690,
139440307,
141880410,
140815086,
139802636,
145423622,
144248440,
140300910,
145234942,
148202672,
146275806,
145439582,
144519558,
146840434,
145631336,
145631338,
145631354,
145631365,
142121125,
145409245,
145409247,
139275358,
146057538,
142156207,
140173724,
147302151,
139734988,
144748940,
142266027,
141862317,
139610401,
147550396,
147551649,
145271973,
144917117,
147217200,
142094118,
146652218,
139816579,
143657225,
141548458,
142485610,
140039163,
145611072,
145961630,
139333841,
142501206,
141764586,
145620433,
145620448,
139489359,
145611104,
143204273,
145620474,
145611131,
147983734,
145620478,
145620489,
145620495,
142006428,
147172142,
145609553,
145609554,
145609567,
145611137,
142109206,
145639239,
145639240,
142938338,
145490158,
144950786,
141285573,
147171184,
145637026,
145032767,
143320930,
140840283,
142879702,
139729527,
143667737,
146309628,
147607158,
145640559,
143665971,
144200968,
145610111,
145610128,
142677916,
147185028,
142481171,
148095458,
144289517,
146241227,
141537405,
147277647,
145640867,
145640873,
145640876,
147520069,
145631386,
145639085,
145639100,
145645013,
145645019,
142213014,
141488672,
144321790,
148083050,
146765544,
145639124,
145645028,
147837981,
143733240,
145021973,
146784508,
144548295,
146992106,
142696186,
145639132,
145645054,
142735880,
141265993,
142696188,
145639172,
145645074,
146005416,
140312745,
145918785,
145479825,
145001928,
139226032,
145639189,
145645102,
139237471,
147394948,
147389811,
140516399,
142400317,
148197155,
145639199,
145639211,
145645116,
147383602,
139698535,
145620536,
142209999,
141888389,
147582451,
145635240,
145635251,
142539181,
140210340,
143485513,
144049059,
144579116,
145620561,
144781523,
143923287,
145635266,
143765040,
142936771,
138890193,
138603305,
142097922,
142951732,
145620578,
143831527,
145635281,
145635299,
141959480,
144551556,
145737347,
141138139,
141323211,
145620591,
145620606,
145620608,
143919155,
145635304,
145635305,
145635325,
143001299,
140728143,
146623167,
145831010,
146521904,
140696200,
145620626,
140235275,
143968948,
139757894,
140453593,
139076910,
145064370,
145064371,
145620656,
145635350,
145635367,
147349319,
143548294,
142565465,
145609842,
145615289,
145615304,
145617954,
146260741,
148162718,
138606809,
145724132,
147893916,
143221072,
144566829,
144284580,
143896144,
145610021,
145610038,
143318280,
143318283,
147077615,
145996963,
145549752,
145632669,
139678666,
147586183,
146099819,
139392636,
146048238,
145468350,
143986931,
139876406,
141977368,
143327714,
145635188,
148240390,
144136172,
145882085,
145635192,
145635203,
145635209,
141418544,
147713567,
148150051,
145644605,
139125406,
145631650,
145631656,
145612684,
145612686,
145612695,
145616095,
145616104,
145616106,
140097084,
143791759,
144065322,
147563721,
145644624,
145644641,
145631672,
140805439,
142581394,
145612720,
145612722,
145616117,
148177439,
145638736,
145638741,
145644653,
147863471,
145631699,
145610864,
145612726,
145612739,
146539361,
140962411,
145638745,
145638766,
146832688,
146656943,
141968548,
145150048,
140121585,
147609183,
147314911,
146370965,
140947632,
145756195,
143978309,
143978311,
146656969,
142325155,
147214618,
146014264,
144717605,
146270172,
144568576,
141676876,
143932721,
148009139,
147530285,
145647605,
140461604,
144557607,
143680404,
145609761,
145609848,
145609850,
145617977,
139478561,
139135458,
145244810,
142926579,
148164697,
145368509,
142462383,
141951234,
143506772,
139019202,
146516944,
145637153,
145637163,
145640484,
145637254,
145640576,
145640582,
143047298,
147225368,
143430994,
145632694,
141993421,
139975310,
143462055,
145610150,
141695240,
146947347,
144242847,
145640790,
146340630,
139993844,
143954467,
147707196,
147568122,
142553526,
147616217,
140852896,
141003332,
140344137,
145528207,
145803642,
145803644,
145607286,
144452554,
141409852,
145066823,
145233792,
145607304,
141118644,
147159538,
142896978,
142924214,
143031145,
145607315,
145607321,
143775220,
144044700,
139859657,
144310529,
142825024,
144764504,
143965896,
144717641,
142831511,
139391693,
145609768,
145609860,
145615330,
145617971,
145617981,
142187543,
140786090,
146429028,
145376519,
146856455,
147918169,
145048865,
145762205,
142265403,
141282284,
148266039,
140313611,
141809093,
143242129,
144397279,
140530878,
145637160,
145640498,
145418421,
145933798,
145640573,
145640583,
145640590,
145610043,
145610062,
144232215,
138660512,
145632593,
145632603,
138571257,
145632685,
145610140,
139487955,
138611083,
142460648,
142294239,
142529781,
145618512,
140758481,
144078240,
145813506,
145813508,
144382599,
145640883,
145640903,
143038083,
142088188,
145528197,
148203556,
145607291,
147884465,
143698240,
144618824,
138548084,
145607296,
146077549,
140757207,
143833056,
145523107,
146653282,
144023193,
145739914,
147754822,
145464839,
138694612,
140483535,
147123232,
144931912,
142200889,
145037789,
140347590,
146495477,
145632366,
145632376,
145632380,
146592539,
143410079,
147216731,
147216734,
147216738,
140949185,
145632396,
139289044,
139655508,
143813337,
146092608,
139056677,
143374481,
146488293,
139505767,
145632447,
145632451,
142915409,
147055642,
141816805,
146959467,
143392582,
145632454,
145632456,
145632463,
145632473,
141819656,
143099512,
142582645,
142863934,
145632487,
145632488,
145144710,
148253099,
139669082,
144584788,
144502423,
144532671,
142582651,
145437216,
146327010,
141740891,
142262595,
145636903,
148243669,
145637086,
145637096,
145631271,
145631274,
145096918,
141751198,
143230969,
145230611,
144575999,
147380502,
145397973,
141091073,
145983103,
140265693,
145881484,
140139261,
145640677,
145640680,
138470885,
141600374,
139939572,
144881437,
144809343,
145632733,
145632740,
140393896,
144494798,
142773118,
146971193,
141657584,
146228243,
138657963,
145618937,
145757232,
139992300,
145610876,
145612758,
145616166,
145616169,
145638785,
139194815,
147837651,
141355445,
147052141,
148090234,
146800351,
139063979,
145610896,
145610901,
145612779,
145612786,
145616186,
145638798,
145638801,
140293592,
145610914,
145610923,
145612807,
145616202,
145431374,
146712559,
145638820,
145610949,
145612825,
145612826,
145616225,
142371252,
147363880,
143364456,
139200155,
141759442,
147849920,
145610970,
145612842,
148000825,
143133227,
145323002,
145619062,
147102538,
145643542,
147470681,
145635398,
145635413,
145635416,
140941960,
143015586,
146175667,
143156549,
138892144,
145611342,
145611349,
145611360,
147515029,
145192439,
139668406,
145643570,
145620723,
140861922,
141434307,
142302132,
145611369,
145617707,
144632063,
142171725,
140711510,
144838016,
145643584,
145643599,
145620730,
141348844,
145635442,
146070220,
145615085,
145617719,
145617733,
145148280,
139883763,
145643618,
146583005,
145620749,
145620764,
145620767,
145635473,
145635474,
146430559,
145611408,
145611425,
145615086,
145617742,
145617744,
145617757,
145617759,
143236670,
143640979,
144220758,
138977619,
145643635,
144036197,
143435788,
139740131,
145635497,
145635504,
147055492,
140521031,
145611430,
145615112,
145615113,
145615122,
145617763,
145617775,
145617780,
141643543,
144834279,
145643649,
145643652,
145643666,
145620806,
138783458,
145635514,
138789141,
145615136,
145617796,
145617799,
146295391,
147112751,
145620817,
144486614,
145635541,
143427389,
145615161,
145617811,
145617825,
145617828,
138681741,
145643697,
145643700,
147778142,
148245007,
145635558,
145635561,
145635576,
147613936,
143685160,
147121271,
145609780,
145615251,
145617917,
140002259,
145631197,
145631214,
141340942,
144273976,
144273979,
143994502,
139697844,
145643909,
141616647,
139694286,
145612033,
145612050,
145615446,
142457052,
147365858,
145637189,
145637192,
145637195,
145640531,
144905688,
147778610,
140065255,
145637294,
145640615,
145640626,
145632578,
145612221,
145612224,
146805148,
145632750,
144107807,
139851859,
139133486,
143228184,
139710843,
145640841,
139335080,
138479562,
141360905,
146155655,
142188526,
146578507,
147629118,
145616296,
145619078,
142181911,
143672389,
142605169,
146940871,
145616316,
145619092,
145620226,
142854859,
145616339,
145619115,
145619118,
138627281,
145620234,
147120820,
146040865,
139144652,
145719030,
145522189,
147923623,
145616360,
145616361,
145619134,
145619144,
146996219,
145620262,
145620263,
144777442,
142064819,
145616375,
145616377,
145616382,
145619177,
145268571,
142850849,
145610139,
145610141,
145640792,
146199925,
138885266,
141438612,
140640773,
143939734,
142690955,
147823694,
142529780,
141595979,
139080884,
145640884,
145640885,
145640890,
146215440,
141235542,
145528199,
145528212,
145962828,
144698361,
144698363,
145803653,
148203555,
142424588,
141834837,
144698374,
145431532,
144618822,
145607294,
145607309,
145607312,
140276643,
147884478,
141118638,
142747623,
143838496,
145736843,
141617646,
147105644,
143169481,
147216303,
144946568,
144946569,
142513490,
145759657,
145256944,
141858140,
140142710,
145309578,
142508740,
146278127,
147174488,
147123242,
144072565,
147052917,
145632360,
145632361,
146136864,
141159984,
142286143,
142286146,
147309826,
145774085,
140866045,
147216733,
145632394,
145632395,
139150458,
147220149,
145223343,
141536623,
143374482,
147386668,
145632446,
140235430,
141854659,
144713599,
147386702,
144914528,
140158700,
145632462,
138621602,
143377949,
144502405,
146726170,
145341054,
145500118,
142202573,
144649037,
141636743,
144145247,
139778263,
139778270,
142948171,
145636919,
147942170,
145637080,
145637085,
145637099,
145631263,
145631272,
145631273,
142357810,
146201257,
140715385,
146056360,
143231811,
144680574,
141185394,
141807467,
145632734,
142460706,
142460707,
145023270,
140480109,
146499443,
145618935,
142378093,
140209704,
145610877,
145612761,
145616167,
145616168,
148079289,
140115373,
145638774,
145638783,
141629677,
145610902,
145612770,
145612785,
142643432,
145638800,
147052147,
146196345,
147155378,
139057814,
145612805,
145616204,
147176913,
144243793,
140839056,
147259705,
138656521,
145638821,
144841377,
143144088,
144722386,
145303813,
142885597,
144937979,
145610943,
145610950,
145612824,
145612827,
145616224,
145616234,
145624388,
145638842,
145638843,
143144101,
140877604,
140939640,
142290942,
145610971,
145610972,
145612843,
145612856,
145616240,
141731808,
142211029,
142937790,
145616279,
145619043,
145619059,
145619060,
138681586,
145643540,
145643543,
145635400,
144658759,
145611343,
143135945,
145643557,
145977812,
145620707,
145620710,
145635430,
145635431,
145617708,
145108988,
145643579,
145643586,
145620728,
145620746,
139032989,
145635449,
145635450,
146070222,
145611387,
145611390,
145611405,
139328988,
142959582,
145148281,
145643608,
145643609,
147746196,
145620765,
145620766,
148245798,
145611409,
145611424,
145611427,
145615095,
145615096,
145617743,
145617760,
147429744,
145643633,
146802829,
141779183,
139921967,
145635503,
144658823,
145611433,
145617764,
145643651,
145643654,
144613065,
147949593,
147047534,
145635515,
144912674,
139518477,
145615131,
145615143,
145617794,
145620818,
145620819,
144210095,
145635542,
145635555,
139371318,
145615163,
145617813,
145267316,
145643698,
145643699,
145643710,
147778140,
145535594,
145635559,
145635560,
144879121,
145791803,
145609775,
145609777,
145615249,
145615252,
147311707,
146931583,
138713549,
148028629,
140064818,
138762407,
140154711,
140710167,
145334838,
143104960,
143430118,
142491681,
142491684,
143295939,
139694284,
145612034,
145612039,
145612049,
145615445,
145612084,
145612087,
145872643,
145637196,
145637197,
145640530,
145640628,
141123709,
142537921,
143547727,
140733095,
145612222,
145612223,
146122508,
147450301,
145934018,
146376156,
139116342,
139116343,
147854040,
145632752,
145632763,
145632769,
141227330,
146195855,
139028176,
139851858,
144501328,
140606259,
140640831,
147086462,
143618861,
139335086,
147466238,
145351613,
147629117,
141934216,
145619072,
145619077,
145471147,
144135369,
145896863,
145620199,
145620202,
143337292,
145616317,
145619090,
145619095,
145619105,
144314793,
145620209,
145620210,
145620213,
143920227,
145323074,
139503471,
145616338,
145616340,
145619113,
145619116,
144491196,
144538643,
139432941,
144175286,
145620247,
145620250,
145620253,
148209789,
148209792,
142604308,
142604317,
145719024,
145037003,
141439390,
145616359,
145619143,
144906474,
141667936,
145620261,
145620264,
145616379,
143707146,
142850850,
145620280,
140003243,
143442210,
140952609,
139505849,
145632532,
145632533,
144520594,
147969078,
142681852,
142765248,
145635589,
145635590,
141437854,
139039192,
140881260,
145635619,
145635621,
145438876,
141829594,
144163829,
141162789,
140229723,
144916313,
144363868,
138785721,
145635650,
145635664,
138572904,
146058435,
143046883,
143482488,
144214807,
143160255,
141479237,
142496973,
145609753,
138598658,
145521111,
145615318,
145615323,
145617983,
142354142,
144865929,
141047137,
145640491,
145640500,
145872683,
145637233,
145637250,
145640571,
145053810,
145610044,
145610058,
142076569,
148066739,
145632588,
145632599,
145632605,
145632608,
143979132,
145610138,
145610145,
141644204,
138509252,
142810437,
142150386,
148221085,
145640887,
145640897,
139701776,
140228857,
144698360,
140646588,
143959153,
142424587,
143038100,
141834844,
144448238,
138550050,
145607308,
145607313,
146729358,
146077551,
142747633,
140667432,
143838492,
143838495,
141540070,
145915072,
140001276,
145523108,
147588946,
141425174,
145739916,
144873623,
139511010,
144708966,
142508736,
141806682,
140588524,
139548595,
139409575,
147419422,
146189913,
148199537,
143203969,
145632356,
145037793,
144736383,
141466312,
146339185,
146339198,
138833477,
147897006,
147216728,
147216737,
145632391,
142935106,
147506008,
147028986,
142949918,
138529637,
146195674,
138517413,
148208855,
144071310,
146195709,
147691235,
147994832,
145396236,
142361551,
147145526,
142406141,
143910700,
141648351,
138914917,
144030559,
138767049,
145632498,
144649033,
144649040,
139492220,
141257499,
147674022,
146619750,
139778267,
145636902,
145636916,
141810771,
146541251,
147353146,
145637081,
145637084,
145637090,
145637095,
145631268,
145245022,
147869705,
140143502,
147294342,
145170006,
145363967,
142837533,
147065377,
145640666,
147967803,
141497928,
142973993,
145632735,
143444125,
145023260,
147277635,
144856993,
144513145,
145618931,
145618938,
145255790,
143522480,
145610881,
145610888,
145612755,
145612762,
145616155,
145616164,
145616173,
144799680,
145638771,
145638786,
141408811,
142723767,
145610890,
145612773,
145616174,
145616181,
147088531,
145638804,
141504867,
146331249,
145612792,
145612801,
145616208,
147259702,
145638833,
139003603,
143431716,
139146638,
142416110,
145610946,
145610947,
145610956,
145612814,
145612828,
145616220,
145616230,
145638847,
145638854,
138830568,
144880207,
141263585,
145610966,
145610968,
145610975,
145612844,
145612855,
145616241,
145616250,
146036483,
148000822,
139844458,
147135106,
139697122,
144788012,
145616265,
145616273,
145616282,
145619049,
145619056,
145619063,
138681590,
145643544,
145643555,
145647617,
145635404,
140571919,
145611348,
145611355,
144141958,
143639110,
139668411,
139835606,
145977811,
147444416,
145620703,
145620714,
145620721,
146469051,
140861925,
139651950,
146310848,
140499201,
138892146,
145611373,
145611384,
145617712,
140364680,
139081337,
142787577,
139344828,
145643582,
145620725,
145620731,
145620733,
145620742,
141348845,
142387584,
145635461,
142621473,
145725717,
145611391,
145611404,
145615082,
139813146,
143491546,
145148285,
145643605,
145620752,
145620761,
139033011,
144080006,
145611413,
145611420,
145615092,
145617747,
145617761,
139555417,
145643636,
140148290,
145620770,
145635507,
147920457,
146000048,
145611434,
145617782,
139418580,
145867039,
144834281,
145643650,
145635512,
139518479,
145083133,
145091966,
145615133,
145615140,
145617795,
145617805,
145620822,
143337218,
145635543,
145635554,
147078794,
141955826,
147163202,
145246897,
145615159,
145643695,
145643707,
145635564,
142124416,
145609778,
145609792,
145615242,
145615246,
145615253,
145617916,
147173303,
143476501,
138679929,
147168996,
147601925,
140051564,
140399903,
145631218,
146894304,
144637912,
144637925,
143430117,
145612035,
145612038,
145612045,
141932345,
145612091,
145872647,
145637193,
145637200,
145640529,
143683575,
143678579,
139712398,
145640624,
145640633,
140294896,
143547723,
145612219,
145612226,
140964648,
143268532,
142530765,
139038038,
146980609,
148168905,
147143101,
145632751,
145632764,
140780153,
147927752,
147424556,
140816025,
145640838,
140690921,
147466235,
147537473,
145616303,
145619073,
145619076,
143875838,
142958144,
140837405,
148053449,
145620198,
145620203,
139248831,
144864990,
140402000,
143000726,
141108194,
145616318,
145619091,
145619101,
143790749,
144443424,
145620214,
143920226,
142426891,
138600800,
145616334,
144033409,
141768494,
145620248,
148209796,
143559996,
145719028,
142137832,
145616373,
145619140,
145619147,
141698901,
145738615,
145005150,
145620257,
145620266,
145616376,
144973199,
142478324,
140948200,
145620284,
139346868,
146866568,
143294090,
147577948,
144588234,
139992947,
147947140,
146198004,
142496979,
145609767,
145609770,
145609858,
145615309,
145615329,
145617969,
145617970,
142916546,
141868355,
139457286,
142882033,
145244817,
139134945,
147860979,
148266038,
145772927,
141809085,
143211539,
145950121,
142317812,
144529704,
145637155,
145637161,
145640492,
145640499,
145418419,
147111273,
145640584,
145640585,
145053804,
145610046,
142946454,
141647667,
147225366,
145632591,
145632594,
145632687,
145632701,
145632702,
141582309,
145640779,
145640782,
143702971,
146131457,
145209284,
142981021,
147148264,
139181716,
142460642,
141971557,
138764775,
140223951,
142847075,
142847076,
145609308,
146105206,
145373779,
141152113,
145607295,
145607298,
147796304,
147796307,
143031143,
148145918,
141506926,
142960541,
142226310,
148017779,
145607323,
139488645,
141215285,
139672530,
146762981,
142825032,
147474382,
144150092,
141581353,
146876428,
145103688,
145103689,
144560870,
145327667,
142508727,
144205056,
145632348,
146339179,
146012746,
147881379,
145632375,
145632382,
142423442,
138844076,
141531372,
140105941,
145632398,
143463672,
145106064,
138897322,
145459454,
147000577,
139006565,
146092606,
145632419,
145632423,
145632426,
139150466,
145459455,
145459459,
143856725,
143856731,
145288287,
144211283,
144294770,
145187557,
146092616,
145632445,
145632450,
145632453,
146606899,
146631663,
145538944,
145632457,
145632472,
140611719,
138520315,
147145563,
145632485,
145632486,
146242705,
145144708,
140320574,
139895531,
141492885,
145385542,
139738768,
145632510,
145632513,
144627732,
139137168,
144654461,
141740892,
144116893,
145636904,
145631280,
145631281,
148015138,
144638271,
138822030,
144576000,
143128740,
142321263,
141231473,
147830940,
146022779,
145842826,
145640678,
145640679,
138879508,
145816279,
145937208,
139939578,
146352634,
141742372,
141742373,
145632739,
140393895,
143467658,
147114159,
142124078,
143419757,
146756826,
145618936,
145618950,
142010429,
145610878,
145616152,
145616153,
146463802,
145638769,
145638789,
144875182,
147037996,
142556767,
145610895,
145612780,
145616187,
144574488,
147772773,
145638799,
146490112,
140812223,
145610924,
145610925,
145612806,
145616203,
147259690,
147088538,
142820125,
146712563,
146712566,
145638822,
143239088,
146736665,
145616223,
140375624,
142335648,
143364450,
145610958,
145616254,
145616255,
147072768,
142211026,
145620690,
145620691,
146248537,
138801648,
138801649,
145635397,
145635414,
145635415,
141911468,
143156552,
147822816,
145611358,
139222326,
145643556,
145643571,
145643572,
145620724,
145635420,
145635435,
138892145,
145611367,
145611370,
142171726,
145643578,
142228710,
147105918,
145635454,
147021054,
145617724,
145617738,
145617739,
143724353,
140064158,
145643617,
145643619,
145620751,
145635472,
145635475,
141242298,
146505542,
140871791,
145611410,
145615099,
145617741,
145617758,
143950432,
145620780,
145620781,
146802828,
145635498,
145611431,
145615114,
145615120,
145615121,
145617781,
147028715,
146208959,
143265559,
138977632,
141366923,
145620805,
145620807,
140459081,
139874557,
145643667,
140280223,
146060127,
145615160,
145617812,
148200399,
148245006,
145635574,
139157004,
147121270,
145609782,
145920867,
145617899,
145617901,
145617914,
145695482,
139728611,
145808597,
145618165,
146783818,
146783819,
145631198,
145631208,
145631213,
146034556,
146072614,
145643921,
138856754,
140710164,
140062086,
147139180,
141481375,
147626864,
146987736,
147365857,
145637190,
145637191,
145637210,
145640544,
145640547,
144353546,
146106277,
145637293,
145637296,
145640627,
145632576,
145632577,
145612209,
141198820,
139040475,
142769688,
142841010,
139508273,
145640843,
145640844,
145640858,
144017054,
138917301,
145777351,
141427509,
145616286,
145616297,
145619066,
145619083,
142585430,
146994558,
142576209,
146163497,
146163498,
138951999,
143502432,
138632799,
145620224,
145620227,
146773134,
145619129,
145619132,
145005131,
145939406,
145620240,
145653242,
140411493,
145616362,
145619142,
145619149,
145619152,
143508470,
144074456,
145616380,
145619158,
145619172,
145619175,
145620290,
145620295,
139267562,
142598106,
142598110,
140775387,
145488907,
145632522,
145632542,
148042826,
146788365,
145221324,
143731605,
145635604,
141012746,
140836863,
145635644,
145635645,
145749406,
145635667,
141151009,
145060373,
145607292,
145607307,
144452561,
142924213,
147817103,
145607320,
143127505,
143169478,
147520465,
147406291,
142113773,
138995710,
145523124,
140834517,
145103691,
140142703,
142508739,
146508341,
140483544,
146189910,
143202756,
145632351,
145860866,
141986341,
145690050,
143410077,
143837655,
145632386,
145888218,
143361241,
138833478,
147124118,
147216729,
147216736,
145632408,
145717894,
144663145,
144663152,
145288272,
147994801,
143398306,
145632433,
139390712,
143172228,
145396237,
145787046,
145632458,
145632461,
141160107,
143392590,
142582643,
145632490,
141648350,
140240936,
139895534,
145632507,
144370532,
147015975,
141975169,
147011128,
145637087,
145637098,
145631269,
147887158,
141751197,
146897573,
141385393,
145306981,
139740877,
141209486,
141209490,
139961152,
148187456,
147830933,
142493819,
145640659,
145640665,
141600368,
145141314,
147179779,
139086675,
145905216,
145767863,
145632725,
145632727,
145632746,
140393901,
145632838,
146363084,
139452094,
142009163,
146531872,
142546862,
145377641,
145618928,
145618939,
145618946,
145975341,
145612749,
145612756,
145616156,
145616163,
148106206,
146234444,
147016982,
145610898,
145610899,
145610908,
145612781,
145612784,
145616175,
145616176,
145616180,
147088532,
147088537,
142820118,
145638796,
145638803,
139441745,
139063985,
145610921,
145612793,
145638813,
145638818,
143144090,
145610955,
145612817,
145612831,
145616231,
145638848,
145638853,
145745064,
144880210,
142290943,
145610965,
145612840,
145616251,
145616260,
148173319,
143475718,
145407258,
144188096,
145616272,
145619048,
144459894,
145643547,
145643552,
145620681,
145620696,
145635410,
142913357,
143632274,
139068306,
143156556,
145611347,
145611356,
146989865,
145643558,
145643560,
145620704,
145620713,
146248554,
146469050,
143123581,
145635424,
145635441,
141740164,
145611374,
145611383,
145617709,
147663198,
142183145,
145643597,
145620736,
145620743,
145174484,
145635460,
146070213,
145611392,
145611401,
145615073,
145615083,
145617726,
145617735,
144685530,
141879693,
143313496,
145643606,
145643616,
146583010,
145620762,
145620769,
145181344,
143120222,
145635468,
145437327,
145611407,
145611428,
145615093,
145617746,
145617751,
145617755,
145643630,
145620775,
145620790,
145635499,
145635502,
147685201,
145615110,
145615115,
145617777,
145617778,
145617783,
145867057,
145643647,
141366926,
144613061,
145620793,
145620800,
147989734,
143560567,
145635520,
145635531,
144416318,
145045612,
139636142,
148096182,
145615138,
145617797,
145617806,
143984329,
138701661,
145643668,
145643687,
145620823,
148018470,
147720958,
145635535,
145617818,
145617823,
145192606,
145643694,
145643708,
147778139,
144363763,
144855176,
145635563,
140942104,
139069879,
145609795,
145615256,
145615261,
145617919,
147173304,
145695485,
143480332,
140063113,
145776364,
144728187,
139622343,
147163543,
145618168,
145631204,
145631217,
141340944,
143457493,
144360564,
139235179,
142826003,
145643915,
141066346,
138855055,
140570647,
146322336,
145615444,
145615453,
145507426,
145612078,
146512716,
147976902,
140465685,
145637188,
145640537,
144905682,
145637292,
145640632,
144564315,
145632572,
145612208,
145612218,
145612227,
145612229,
140317362,
143440665,
139526321,
143417772,
145632749,
145887223,
141004743,
139335085,
147854593,
145616302,
143254596,
142181920,
146994551,
145620193,
145620204,
144864993,
141108185,
144924095,
145616310,
145616329,
145619102,
139807635,
145112432,
138632803,
139560358,
144328998,
144361345,
143096808,
145620215,
147769681,
146163505,
139471905,
145616337,
145619120,
144628891,
146757781,
145616356,
145616358,
145616363,
145616367,
145619154,
147116055,
145620260,
145619163,
144973202,
147102640,
141240422,
140727146,
138502983,
139913658,
145632526,
144520587,
145635594,
141923158,
147974663,
145019457,
142244668,
141146409,
145635607,
145635618,
145844272,
144064457,
139478416,
142244688,
145635639,
140145056,
147122053,
145635661,
145635670,
140661904,
146369210,
143788260,
145976441,
146304692,
146158723,
145081122,
144887171,
147866200,
143792779,
142953159,
144598803,
147121324,
142276455,
145615358,
139874672,
139097710,
145636922,
145636929,
145821831,
141611655,
146051001,
145440284,
146245476,
145637126,
145640475,
145640482,
140970720,
146413000,
143235018,
139165378,
139704205,
140772537,
141835918,
145640900,
143038090,
142088181,
144452553,
141660305,
144618814,
145607301,
140001269,
145552526,
141617640,
143833061,
148203600,
145607316,
144946560,
143660273,
140590448,
147892017,
139511005,
147539412,
145256945,
141858134,
145327658,
145327675,
146204579,
144361629,
140120954,
143603073,
141460767,
143510170,
147339177,
141972934,
147951079,
143239870,
138581066,
145632373,
146339204,
139006542,
140368248,
143410082,
145632406,
144406390,
146400429,
142645118,
142645129,
145542505,
143703976,
145632416,
145632429,
148234046,
138842337,
143817408,
145632437,
147398067,
139207666,
143398314,
142004228,
143836835,
145632470,
140286275,
143825736,
145304485,
142582639,
148157790,
147759399,
145632494,
138805453,
143621608,
146636892,
145632503,
145632520,
147154150,
147156278,
144775672,
143027970,
145553428,
140859189,
145636909,
145636912,
143768792,
139843594,
147616004,
146787718,
145637091,
145631265,
139294303,
148149007,
142270945,
143665116,
145397986,
139086600,
139778765,
147957894,
138655665,
145640661,
145640670,
140433548,
142391566,
141185399,
147569001,
141587564,
139162527,
145632731,
145632742,
147218278,
145663514,
142687148,
140556429,
145618943,
143439852,
145610867,
145610870,
145610887,
145612752,
145612764,
145638775,
142881285,
145612772,
145612789,
145616188,
145616193,
145638792,
145638807,
145638811,
145610912,
145610916,
145610933,
145612812,
145616198,
145616213,
145638814,
145638831,
140848704,
145168667,
145610935,
145610936,
145610951,
145612821,
145612832,
145616227,
143364459,
138656524,
145638849,
147293191,
146178833,
141248565,
145610961,
145610978,
145612836,
145612848,
145612853,
145616247,
147978565,
141731811,
147166432,
145616263,
145616264,
145619045,
145619052,
143630097,
145643548,
140105761,
148200242,
145620700,
146248540,
143705566,
145635408,
146101012,
140783152,
145620717,
145635428,
145635437,
140783158,
145611363,
145611378,
145617713,
145643593,
144492990,
145635456,
147021068,
145611397,
145615079,
145617730,
140573543,
148218192,
141981670,
145643612,
145620758,
143120226,
145635480,
145437338,
139062706,
146430557,
145611419,
145615089,
145617750,
146031433,
144156698,
147101925,
145643626,
145643641,
140148289,
139591334,
145620771,
146985160,
145635495,
145635506,
141920338,
145615128,
145617766,
145617770,
145643646,
145620797,
145620812,
145635516,
146878322,
143750787,
139977897,
145615134,
145615151,
138718878,
145617788,
145617801,
139874558,
145643672,
145643683,
145620828,
138427932,
145635547,
145615155,
145615170,
145617822,
145643690,
145643704,
143337224,
139506400,
145635567,
144898085,
145609791,
145617906,
139872738,
144471231,
145652194,
146063904,
147172374,
146783813,
145631200,
145643911,
145643928,
141332076,
143704363,
138855056,
146199583,
141616658,
145290741,
145612029,
145612031,
145612048,
145615449,
145615456,
145612082,
145615490,
147626867,
145637206,
145640533,
140107942,
147778603,
145637283,
145640621,
145640636,
138571212,
145632568,
145632583,
145612214,
145059708,
145070481,
138968548,
145179709,
140747973,
144637026,
145563917,
145632760,
141227332,
144247147,
141160539,
145640850,
144313090,
144540214,
143542137,
145896844,
147854596,
145616291,
145616294,
145616306,
145619067,
144132636,
147657409,
144426985,
146219148,
142229752,
142188548,
145896857,
147415740,
141240326,
139310957,
145616314,
145616325,
145619098,
141950236,
144914844,
144180200,
145620219,
139471901,
145616333,
145616348,
145619124,
145620233,
145620244,
147120819,
145037001,
145522195,
139062392,
144274616,
145616352,
145616371,
145762811,
145620272,
145616389,
145619167,
145620281,
141778351,
139346872,
144348666,
145632521,
145632530,
147538142,
142290405,
146583812,
145470567,
140937904,
140679387,
147130626,
145377400,
145635581,
145635585,
145635598,
142013060,
145635611,
145635614,
141740686,
141651827,
140947959,
147138681,
141994301,
142848306,
144641951,
145635626,
145635631,
145635635,
145749403,
139733314,
147122044,
142418518,
145635657,
145749416,
146369206,
145746806,
145880274,
145635673,
145635688,
147154298,
146369212,
142074209,
146556537,
145622038,
142429030,
147638833,
142276451,
145615366,
145618011,
145618028,
145618054,
145618070,
145618074,
145636933,
146245489,
145637138,
145637143,
147173468,
145612175,
145640687,
145640692,
142299823,
145755097,
142544737,
142780760,
146613932,
145632389,
145632404,
140290851,
147841400,
144663147,
145632414,
145632431,
148234044,
142196782,
145632439,
139033191,
142883749,
145632455,
145632464,
144016365,
147994868,
147759401,
145632479,
145632483,
145632496,
143027943,
140320567,
145782775,
145632505,
145632518,
146259241,
145636914,
138668263,
146787716,
143089562,
145637078,
145637093,
146647132,
146276727,
148149001,
142472927,
148143857,
147199950,
145817193,
147303932,
142908152,
140982311,
147198112,
147804660,
146713490,
145640663,
145640672,
138879500,
141602359,
138819970,
139939579,
141411249,
147021948,
147021952,
145023264,
148099275,
141425906,
144085950,
146228252,
141214656,
147701031,
145618945,
148192272,
145757249,
142214108,
145177375,
143439854,
139151369,
144290109,
145610868,
145610885,
145612766,
145616158,
147928928,
145638782,
143254937,
145610893,
145610910,
145612778,
145612787,
145616178,
145616195,
142172860,
147625832,
145638809,
139146626,
147157529,
146331260,
148014141,
145612799,
145616211,
140468309,
138647121,
145638829,
140848702,
145610942,
145612819,
145616233,
145624398,
139663248,
138656526,
145638836,
145638851,
138830562,
145731303,
145610963,
145612851,
145616245,
145616262,
145616278,
145619054,
145412381,
145643537,
145643550,
148200244,
145620680,
145620683,
145620698,
145635406,
140941955,
141228357,
141456089,
145611350,
142075716,
139222335,
141479250,
145643562,
145620715,
143123575,
145635422,
145635439,
145611380,
145617716,
144679926,
145263970,
147109820,
145643587,
147097329,
145800364,
145635443,
145635458,
145725722,
145611399,
145615075,
145617718,
145617732,
138897177,
145709065,
145643601,
145620756,
144787401,
145635467,
145635478,
146505553,
145611417,
145615087,
147191793,
143084716,
145867034,
145643623,
145643640,
145643643,
144036204,
145620773,
145620788,
146875450,
145635510,
146402104,
144512121,
145617772,
145617785,
147028716,
145643657,
141366932,
145620798,
145635522,
145635529,
144790648,
145615144,
138718880,
145617791,
145643674,
145643681,
145620826,
145635534,
145615153,
145615168,
145617820,
141696774,
138848542,
145643702,
145635573,
147477609,
144898087,
144623939,
145609789,
145615259,
145617904,
145617909,
141144829,
147103968,
145618166,
145631206,
139035522,
140803101,
145643913,
145643922,
145643926,
138854977,
138865272,
140317063,
145615447,
145615458,
145612076,
145612095,
145615492,
145637204,
145640539,
144905680,
147502159,
145637281,
145637298,
145640619,
145640634,
143300187,
141123700,
145632585,
142537935,
145612216,
143316463,
139683170,
143110723,
139040474,
142060938,
142248550,
146376145,
139116348,
145632755,
145632758,
140780156,
144126393,
143166833,
145640837,
145640852,
144901344,
141550661,
148169597,
140821150,
145616285,
145616289,
145616304,
145619069,
145896855,
147114232,
147415732,
145620191,
145620208,
145616327,
145619100,
145619104,
144693676,
145923206,
144033406,
148053456,
145620221,
145332014,
142426886,
138594220,
145616347,
145619112,
145619126,
144033413,
144057854,
145620242,
143920229,
142245975,
141212002,
145522197,
142137828,
145616369,
145619135,
145738619,
146448521,
144837351,
145620270,
145719037,
145859590,
139193868,
139062399,
141262463,
145616387,
145619165,
145619169,
145620287,
145620298,
147736895,
141227951,
144348664,
143953225,
145767499,
145632524,
143505058,
147137966,
144313979,
139218908,
139478382,
146555891,
145635583,
145635600,
145635609,
146223806,
146445300,
146445313,
147189793,
146284398,
145635633,
145635637,
145749401,
141521823,
140179025,
144871548,
145635659,
147823072,
145746804,
141186896,
138428073,
145635675,
145635686,
145635690,
142303248,
139029347,
148129968,
148155151,
145067750,
139061523,
145786006,
144598801,
143181793,
140873434,
145615356,
145618026,
138431759,
145618068,
145636935,
144092195,
145640480,
145903407,
140272756,
147160660,
141541935,
145532967,
147998825,
141018771,
140439392,
145230658,
145612170,
145467182,
143771762,
140265706,
147066391,
145640682,
145640689,
145640690,
146039471,
140773483,
143806288,
141546809,
141570212,
146222720,
141984249,
147218869,
145631585,
145631598,
145612623,
142459341,
138457008,
147041800,
147041804,
145644572,
148266842,
143664184,
145631604,
145631617,
144769175,
141926700,
145612639,
145612654,
145616047,
141960646,
145959538,
138643252,
145631625,
145631640,
145612660,
145612673,
145616078,
143203964,
142664230,
138969946,
144822418,
146136865,
144736385,
145632365,
147220119,
146400419,
146592540,
141466306,
147749682,
147216735,
139139652,
145632400,
145632407,
145106062,
138529639,
148166050,
143212539,
147240669,
140023954,
141536624,
138657345,
144916699,
145538940,
145062668,
139907025,
145632443,
141266529,
138833542,
142361554,
145632459,
145632460,
141217783,
142582649,
145632484,
145632491,
145144716,
144588380,
142708732,
145632501,
138956822,
145931669,
145636907,
145636918,
145995294,
145958504,
146018465,
146787707,
140579027,
145637097,
145631270,
143230970,
140143500,
141385395,
139778768,
147065385,
145929264,
145640681,
141853429,
141600380,
144569312,
142973995,
142973996,
144650569,
146352633,
145632729,
145632744,
145632839,
142124090,
142810467,
147384900,
140480107,
144513148,
145044694,
145618933,
145757236,
145610872,
145612757,
145616157,
145616162,
147126244,
145638770,
145638773,
145638777,
142561896,
145610897,
145610900,
145610906,
145612782,
145612783,
145616190,
145638797,
145638802,
145610926,
145612803,
145616206,
142335627,
147140925,
146015710,
145638824,
145168664,
145610953,
145612823,
145612830,
145616218,
145616229,
140375622,
144029688,
138999106,
138830566,
144880209,
148049353,
144247446,
145610959,
145612846,
145616252,
142967032,
140106832,
143133228,
142842715,
145619065,
141982662,
144294514,
145643541,
145643546,
145643553,
140839873,
141407467,
145635402,
145635409,
144656789,
147858649,
145611345,
145611346,
146989864,
145643559,
147444432,
145620719,
146248552,
145635426,
142607978,
140861918,
145611362,
145617710,
147663199,
140249219,
145643580,
145643598,
145620726,
140183442,
141234445,
145611386,
145611395,
145617736,
145617737,
139723026,
146710002,
145709069,
142528404,
145643615,
145620763,
145620768,
140487528,
145635469,
148097952,
145611426,
145615104,
145617745,
145617756,
145393685,
147982384,
142499724,
147092768,
145643624,
145643629,
139261982,
145635491,
145635500,
145635501,
146402101,
141920341,
145611432,
145615109,
145615116,
145615126,
145617776,
145617779,
145643648,
145643653,
145620810,
143435790,
143560566,
145635518,
145635533,
145045611,
145615139,
145615149,
140222011,
145620820,
145635545,
145615157,
145617824,
145617829,
138681742,
145643693,
143337232,
147720964,
139506394,
145635562,
147121272,
145609794,
145615255,
145615262,
145617900,
145617918,
139872743,
146138783,
143941759,
146931585,
142411285,
139747392,
147163542,
140002263,
145631202,
140193851,
147156457,
144360565,
145643930,
143140998,
145972538,
148205265,
139694287,
145615442,
145615443,
145615463,
145612080,
145640527,
145640535,
148189819,
145637285,
145637291,
145640622,
138571214,
141202854,
139484623,
143547728,
145612210,
145612217,
145612228,
143863775,
146647783,
142060934,
144342984,
147358076,
145632762,
142690121,
142122617,
143166829,
140816027,
146298262,
146298263,
140903426,
145640845,
139335083,
139335084,
139479472,
141701666,
145038746,
142910492,
145616292,
145619082,
144426982,
144391656,
139248830,
146940870,
145616312,
145616323,
145619096,
140575170,
147101377,
145620230,
145332010,
147923615,
142426893,
145616330,
145616336,
145616350,
145619114,
145619119,
145833134,
138627277,
141360973,
145620246,
145037009,
138596354,
145616357,
145616364,
145620259,
145620273,
139025984,
142064818,
145619173,
144422343,
139361578,
139236188,
145620278,
138881543,
140566686,
145749842,
138481247,
138502989,
143755254,
145632528,
141382298,
142989980,
144131506,
139541453,
144683880,
144813584,
140679388,
139478395,
140881244,
145019458,
146736199,
145635608,
145635617,
143165112,
140525217,
144641954,
145635629,
142131724,
142131725,
145088330,
147910566,
146691079,
138521044,
145635649,
145635651,
142915231,
147247550,
143074314,
145740569,
145067746,
141389331,
146369216,
139478485,
141664231,
143827566,
147049693,
142828539,
142276454,
145811028,
145615353,
145615364,
145618013,
145636939,
146284681,
145839552,
145637136,
145637141,
145640469,
146412997,
144357743,
140272752,
140382948,
142727559,
140284728,
144543852,
145612173,
145311893,
146754064,
142705103,
146838293,
146039467,
145903283,
139626397,
147814772,
139108502,
147608423,
146980258,
148201044,
146697715,
145631581,
146078822,
145612610,
145612619,
141593999,
140458200,
145644556,
145644557,
143304128,
146206890,
145631600,
140586515,
145632372,
145067474,
145888219,
144913260,
140368247,
145632390,
145632403,
147912863,
144663146,
139759988,
147010714,
145542504,
148208850,
143590832,
140023956,
145538938,
140158683,
145632432,
145632438,
140491244,
147398066,
147773622,
142573034,
143910707,
145341037,
145632482,
145632495,
138430230,
145144720,
143101315,
145632504,
145632519,
141470701,
144961511,
141802003,
145636898,
145636911,
147942161,
146541248,
143089563,
145637088,
145637094,
145631264,
147160641,
138468519,
139167294,
141920933,
140143499,
144488345,
142357808,
139272891,
142727546,
146201256,
144525339,
141018765,
142321257,
145640662,
145640669,
145816272,
144048049,
141600365,
145632726,
145632745,
146828020,
147218277,
142687149,
145618929,
145618942,
145757239,
147723386,
146673882,
145610869,
145610884,
145612750,
145612753,
145612767,
145616159,
139654679,
147127003,
145638768,
145638776,
147775597,
145610894,
145610909,
145612771,
145612777,
145616177,
139218082,
145638806,
145638808,
142881293,
148040832,
145610915,
145612794,
145612796,
145616212,
142643454,
139976690,
138647115,
138647120,
138647130,
145932434,
145638828,
144722377,
140848703,
141803062,
146676080,
145610952,
145612818,
145612820,
145616226,
145616232,
147868179,
147868181,
141759434,
145638850,
143243115,
143141793,
141248560,
145610962,
145610964,
145612850,
145616246,
146714715,
141731810,
140965014,
146159520,
145616269,
145616271,
145616277,
145619044,
145619051,
145619053,
140644571,
147090723,
145643551,
145620684,
145620697,
145635407,
143156559,
145611351,
145611357,
146989866,
145643561,
145620718,
145635438,
145611364,
145617714,
145617715,
145108978,
145643594,
145620737,
145620740,
145635457,
145635463,
145611400,
145615074,
145615078,
146205350,
145643603,
145620757,
145635481,
147021072,
146505535,
146430558,
145611422,
145615088,
145615090,
145617749,
140261430,
143236678,
147092758,
147092771,
145643625,
145643642,
139591337,
145620787,
146985159,
145635505,
145635509,
140188087,
145611429,
145617784,
145643662,
145620794,
138543467,
139126034,
145635517,
145635523,
145635528,
144512137,
145615135,
145615145,
145615150,
145617787,
145617802,
145617807,
140459074,
143984328,
147118212,
145643680,
145620824,
145620825,
145635549,
145615154,
145615171,
145617821,
143724454,
144114595,
139353611,
138681739,
145643691,
145643703,
145643705,
143337223,
145635568,
145609788,
145615260,
145047067,
142436206,
146931589,
145686347,
145652193,
138713544,
142185398,
143378048,
146063905,
139979393,
141195049,
145631203,
145643912,
143141002,
144637914,
142491689,
145290742,
145612041,
145612047,
145615455,
145612079,
145612092,
145615489,
145872645,
145637205,
147778604,
145640620,
141202858,
143547719,
145612215,
141879969,
147169107,
145070482,
144637038,
145563918,
145632761,
147321845,
139028167,
145640849,
138476645,
145896843,
145896845,
145068749,
145616307,
145619070,
141003122,
147951796,
146904892,
145620194,
145620205,
139248824,
145351638,
145616309,
145616326,
145619097,
145619103,
138478479,
139970988,
144944652,
145620218,
142007941,
145616332,
145616346,
145619121,
145620245,
145323095,
148209797,
142245976,
145719023,
147923630,
139062391,
145619136,
145619138,
142838412,
145620256,
145620269,
145616390,
144973203,
141375290,
145620282,
145620288,
145436521,
138572065,
147058025,
142789639,
147930975,
139346871,
138936368,
145632525,
142614284,
146211672,
144392687,
145377399,
145635582,
145635601,
142067015,
144131513,
146264533,
140700178,
140467290,
139978524,
145635610,
145635613,
141115862,
144163836,
140914570,
143433228,
142215558,
145635632,
145749413,
139184952,
142809741,
146214870,
141050651,
145635656,
145635658,
143046885,
142281396,
145635689,
145635691,
144350788,
145622046,
145067751,
145383741,
142429028,
146439420,
140934407,
142276448,
140690895,
145615354,
145615367,
145618029,
145143003,
145636934,
146681990,
145637137,
145640478,
141825993,
146569880,
138527792,
148214385,
145204947,
143706083,
147998824,
143327003,
140439393,
145612176,
143505930,
145640688,
145640693,
145640695,
147134265,
141069376,
143702961,
148214625,
145903285,
143635620,
141358513,
145942736,
142589091,
147218870,
147218872,
147839214,
145631582,
145612622,
140247107,
145149069,
148076502,
145644571,
144737234,
145631618,
148043670,
145612636,
145612638,
148196614,
140133057,
147432498,
145365120,
139205287,
145183576,
147152973,
141830635,
140483539,
140955356,
143202761,
143203967,
144072566,
145632347,
145632355,
145632362,
142928070,
141128662,
138730126,
140347593,
141302202,
143986359,
144822409,
141159982,
142286144,
145671848,
145632381,
142141709,
145774083,
145632397,
140980587,
142393802,
147744043,
143703984,
145632421,
142142964,
147679454,
144916696,
145632444,
145632452,
140186108,
141266524,
141536637,
146754981,
145632474,
143910710,
138621604,
144401546,
145896015,
146242704,
145049608,
147163342,
139074434,
144348659,
145632511,
145632512,
144649038,
145484277,
144627731,
143905030,
140558462,
141176761,
145636901,
140973722,
147353148,
146787711,
139999341,
145637083,
145631275,
145631282,
142472936,
139070849,
144776200,
146897569,
148143851,
142656594,
143739429,
143648422,
142321262,
145640660,
144840704,
146731420,
147731191,
144018764,
146522086,
145632736,
145632737,
142460705,
138750191,
146756824,
145618934,
145757229,
143436832,
147996770,
145610879,
144096615,
142646595,
145638790,
147037994,
144013665,
145610911,
148148006,
148148009,
144243756,
147127042,
144722367,
145612804,
139495726,
140249116,
138647123,
145638823,
143144094,
146971630,
145610944,
145616222,
145616235,
147176946,
144028012,
144585366,
145638841,
145638844,
141036743,
145610969,
145612845,
145616256,
146714721,
147117371,
145616284,
145619061,
138681588,
145977799,
145620685,
145620689,
145620692,
145635399,
143015583,
145611359,
145643569,
145620708,
144701382,
145635419,
145635429,
145635436,
145611372,
140221902,
142959574,
145643585,
140560210,
145635448,
145635455,
145079095,
139371207,
146367585,
145611388,
145611389,
145611406,
141018179,
145709074,
140064157,
145643610,
145620750,
147792470,
144080005,
146505540,
146505543,
140871793,
145611411,
145615097,
145615098,
145615107,
145617762,
143724374,
139553283,
143236669,
143950430,
143640972,
143084721,
145990477,
141546142,
145643634,
145620779,
145620786,
145906307,
139064685,
145615119,
145617765,
147028714,
143654005,
145867052,
139988386,
145620804,
147358550,
144860723,
142719874,
145635524,
140521036,
145615130,
145615142,
145617793,
147743567,
146205413,
140636497,
147720957,
145635539,
145635544,
145635556,
145615162,
145617814,
145635575,
145609776,
145609783,
145615248,
145617915,
147173300,
144659889,
145906632,
145631207,
138762409,
145643920,
146322331,
140989407,
140523497,
145612036,
145612085,
145612086,
145612090,
145637198,
145640528,
145640541,
145640545,
145640546,
140107931,
145640629,
147786998,
145632579,
144012596,
142248558,
148188302,
144836789,
143314247,
146376155,
145632753,
145632768,
142030825,
146318948,
144189631,
139508274,
145640842,
142818262,
140377147,
144426978,
146333821,
139479465,
145777349,
148125417,
147537478,
141716645,
145616299,
145619075,
145619084,
142282454,
138504447,
148053451,
145620197,
145620200,
139122260,
139310960,
147237484,
145572486,
145616319,
145619106,
145619111,
147177039,
141950229,
141529839,
144944657,
144491183,
145005126,
145620212,
145620229,
144773075,
145619131,
144730505,
145620241,
145620252,
148209795,
146668535,
142604310,
145719029,
145616374,
145619141,
145619150,
141698899,
140254132,
139361576,
144105516,
145818075,
145616378,
145616381,
145619159,
145619174,
142478320,
143173360,
145620292,
140966952,
138481252,
139346880,
138767060,
145632531,
145632538,
142614278,
148042827,
148042828,
142765247,
145635592,
140700179,
146640118,
142489554,
147292326,
142013047,
147976107,
145635603,
141004005,
140530553,
145880236,
145635643,
145635646,
145709247,
144024181,
140902609,
145635665,
145635666,
143788256,
145635680,
145635683,
138997805,
138997808,
148103577,
142558930,
144598800,
143686682,
147170215,
147638824,
147638828,
145615362,
145618018,
145618019,
145618062,
140580276,
145636926,
145636940,
140852176,
146245480,
145637130,
145637131,
145640471,
148065211,
144651198,
144734834,
142727552,
138436272,
141591070,
140505568,
145612168,
145612183,
147168186,
145640700,
145640703,
143702968,
143685694,
146415996,
147098430,
145170225,
148088363,
142690885,
138503364,
144228649,
145151113,
148269088,
138537639,
141358510,
139754860,
147669655,
144857039,
145631591,
145631592,
142609839,
143624482,
145612616,
145616035,
142849627,
140138577,
142451866,
145644560,
145644563,
145644566,
143812174,
145631609,
145631615,
145616042,
145523119,
144044704,
140056939,
139198403,
143705030,
141460770,
145402437,
143397525,
145329115,
145632346,
145632354,
145221323,
144727316,
143239873,
145690049,
145632374,
145632383,
147058798,
146400413,
147620060,
144288958,
145632388,
145632405,
141637451,
144663148,
139759990,
141848402,
139864711,
147679441,
145459449,
142686330,
142004176,
139931330,
145632411,
145632413,
138953233,
138842343,
140251227,
143498080,
145632436,
142299345,
142573032,
145632465,
145632471,
147154123,
144016359,
141557855,
141892820,
145632480,
145632493,
146884356,
146242715,
139738773,
145632502,
139128796,
140558465,
142804118,
147345705,
145636913,
140330730,
139999336,
146301125,
145631266,
145631283,
144520924,
147180184,
141704096,
145817192,
140434423,
140265701,
148205542,
142837526,
145640664,
145640671,
138879497,
145816287,
147694714,
147136456,
145905215,
147569000,
139296572,
145632728,
145632747,
146200410,
145632837,
146363083,
139452093,
142339761,
148085319,
148269911,
145044698,
144478578,
145618944,
145618947,
147723373,
144290108,
145610871,
145612746,
145612748,
145612768,
145616161,
142881286,
142556758,
139063978,
145610907,
145612788,
145616179,
145616194,
145952920,
145638793,
142040996,
148040834,
145610917,
145610922,
145610932,
145612798,
145616197,
145616199,
145616210,
145638815,
145638817,
145638830,
143141776,
145610937,
145612816,
145612833,
141759437,
144585365,
145638852,
143693550,
146178834,
145610957,
145612837,
145616248,
145616257,
141271418,
148195399,
141360856,
141380506,
140965008,
143916191,
145619046,
147627670,
144459882,
147815928,
140362355,
145643534,
145643549,
145620682,
145620699,
143632271,
144656785,
140028587,
139977805,
145611353,
139222334,
145643576,
145620716,
145635421,
145635427,
145611379,
145617717,
139081348,
144679923,
145643592,
145620739,
140519515,
145079098,
146070216,
145611402,
145615076,
145615080,
145617731,
147399109,
145643602,
145643611,
145620747,
145620759,
145635483,
145617752,
146031432,
147982388,
139418578,
143514424,
147092759,
147092773,
145643627,
145620772,
145620789,
145635488,
145635496,
145615127,
145615129,
145617767,
145617773,
147028717,
143265551,
146129311,
145643658,
145643660,
145620796,
145620799,
145620813,
146526947,
145635521,
145635530,
145617804,
143080105,
147112750,
145643671,
145643673,
145643682,
145620827,
145635536,
142414659,
141821499,
144503316,
145615169,
145617808,
145617817,
145617819,
146035421,
139938755,
145635566,
139509591,
147477606,
144898088,
145609790,
145615258,
145617907,
143729813,
147163546,
145618167,
145631205,
143457496,
145643910,
145643916,
145643923,
145643929,
142833973,
143306036,
147361460,
143295931,
147697418,
145615448,
145615454,
145615457,
145612077,
145612094,
145615491,
138959238,
145637207,
145640536,
147778602,
147491947,
145637284,
145640618,
145640635,
142391125,
145632567,
145632584,
145632586,
145612213,
142398122,
139040473,
139174240,
140236067,
145997268,
142248549,
144806651,
142355539,
146125552,
142362366,
145487723,
147119810,
148064368,
145640851,
139335079,
144313089,
145616288,
145616305,
147657410,
138518123,
140837403,
145620192,
145620207,
139248826,
146940864,
145616311,
145616324,
147255894,
147114246,
145620220,
145332021,
145616331,
145619123,
143660578,
145224497,
145616353,
145616368,
145616370,
145619155,
146965649,
142402104,
142850846,
139361573,
145620271,
145616388,
145619164,
144973205,
141633263,
141778352,
143890282,
143890288,
146898270,
138936370,
145632523,
145632529,
142614286,
142290410,
140931643,
145412565,
145635584,
145635599,
145715582,
145715588,
139773102,
144823848,
145635612,
147214760,
141155736,
145019469,
144641948,
145635636,
141151005,
143264035,
146304677,
141781848,
142526290,
139365844,
144770204,
147442852,
139265560,
145635672,
147481959,
142074210,
139029354,
139429048,
145938382,
145615355,
145615369,
145618010,
145618067,
145618073,
140833327,
139684530,
145636921,
145636932,
146284686,
145440290,
139843655,
142528850,
145637124,
145637139,
145640468,
145640479,
144266833,
139009614,
140772536,
144525337,
141591077,
141857208,
144840715,
138993983,
145941896,
141804180,
144040898,
142177374,
142177375,
147356463,
147814765,
142844214,
145631584,
141813412,
145612624,
145612626,
140092197,
145644573,
145631601,
142638454,
145612651,
145612653,
145616050,
140092226,
147320763,
145644599,
144044698,
147271217,
144785485,
138838425,
140142700,
147123231,
146637813,
143554067,
145183573,
144325364,
144072562,
144977426,
144288953,
148211896,
144553658,
145632370,
145632377,
147912858,
145106057,
144914456,
145690062,
147216739,
139139644,
145632401,
143463674,
139422778,
140496041,
145632415,
145632417,
145632428,
145632430,
148234049,
138657339,
146875612,
147733322,
145632440,
145632448,
141266528,
142964288,
145632467,
145341043,
141819653,
145632497,
139430664,
140558469,
140615321,
141217881,
141176759,
145636906,
145636908,
145636917,
141810765,
146541245,
146647129,
145650239,
142688557,
147618276,
147450992,
146582884,
145842824,
147804656,
145640675,
138583578,
139551870,
148253901,
145905210,
146352630,
143559504,
145632732,
145632743,
141118169,
142535721,
142427962,
143084199,
147277641,
148085317,
143925739,
147162067,
141935339,
145618927,
145618932,
142378101,
138803816,
145255787,
142561891,
145610875,
145610882,
145616170,
148008911,
145638781,
145316006,
145610903,
145612790,
145616191,
145616192,
144574485,
139218087,
140388452,
148040838,
146331254,
145610928,
145610934,
145612791,
145612802,
145612811,
145616196,
145616207,
145616214,
138991219,
145638827,
145638834,
140848701,
148014149,
145610941,
145616219,
145624393,
142644533,
142648616,
147140950,
145638839,
144875256,
142549010,
139377449,
145612849,
145616244,
145616261,
142371260,
147137779,
143830916,
147607719,
144628792,
145619064,
144459878,
145643538,
146248541,
146248544,
145635401,
147997252,
145611340,
141655535,
147831923,
140828934,
145643567,
145643574,
145620720,
145635425,
145611365,
144312218,
142294511,
142171727,
140964005,
144838013,
145643588,
145611398,
145615072,
145617722,
145617729,
144559315,
140261417,
145709064,
145643621,
145620755,
145635479,
145635484,
145079103,
145611414,
145615103,
145617740,
145483149,
144431953,
143640976,
145643639,
145386938,
146583025,
145620774,
145635490,
145615118,
145615123,
145615125,
145617771,
147028713,
143640984,
145643645,
145643656,
145643663,
145620809,
145620811,
145083132,
138718876,
145617792,
145474133,
145643675,
145643677,
144855158,
145635548,
144388074,
145615156,
145615165,
145635570,
145635579,
145609786,
145617903,
145617905,
145617910,
145047065,
146022442,
141890753,
145631201,
145631210,
145631211,
147491673,
145643927,
141332072,
138779843,
147561174,
145612032,
145615441,
145615450,
145615461,
145612081,
145615486,
145637203,
145640532,
140638608,
145637278,
145637279,
145637288,
145637297,
145640623,
138571213,
145632566,
145632574,
145612211,
145070478,
139174242,
142248551,
140927023,
145632754,
142030814,
146108495,
139508277,
145857080,
144842807,
146630522,
145640846,
145640855,
148082821,
140821149,
145616290,
145619079,
144426988,
146994554,
145620190,
143730712,
140512399,
145616315,
145616320,
145620222,
145620231,
145171837,
139471894,
147923614,
142426883,
145616349,
145619127,
144730502,
145620237,
145620238,
140411482,
145616372,
145619146,
145620255,
145620276,
142882898,
141262462,
145616384,
145619168,
145619170,
145619179,
147657510,
142186446,
143663982,
139236187,
146996254,
145620277,
145620293,
141778345,
142598113,
138572071,
142334578,
145632527,
145632540,
142116771,
145715584,
139189710,
141158079,
146640124,
139478410,
144330621,
138655161,
145731540,
142013059,
147913572,
142131721,
146979758,
140835457,
140914561,
145088320,
146304675,
146289271,
141734711,
147264468,
143536272,
147147125,
138521047,
141186903,
144192745,
145635674,
144423216,
147087640,
145622043,
146725106,
147866195,
146877073,
140249476,
143792772,
142116887,
145938370,
147122114,
144193571,
145615365,
145618014,
145618023,
138431758,
145618063,
145636936,
145645639,
145277661,
145406290,
145637135,
145637142,
145640470,
142727551,
144525335,
138591962,
146841694,
145612169,
139642412,
139517222,
141181423,
140773486,
145903291,
142780755,
144040902,
146613918,
147237890,
146161474,
145216027,
141630100,
139162574,
141912363,
147104541,
145631580,
142609835,
145612613,
145612620,
147270133,
147041818,
145644558,
143812175,
143304122,
143905892,
145631603,
145631606,
146059220,
148002876,
145612647,
145612649,
145616054,
148171870,
145644580,
145644582,
145631623,
142419864,
145612664,
145616075,
145616084,
147431096,
145362810,
140412094,
140498467,
147452226,
148075134,
139226980,
147632870,
143531066,
145632387,
145632402,
147220156,
143463666,
147994793,
145632418,
145632427,
146177679,
146092612,
147733320,
145632441,
145632449,
145874279,
145632469,
145632475,
145341044,
145273897,
139004482,
146879546,
145632489,
146794849,
138914924,
141737790,
139430670,
144030555,
141364462,
139738769,
145632499,
145632506,
145632517,
138953336,
146259237,
145636905,
139967185,
143089565,
145631276,
147160645,
139532925,
145397992,
147303936,
142933794,
142055227,
145531364,
138623368,
145842825,
147065387,
142493822,
145640676,
138879493,
142620022,
145141315,
139939574,
143559505,
145632738,
142684600,
147277628,
139993893,
145550119,
144513144,
145618949,
142010425,
142378109,
145610874,
148008912,
139968556,
145610889,
145616184,
144574484,
139218088,
142820121,
145638791,
145638795,
147791803,
145610913,
145610920,
145610927,
145612810,
145616201,
145616215,
146130229,
145638826,
147113422,
143141772,
145885831,
140844977,
143033330,
142371251,
142648617,
144585363,
145638840,
145745063,
140834879,
144880211,
144976681,
145610977,
145616259,
139847970,
145407255,
145977796,
145620686,
145620695,
146248536,
146248549,
145635411,
145635418,
147186404,
145611339,
145611341,
145611361,
142572326,
139222342,
142683650,
140828933,
145643575,
145620702,
146977568,
145611366,
145611371,
145545128,
143491541,
143639112,
139201639,
145643596,
138832617,
145635447,
141916889,
145617720,
145617721,
145617727,
145617734,
147956359,
144559307,
138504997,
138848451,
145643622,
145635471,
145635485,
148097957,
145615102,
145617754,
143236661,
143236671,
140342205,
142110198,
138977622,
143514420,
145990473,
147092761,
145643631,
145620776,
145620785,
148262199,
145635494,
142046694,
141931796,
145615117,
145615124,
145617769,
141643537,
141595039,
140583298,
138977629,
141379006,
145643664,
145620801,
145620808,
145183322,
145635525,
140521039,
139545879,
145083140,
145615137,
145617800,
139201711,
145643669,
145643676,
145643686,
145635540,
143427385,
145615164,
145615173,
145617815,
145617826,
139589085,
141779252,
143337233,
145635577,
145635578,
145609781,
145617913,
142586152,
145376955,
146679242,
142269695,
145618171,
145631209,
145631212,
140940614,
141441003,
146098571,
145643914,
145643925,
147473221,
147139184,
148205274,
143295929,
147697414,
145615452,
145615462,
145615487,
145640540,
145754225,
139712394,
147502166,
145637287,
145637289,
144564314,
145632571,
145632573,
145632580,
145632582,
147897748,
145612212,
147731203,
144012599,
139040478,
142043493,
139038035,
141216344,
140927024,
138822217,
140776403,
145738126,
147927748,
147927757,
141474834,
147118604,
139508278,
146634440,
145640840,
145640847,
142962795,
147175991,
145870494,
140787088,
140821147,
141427508,
146798870,
145616298,
145619080,
145110420,
146219145,
142181908,
145620189,
139122257,
139122262,
141143247,
145616321,
145616328,
145619089,
147255900,
147002926,
145620223,
145620228,
147769682,
142917909,
145619133,
142786925,
144361349,
145620236,
145620239,
147151620,
139144650,
139062393,
142571851,
145616355,
145616366,
145619153,
141368153,
147135226,
145620275,
139062395,
145616383,
139805554,
145619157,
145619162,
145619171,
145619176,
143877617,
139236186,
145620291,
145620294,
144105518,
147590706,
139907117,
139604892,
145632539,
143505071,
148042833,
146583808,
139766013,
145635595,
147149892,
144882939,
141146410,
141012742,
139039206,
141882494,
145635640,
143046875,
140902611,
139255893,
146304681,
145635671,
140661903,
139820256,
143597008,
146369211,
140064533,
147122067,
141513801,
147170077,
146312119,
142303243,
145427582,
144421427,
144350790,
148103575,
146824746,
147973903,
145938378,
147258671,
144193573,
148156772,
145854470,
145244800,
145615357,
138790622,
145143002,
145618064,
145618071,
145636923,
145636928,
145636937,
141022531,
141242767,
144062175,
146831536,
145640481,
143235017,
139417003,
139626895,
147135362,
139254679,
139363264,
146039474,
139031880,
145034992,
141804182,
142780763,
146515667,
140687672,
138519493,
142177385,
142740237,
142851484,
146566434,
147814763,
147218865,
144285026,
145741268,
140738163,
145612628,
146062405,
145644559,
145644568,
145644577,
146283069,
145631611,
144939814,
148002875,
145612648,
145616062,
148073808,
148204332,
145644581,
145644588,
145644595,
145631622,
145631636,
139639725,
145076327,
147696151,
140900986,
147926948,
144699912,
145288276,
142196775,
145632442,
142883757,
142361553,
143392577,
143438994,
138621616,
144016361,
147398082,
140449837,
147759398,
145632478,
147182634,
146242703,
140766370,
139604883,
145632500,
147638850,
142853969,
140326736,
139058596,
139778268,
145636910,
145636915,
146541250,
143768791,
146018471,
139999345,
145637077,
145637082,
145637092,
140260803,
142472933,
146384719,
138617714,
140139252,
145640673,
141379963,
144881446,
145632730,
145632741,
144494794,
147218275,
146363085,
145661337,
148085324,
143026780,
138810688,
147643296,
145610873,
145610880,
145612763,
145612765,
145616172,
139654675,
147928929,
148008913,
145638772,
145638778,
145638779,
142525397,
141630707,
148040829,
142561895,
145610892,
145610905,
145612769,
145612775,
145616189,
145638812,
145316010,
147837658,
147454622,
145610930,
145612800,
145612809,
145616209,
145616216,
147259701,
145638825,
145638832,
139003602,
142416112,
142416115,
145610939,
145610948,
145610954,
145612815,
145612822,
145616228,
147140961,
138838412,
145638837,
145638857,
138999114,
139751010,
146272403,
147157561,
142290938,
141263584,
145610960,
145610974,
145612847,
145612852,
145612854,
145616242,
147114185,
140106836,
142211033,
145616267,
145616275,
145616281,
145619055,
145619057,
141982653,
138681591,
145643536,
140839874,
147001393,
145620701,
145635403,
145635405,
146175658,
141456086,
138892142,
147822807,
143656034,
139222339,
145643565,
145977814,
145620722,
147103800,
138427832,
145635440,
145643581,
145643590,
142193355,
147105915,
142387585,
145635444,
145635459,
145635464,
141234444,
145611396,
145611403,
144077273,
144559312,
141981669,
140535185,
145620753,
145635466,
145635477,
145635486,
140188081,
142621483,
141580368,
145611412,
145611418,
145615105,
148252894,
144271227,
141981685,
145990484,
145643637,
145643644,
139591341,
143403164,
145620791,
139138847,
145635492,
148096173,
145611435,
145615108,
139418582,
139591347,
148121951,
145635513,
145635519,
145635532,
148096189,
145615141,
145615147,
145615148,
145617790,
143984324,
146583082,
145635546,
145635551,
145635553,
143427384,
141821505,
139369316,
145615152,
145615158,
145615167,
145617809,
145643689,
145643701,
145635572,
144623942,
145609779,
145609784,
145615243,
145615245,
145617898,
145617908,
138783580,
142120024,
145631199,
143140997,
146199582,
141616653,
143295943,
143783943,
140415357,
145612030,
145612037,
145612043,
145615459,
145612083,
139809804,
142344417,
145872649,
145637194,
145637199,
145637201,
145640534,
145637286,
145637299,
145640616,
145640625,
139484624,
144967980,
145241202,
140927025,
140927036,
144637034,
145632748,
145632756,
145632759,
145632765,
145258128,
145640853,
142511212,
141837965,
147829093,
139847978,
139697130,
143003993,
145616295,
145619068,
145619074,
145619081,
146219146,
147981621,
148053450,
145896858,
146303385,
145351633,
145616313,
145616322,
145619093,
145619099,
146200917,
144491192,
145332004,
145616342,
145616344,
145616351,
145619125,
141695976,
144926501,
144057853,
145620243,
145620249,
148209788,
139471910,
145719019,
138594234,
145619148,
141698900,
141698902,
142797601,
145738616,
143707131,
146448520,
145620265,
145620274,
139267554,
139624738,
145616386,
140691024,
141240420,
145620286,
142602408,
147237560,
146773183,
142334580,
147930960,
147930962,
147673807,
147220113,
140320613,
142501806,
145635587,
145715593,
139189708,
145384895,
145635623,
145635625,
145438878,
140835548,
140947955,
146192422,
145908427,
145635628,
145635634,
144666446,
145635652,
145635654,
147247539,
143516219,
147753706,
144786321,
147147123,
145635687,
147149989,
146369213,
146369215,
147481968,
138758018,
145985517,
145067747,
146068286,
147763675,
144315725,
145244785,
145615363,
145615372,
145618025,
145618058,
145618059,
145636938,
146284680,
146245492,
145637133,
146412995,
147125447,
148214389,
142322146,
142727549,
143865300,
147998828,
145612165,
145612171,
145612174,
145612180,
145057106,
145640691,
142694511,
141903835,
148086892,
141060218,
146613916,
146643223,
147218868,
141912365,
141057958,
144482806,
145612611,
145612618,
140247113,
138488529,
142849623,
147041809,
141179801,
145185317,
145631608,
145612642,
145616040,
145616043,
145616052,
146761380,
146852561,
144020986,
140567584,
145644584,
147358921,
145631626,
145631628,
147164473,
146374425,
145612657,
145612662,
145612676,
138767051,
145632508,
145632515,
146055818,
145484274,
147173353,
141121464,
145636900,
146541249,
147949117,
139208021,
145637079,
145631278,
145631279,
148149003,
148266072,
144935333,
143163458,
140725246,
146695229,
141155675,
140514018,
147303930,
140982314,
145640668,
145640674,
142462509,
138726535,
146363077,
140609936,
142014943,
140011639,
146756822,
143664619,
142310932,
140780359,
145618940,
141335850,
144849467,
139008525,
145616171,
146463800,
146130173,
145638780,
145638787,
145610891,
145612776,
145616183,
139654687,
142331732,
147137727,
145731272,
145610929,
145612808,
145616217,
142643448,
139337632,
144473040,
145610940,
145616236,
145616239,
139830789,
144170351,
145280748,
145638838,
145638845,
145638856,
147563861,
139250794,
145610973,
145612839,
145612857,
145616243,
145616253,
147117353,
140623928,
143228647,
145616268,
145616280,
145643533,
145643539,
147470684,
145620693,
145635396,
146869772,
138978580,
147593574,
145620705,
145635432,
145635433,
142046635,
145611368,
145611375,
145611382,
145643589,
145620735,
144492981,
139032997,
145635451,
145635452,
141842298,
141234443,
145611393,
145483138,
139426856,
146031424,
145643620,
145620754,
148245801,
143120225,
145635465,
145635476,
145635487,
147506975,
145611415,
145615094,
145615101,
145643638,
139988385,
139072243,
145620782,
145620783,
146802827,
145142688,
145867049,
139850214,
145643655,
145620803,
145635527,
143427378,
144512134,
145615146,
145617786,
142314553,
148231467,
145643684,
143197870,
145620815,
145635538,
145635552,
143427390,
146060129,
145615166,
145617810,
142249949,
143642838,
145643709,
148244994,
145635571,
142701488,
146839437,
145609787,
145609797,
145920872,
145617911,
147173296,
147311691,
146978872,
139747390,
145618169,
141890754,
144360563,
145643919,
147473219,
145334843,
142833970,
147668659,
143070144,
146582070,
147133708,
145612040,
145612044,
145615460,
145612075,
145612089,
145637202,
145637209,
145640542,
143111190,
145637280,
145640617,
145640631,
145632569,
145632587,
142540052,
143316465,
142248541,
142248545,
147442171,
147358083,
147854037,
145632757,
145632767,
143459735,
141497315,
145640854,
145640856,
146578502,
146798873,
141008805,
145616287,
145616301,
145619071,
145619088,
142585429,
140405536,
146994546,
146994557,
145620196,
144848158,
141716648,
143610890,
145619107,
145619110,
144944653,
145620216,
145332016,
145171836,
145616341,
145616345,
145619128,
145619130,
142802421,
139560368,
145005140,
144819780,
147116033,
139062388,
138594230,
145619145,
145619151,
145738613,
147692358,
146448519,
139001795,
145620268,
143117610,
142598102,
145818085,
145616385,
145619160,
145619178,
147272265,
142478326,
139697236,
145620285,
145620296,
138801072,
145436527,
139346877,
145767497,
146809129,
145632534,
145632535,
140931640,
147969077,
145635588,
145635597,
145635602,
145221327,
141595128,
144047421,
139555527,
145635622,
141373911,
144163831,
140535341,
144641947,
145635642,
145635647,
147624868,
145635662,
145635669,
145749420,
145088332,
144423207,
147753703,
140684990,
145635677,
145635679,
145635684,
138814609,
144598788,
144350780,
146824744,
142223291,
145615359,
145618009,
145618015,
145618022,
145618066,
146630440,
141988762,
145636925,
145636930,
146245484,
138589789,
143944464,
145637122,
145637127,
144651202,
147039198,
142468353,
142919111,
145612172,
145612182,
147168187,
145640684,
145640699,
143702964,
143588654,
146515680,
148088362,
148082269,
138700633,
142759182,
138537635,
145191861,
146881492,
139626940,
140046913,
147218862,
147218867,
142542347,
148058874,
142546850,
141912360,
145631588,
145631595,
146078829,
145612612,
145616039,
148207925,
140153563,
145644570,
145644575,
143304119,
144737233,
145631605,
145631614,
139293234,
143450772,
145616046,
145616060,
142394624,
138932826,
138643259,
145644586,
145644597,
145941061,
145631631,
145631638,
143209002,
145612663,
145616071,
141960667,
147519082,
138745904,
145885020,
146003895,
146003897,
141787658,
141532301,
143498965,
146938029,
142013958,
142801870,
142913480,
143030121,
145615188,
145617851,
147310710,
146911243,
139596565,
144088240,
140605428,
138772812,
139906457,
143603640,
141839078,
147702243,
145764368,
138674185,
148267500,
146158520,
146158531,
141781680,
143907615,
140296767,
148232304,
139831261,
142402617,
141174786,
143331214,
145632292,
139943527,
145632468,
140384505,
141273494,
141557854,
144502398,
145632492,
146242708,
148146969,
141648352,
144030556,
145632509,
145632514,
146055824,
138901496,
144678362,
143796372,
141100064,
141318607,
145636899,
141810770,
145637089,
145631267,
145631277,
145631284,
146659038,
144447286,
146897575,
147525152,
147140119,
145985639,
147294343,
145306974,
147053279,
140311885,
140982315,
144441185,
138623374,
147451036,
140139257,
142493825,
145640667,
138879501,
141149913,
146591583,
144569319,
146088837,
144039049,
148058242,
145632840,
146363078,
146764660,
147118661,
145618941,
145618948,
145612747,
145612754,
145616154,
145616165,
148079292,
146463798,
147969711,
145932382,
145638788,
139125491,
145612774,
145616182,
148172339,
146712556,
145638794,
145638805,
145610919,
145616200,
142335619,
145638816,
142844645,
143113913,
146691871,
147801443,
142416102,
145610938,
145612813,
145612829,
145612834,
145616237,
145616238,
144042526,
139663241,
145638846,
145638855,
143693545,
142723841,
143171443,
145610967,
145610976,
145612835,
145612838,
145616249,
145616258,
141731813,
141380510,
147328424,
144788015,
143044379,
145616266,
145616274,
145619050,
144459885,
145643554,
145977806,
145620687,
145620694,
145535436,
138801652,
145635412,
145635417,
142607969,
138696250,
146430487,
139068304,
145611354,
144685487,
145620706,
145620711,
143123579,
145635434,
140861919,
146310854,
145611376,
145611381,
145617711,
138821310,
143853257,
145418945,
145643591,
145643595,
145645375,
145620734,
145620741,
146875395,
145635453,
145635462,
145079097,
146070211,
145611394,
145615077,
145615081,
145617728,
146031425,
148094864,
145643600,
145643604,
145643614,
139105625,
145620760,
141348847,
145635470,
145635482,
145611421,
145615091,
145615100,
145617748,
145643628,
144036200,
145620777,
145620784,
140122831,
145635493,
145635508,
140204947,
145617768,
146208963,
145643661,
145620795,
145620802,
138543475,
138783462,
145635511,
145635526,
145615132,
145617803,
146295404,
145643670,
145643685,
139898884,
145620814,
145620821,
146579163,
147720960,
145635537,
145615172,
145617816,
138701670,
145643692,
145643696,
145643706,
139593536,
147778137,
144855170,
143337225,
145635565,
145635569,
142124417,
146839438,
140690771,
145609793,
145609796,
145615254,
145695483,
140063111,
144825966,
146766851,
142417404,
142598967,
145631196,
145631215,
139972094,
148023975,
139697840,
145643917,
145643918,
143546513,
143935035,
139993467,
145612046,
145615451,
145507430,
145612088,
145615488,
145615493,
142848961,
146967725,
145640543,
145640548,
139252324,
145637290,
145640630,
145632570,
145632581,
145612220,
145612225,
143316467,
148224736,
141670783,
139526323,
140789818,
145632766,
141227334,
144549372,
140606263,
141624045,
145640839,
145640848,
145640857,
141620384,
145121096,
138476642,
141370867,
142335679,
139277949,
145616300,
145619086,
145619087,
144397903,
145620195,
145620206,
145351635,
145619108,
145619109,
141950238,
144491193,
147255893,
147255901,
143663925,
139198300,
145620217,
139687341,
138600808,
145616335,
144924670,
145005141,
144361348,
144175283,
145620232,
145620254,
141883436,
145332026,
143464461,
144656525,
147923627,
145616354,
145616365,
145619139,
145619156,
145738623,
145620258,
138600841,
139805555,
145619161,
143264846,
145620283,
141778353,
143890287,
138502981,
141777474,
145632536,
147220108,
147948900,
139540166,
142880475,
145635596,
142660177,
142013049,
145019463,
145020714,
145635605,
145635616,
142116358,
145635641,
145635648,
146640159,
142115783,
138521037,
145635663,
145635668,
143788254,
142433283,
147442851,
146289288,
142526300,
145635678,
145635685,
143682338,
144887172,
147049695,
145376805,
143165206,
145427587,
142701532,
145229017,
145615360,
145618016,
145618021,
145618030,
145618072,
146630425,
145636924,
145636931,
140852181,
146245487,
145637128,
145640477,
141228711,
145178271,
139704220,
144380343,
145910664,
140396964,
145612181,
148133392,
145640685,
145640694,
145640698,
145755095,
145175102,
143268667,
147433037,
142283333,
143423657,
146903180,
146116950,
141060326,
148201036,
146973730,
147171362,
145631589,
145631594,
145612627,
145616033,
143791700,
147141845,
145644569,
145644576,
145631599,
145631613,
145612635,
145616059,
146618552,
142394623,
144021002,
144308193,
143791718,
145644587,
145644596,
145365115,
145365125,
145631639,
145612164,
140749750,
145640683,
145640696,
146838292,
143009348,
145170227,
146515666,
139341737,
142740243,
142484582,
141983414,
142227521,
140997309,
147218875,
147159078,
146791822,
144870497,
145631583,
145631596,
143228384,
141924866,
139066994,
145612629,
146210424,
140153564,
145644567,
145644574,
145631619,
145612633,
145616061,
142394633,
145959536,
148073809,
148204333,
145644578,
145644589,
145644594,
141179809,
145941057,
145631637,
145612671,
145616068,
144623042,
143593850,
148181153,
139538952,
139226975,
147248725,
145516129,
138873438,
146003923,
138875055,
145907334,
146146617,
141457043,
145615178,
145615191,
145617837,
145617844,
138518795,
145923851,
143123911,
142512107,
139277039,
141954631,
144026790,
140922123,
148179927,
144053680,
143177688,
141849491,
143422825,
146229496,
145632274,
145189865,
144176567,
145632295,
139297831,
145169535,
139325830,
146113002,
139227970,
145632306,
145632319,
145042801,
139700978,
139244298,
140191870,
146690962,
145632335,
145632340,
139509736,
142736441,
139790715,
141538470,
145631621,
145631624,
145631641,
145612659,
145612674,
145616064,
145616067,
145616081,
145491368,
138433203,
145457468,
144221974,
141367552,
140731104,
143759448,
144221980,
142496304,
142045745,
145855625,
142423427,
146213723,
145615174,
145615177,
145615192,
145615194,
141858851,
146561574,
144006325,
146211501,
143567869,
140698771,
147856225,
140296705,
138955346,
147036861,
146257624,
140922125,
145169497,
146780258,
146229490,
140912055,
146003588,
139268562,
142175157,
141552149,
147995729,
145632288,
142936984,
144724880,
145262406,
144234951,
146085099,
146085102,
145632307,
145632309,
145632314,
142664182,
143317702,
141184615,
145632330,
144390060,
148019592,
142320264,
145362811,
146263823,
142333563,
144221975,
143666241,
143023793,
141416221,
148171925,
146850492,
146146611,
147658352,
141654875,
142423428,
145615176,
145615193,
145617843,
139695686,
142512110,
145434077,
140128948,
145847978,
139906455,
146468508,
148179925,
147589878,
139268555,
146550810,
139860103,
146158522,
141781685,
139268561,
145632269,
143224731,
142138531,
145764388,
141552148,
145632289,
143912884,
146252004,
142671651,
144840075,
148173807,
145632312,
147034799,
142664181,
138480151,
145042792,
139227976,
139700976,
146286141,
143550490,
145632329,
146683367,
145037784,
148019582,
138873445,
148213014,
140045389,
138635379,
144458617,
148151110,
145434080,
144117556,
143503289,
138982314,
146204228,
143175545,
147709851,
146257629,
142263982,
145558868,
146571248,
139268556,
146147671,
145696889,
145984375,
142357088,
143846436,
145632268,
139175246,
141719502,
140482336,
142175167,
146085090,
140154409,
146390053,
141174787,
145632277,
145632286,
146080095,
148043806,
140413246,
144236750,
146085104,
143842674,
146681933,
139293733,
145656804,
145527168,
139247639,
147636750,
145632324,
145860838,
143681663,
139776622,
140353737,
139478369,
146579382,
147102029,
140623425,
139709131,
138798858,
140512214,
147661420,
144222005,
145083188,
145732725,
145617845,
145986826,
142512099,
142512106,
144617260,
139277041,
139509601,
147921434,
143673497,
146257628,
145113128,
143241546,
145512378,
139860100,
143075354,
146229499,
143322615,
141781682,
145632271,
141959655,
145483329,
144891662,
141174788,
142375089,
143331212,
141781690,
145632276,
145632287,
145632294,
146080080,
142671654,
142299201,
145632298,
141610522,
146681932,
140506923,
138717289,
148055447,
141794619,
145860854,
138446158,
144054301,
142890090,
143534172,
146579389,
145620279,
145620289,
142847667,
146041092,
147058033,
147493729,
147590710,
139604891,
145632541,
147957540,
146788366,
139773109,
140881247,
141146418,
143572566,
145635620,
146445308,
140580917,
143165116,
140914562,
142848297,
145908418,
141595187,
143948969,
147622636,
140089698,
146837161,
147214795,
143788245,
144363871,
141389328,
139058854,
141595237,
138758016,
139029356,
143827570,
145020800,
147214851,
145938374,
139893917,
145969978,
147638831,
142171946,
145618055,
143415570,
143387744,
145772933,
140272762,
145290747,
139704212,
141057448,
144525329,
143351019,
139302029,
141129460,
141129467,
139240866,
146102350,
145755104,
139252474,
145184885,
145941907,
140400107,
143549244,
142891793,
138535656,
139254857,
148003943,
147218863,
144741315,
142010080,
146697716,
145028837,
146078826,
144795727,
145612615,
140092192,
146852555,
145644561,
145631612,
146682654,
144417262,
145612646,
146852564,
145644579,
145877163,
145365124,
147358924,
145612666,
142944782,
144669357,
141589432,
141140578,
139005502,
138798864,
147027942,
145615183,
145615184,
145617834,
147030925,
144092951,
146603594,
138982317,
140154349,
140622506,
146571242,
146167940,
145988468,
146229487,
147589885,
146866295,
144460999,
146571253,
140912047,
139247582,
146158524,
145687448,
144891659,
141174791,
145731424,
147765955,
145632278,
145632281,
145632296,
145178713,
139666541,
141152645,
145632304,
144234957,
145017049,
146698637,
145632320,
145632321,
139790717,
144673276,
139331023,
138645899,
141628416,
142959889,
142484586,
141546807,
146881486,
143240724,
147218871,
145631579,
144662335,
145612625,
143905893,
145631602,
146059219,
145260160,
143450776,
145612637,
145612652,
145616049,
148268776,
142917108,
145644585,
145644598,
143894455,
147358927,
145631627,
145631642,
145087333,
145612658,
145612675,
145616065,
145616080,
145616083,
145268259,
138433202,
141795732,
145047637,
142376104,
147632871,
138875049,
144669360,
140939320,
141416223,
140045383,
146850494,
145401523,
140133125,
146146613,
144995579,
145615195,
145617841,
146911246,
141858852,
141858857,
143670729,
140697555,
146904510,
145986832,
144589557,
138955345,
146257625,
142263979,
138772826,
144495507,
144874065,
148023160,
146951767,
145696886,
147346427,
145931269,
139268563,
145632267,
146550831,
142503151,
147205136,
145632291,
146080083,
139596670,
146085103,
146286116,
143339920,
139932458,
145632310,
145632315,
145169560,
141925765,
140691209,
139194671,
141661931,
145632331,
141009806,
138969934,
142665273,
139343151,
141179814,
147358928,
145631643,
148043682,
145616079,
142510322,
145362812,
142333560,
139424014,
139226984,
145798394,
146146612,
146146614,
140209492,
144995580,
147960572,
139064753,
145615175,
145617840,
145617847,
143620398,
140572948,
146904495,
144092958,
145986828,
142966163,
143118389,
140749968,
145434076,
139976200,
139509596,
144543295,
141628254,
145113124,
142263978,
145558872,
145192871,
144872245,
143760347,
145632270,
143019760,
141507939,
139815443,
146112981,
146085092,
146229522,
145181896,
145632290,
145262404,
146134864,
146286119,
138794284,
144765910,
145632316,
146506467,
143534166,
145632328,
145841759,
141985785,
142890106,
146286167,
146579378,
145616077,
145616082,
140945094,
142320261,
144021024,
140567593,
145000352,
140130553,
140968589,
146194124,
140498469,
146263817,
141532264,
147835984,
142376105,
142013956,
141405526,
140256529,
148075162,
147142480,
145516120,
140045394,
143640048,
143461261,
138733635,
139984547,
142966167,
144566838,
145434082,
143670768,
140154347,
147838461,
139149586,
144264909,
145134370,
147589881,
145841662,
147529299,
146951763,
145984370,
146158528,
145687458,
143756600,
144978246,
142138521,
139179861,
146158537,
145632284,
143666488,
139193493,
145632311,
141925763,
141925772,
142624706,
142945908,
139325864,
143534168,
147573477,
147573484,
145632326,
145095791,
146612719,
139675170,
139478364,
146490528,
145744362,
146080087,
143019784,
144028689,
142402631,
145632318,
142945916,
143317701,
143670883,
146698632,
145632332,
145998316,
139389676,
138969941,
142665277,
142204376,
148019578,
145612643,
145616051,
142641304,
145644583,
145877159,
147358920,
140443024,
143612107,
145616074,
142687824,
140130560,
139361102,
141023295,
142570873,
145362807,
148183108,
147955503,
143498953,
138669124,
142484065,
140125251,
140850735,
147428425,
140256531,
147653630,
145125225,
141883215,
138555492,
142307869,
141942071,
145401530,
145615179,
145617836,
138518794,
146129383,
145518903,
146756126,
139765143,
148263676,
145376154,
146603599,
141603474,
141954632,
143943857,
140622505,
142263985,
146167944,
147589882,
141580518,
146942650,
146446955,
145764373,
143555768,
145632273,
143019750,
144392945,
147807762,
140167606,
147995732,
144978254,
143952088,
139666545,
147875832,
148134612,
145632300,
143912899,
148232336,
145095765,
145042796,
143298925,
146698634,
145632325,
139790720,
139428344,
144079367,
146978717,
145134498,
141538469,
141661938,
143534174,
146579373,
140723521,
140525272,
141151008,
146154643,
146289292,
145635681,
143682341,
147481965,
140315371,
140242146,
143074347,
138814614,
144157592,
139029345,
139933683,
139742106,
141186913,
141905478,
141033180,
141424342,
142276456,
145615374,
145618017,
145618056,
145618061,
145111144,
145004022,
145440280,
145440281,
146245478,
143764088,
145575680,
145637129,
145637132,
145640472,
145640473,
142744503,
145156169,
147340244,
140272746,
144651199,
147039193,
146380359,
147357629,
147520290,
142734730,
143725327,
141835922,
145612167,
145612178,
142082520,
145640701,
144840706,
146515677,
139882629,
147814774,
141335358,
144265942,
146115340,
141595980,
142542342,
144870508,
145631590,
145631593,
145612614,
145616037,
145616038,
140478096,
141741835,
145631616,
144405176,
145612644,
145616045,
143879815,
143879830,
145959540,
139219751,
142401967,
145365112,
147358926,
145631630,
145612665,
145616070,
145616073,
141502633,
143593855,
147926943,
143531031,
143531046,
140731096,
140686519,
145798389,
146938032,
142376111,
142013959,
147157274,
146146607,
148016261,
143640050,
145615182,
145615185,
145615186,
145617830,
145617835,
147030924,
147307867,
147310711,
144434117,
146678232,
142966165,
139726152,
142929348,
147979144,
143846400,
144264905,
147709857,
145890023,
140954469,
147589887,
141849493,
145161414,
146112977,
140358652,
146571251,
146998284,
147001633,
142843505,
144315539,
141174789,
142600723,
145632280,
145632297,
141801741,
142495663,
142495664,
146211602,
141790101,
141152643,
145632299,
145632302,
139790707,
140620238,
139700971,
146286139,
147743093,
145632323,
145632337,
145632338,
139974569,
145860842,
143681669,
141538471,
138645897,
144832326,
148019589,
145616056,
145616057,
144697004,
140567581,
145268247,
145644590,
145644593,
143304137,
147358925,
145631633,
145631634,
145612667,
145616072,
147181620,
147955500,
147955501,
141532260,
142655446,
146850487,
139557697,
145907335,
148183159,
146146620,
144284222,
145615187,
145617833,
145617848,
147030935,
146990025,
145986820,
146616121,
139765145,
140739107,
138982316,
141756300,
147580673,
140922117,
143602558,
145558865,
146229488,
146866294,
143011864,
145841663,
144136994,
144396523,
146229500,
143437722,
143061942,
142092083,
144690422,
141174790,
139745460,
145632282,
146080091,
144028692,
142486630,
147354807,
145632301,
141249392,
144502231,
142516517,
145632322,
145632336,
145632339,
146225835,
147017921,
144144284,
143357400,
144913957,
145797099,
143957048,
138541925,
143536276,
144786315,
146304688,
139935257,
145635682,
141389329,
142074204,
146979809,
144350793,
146289300,
144423235,
143792776,
139889418,
145615361,
145618065,
145618075,
145197544,
145636920,
145636941,
145839547,
146432208,
146831533,
140977535,
147860996,
142322148,
142322149,
140403368,
146914294,
139254692,
145640702,
144961981,
144961982,
142976071,
141185391,
146210660,
142780759,
146613925,
144091500,
148082271,
145023303,
140718860,
139507190,
147218861,
147218864,
142609837,
140738166,
145612617,
145612631,
145612632,
145616034,
145644562,
145644564,
145644565,
143304123,
145631610,
146059216,
145612645,
145616041,
145616055,
145616058,
146852563,
140138585,
139907651,
145644591,
145644592,
145877158,
146206901,
145365122,
147358923,
145631632,
145631635,
145612668,
145616063,
145491373,
140144284,
143193452,
142993767,
145362804,
147162183,
147658306,
147128485,
139226976,
145411360,
142376112,
138555493,
138555494,
145855622,
142955794,
145617832,
145617849,
145617850,
145446326,
144617263,
143118398,
141587997,
143603615,
140079581,
139906463,
142820753,
143666420,
140622504,
146229489,
142357085,
142092080,
139175240,
140878437,
144891658,
141174785,
145731425,
145632279,
145632283,
147513364,
143952093,
142671658,
144705291,
147392796,
147001684,
145632303,
146895943,
141249393,
139331011,
146225837,
145860857,
145892296,
138969940,
143383087,
145632537,
143298973,
142880474,
145635580,
145635586,
145635593,
143209408,
142065601,
145384894,
145635606,
145635615,
145635624,
141829595,
139478426,
141162786,
145908426,
146725058,
145635627,
146860122,
143948970,
145275821,
139218964,
142809737,
145535862,
142526287,
145635653,
145635660,
147149977,
143788240,
144425198,
143482492,
143882835,
142281398,
148129949,
143682337,
147138759,
145938367,
146538370,
143988179,
147744886,
147564649,
144193570,
147638829,
145615371,
145618057,
145618060,
145540309,
147210223,
141988760,
147770493,
146844975,
146245486,
143256027,
145199745,
145637125,
145637134,
145640476,
142051736,
145217198,
140272745,
140479125,
142195559,
142734731,
139566059,
145612166,
145612179,
145640697,
139246603,
142544729,
142544748,
145903290,
142780764,
138519500,
142484590,
147091672,
143096677,
146881490,
144858761,
144858764,
139626975,
146903186,
144295550,
146791824,
145631577,
145631586,
145631597,
147041801,
145631607,
145631620,
138491215,
145612634,
145612641,
145616044,
143614774,
146852562,
140689961,
141380502,
147358922,
145631629,
145612655,
145612656,
145612661,
145612670,
145616069,
145616076,
142095020,
145268252,
147824990,
139361100,
145063508,
143250394,
139618099,
141443619,
138875052,
138798855,
143026970,
144213234,
147658317,
145411350,
140045386,
141527684,
145401535,
145615181,
145615190,
145617831,
145617838,
143236759,
146561577,
141369273,
142966168,
143422792,
141403355,
148263674,
140739105,
143567873,
148179906,
145986844,
143322564,
140296714,
140622509,
141849492,
144433937,
147189655,
143075359,
146158526,
139268558,
144978252,
145764393,
143679168,
144204988,
139325831,
145178717,
142495667,
142402619,
145632305,
139976322,
140469886,
143298927,
143317699,
145632327,
145632334,
145632341,
144807715,
145860847,
141661933,
147121956,
142066452,
145612669,
145616066,
139017193,
139025685,
147926944,
147926949,
148075139,
147142457,
140125250,
140413885,
146850488,
139538960,
143254395,
145401521,
145516131,
142913481,
145615180,
145615189,
145617839,
145617846,
145980418,
141858854,
144566835,
147580664,
147781169,
145376155,
138772811,
143241540,
143666421,
145443888,
148267499,
148232302,
139396391,
142175160,
146390062,
145632275,
145632293,
143952091,
138667067,
145632308,
145632317,
139484175,
145993330,
141249398,
139194673,
144234953,
146286132,
146690965,
145632333,
145632342,
139790713,
139428343,
147178905,
145797093,
148019586)</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1374</xloc>
      <yloc>364</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select client , min(maxdate) as maxdate from (

select client ,min(dinsertion) as maxdate from (
select  idReceiver  as client ,dinsertion ,product from Daily_transactions_extended
 join (select * from UN_SanctionsLog where source = 'CPMS') out
 on out.customer_id = idReceiver and dinsertion > dlog

where productId not in  (1,4060,4059,58) and Daily_transactions_extended.idReceiver in 
(select customer_id from UN_SanctionsLog where source = 'CPMS')

union 

select idSender as client  ,dinsertion ,product from Daily_transactions_extended

 join (select * from UN_SanctionsLog where source = 'CPMS') inn
 on inn.customer_id = idSender and dinsertion > dlog

where productId in (1,4060,4059,58) and Daily_transactions_extended.idSender in 
(select customer_id from UN_SanctionsLog where source = 'CPMS')
)d
group by client)un
group by client</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1312</xloc>
      <yloc>464</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>




select nid , status from Facturiers_Transactions 
 where year(dInsertion) = 2022 and month(dInsertion) = 11



</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1470</xloc>
      <yloc>596</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select nid ,nTransactionStatusId from transactions
where    year(dInsertion) = 2023 and month(dInsertion)  in (1,2,3)</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1787</xloc>
      <yloc>587</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from mtoCnssComplement
where nid > 757184</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1256</xloc>
      <yloc>1329</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from CityBkam</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1688</xloc>
      <yloc>384</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 3 3 3 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>	 select nid ,nTransactionStatusId
 from Transactions t

 where nProductId  in (58,4059,4060) and dinsertion    BETWEEN  '2024-03-01 00:01:03.567' and '2024-06-30 23:56:03.567' 



</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1782</xloc>
      <yloc>486</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 5</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from TAOHUB
where nid  > 621345</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1015</xloc>
      <yloc>282</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input 2 2 2 2 3 7</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from Transaction_Com</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>863</xloc>
      <yloc>312</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>



select ShopKeeper_name,shopkeeper_id,sum(commission) as commission from (

select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (
select mois ,agent,type_product ,realisation,objectif ,tro,
   case when  tro > 1 then 1
	    else tro
      end as pl_tro  from tro_sales_general_arch ar
  where id =5  and type_product not in ('change') )z
join shop s 
on s.sShopId = z.agent 
join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
      where month(dInsertion) = 12 and year(dinsertion) =2022  and ShopKeeper_name is not null  
	   and Product  not in  ('Achat','wu','Vente') and Product is not null
        group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
on c.sShopId = agent
where bFranchise = 0     
group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id 
having   avg(pl_tro) >='0.8' 

 )f

 group by ShopKeeper_name,shopkeeper_id
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>816</xloc>
      <yloc>704</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>
 select  month(dinsertion) as mois ,shopkeeper_id,shopkeeper_name,product,Type_product,sShopId,sum(volume) as volume,sum(nbr) as nbr from shopkeeper_realisations 

 where year(dinsertion) = 2022 and  month(dinsertion)= 12
group by  month(dinsertion)  ,shopkeeper_id,shopkeeper_name,product,Type_product,sShopId


 --select  shopkeeper_id,shopkeeper_name,product,Type_product,sShopId,sum(volume) as volume,sum(nbr)as nbr  from shopkeeper_realisations 

 --where year(dinsertion) = 2022 and  month(dinsertion)= 6
 --group by  shopkeeper_id,shopkeeper_name,product,Type_product,sShopId</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>734</xloc>
      <yloc>744</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select  m.id ,m.code_partner ,m.code_marchand ,m.amount ,m.created_date ,m.token ,commission  ,
 s.dInsertion ,ss.sShopId as code , co.sname as company  ,ss.sname as compte
from Marchand_Transaction m 
 left join Marchand_liste s 
on  m.code_marchand  = s.sCodeMarchand
join shop ss
on ss.nid =  s.nShopId
 join Company co 
 on ss.nCompanyId = co.nid
 where month(m.created_date) = 11 and year(m.created_date)= 2022</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>640</xloc>
      <yloc>768</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select type_product,superviseur,tro,case when tro BETWEEN 0.8 and 0.89 then 250
 when tro BETWEEN 0.9 and 0.99 then 300
  when tro >=1 then 350 else 0 end as commission

from (
select  superviseur ,o.type_product ,sum(obj_reseau) as budget,sum(r.nbr) as realisation ,sum(r.nbr)/sum(obj_reseau)as Tro  from objectif_sales_reseau_aff o
 
 left join (select sshopid, case when ProductType_id = 2 then 1  when ProductType_id = 12 then 22 else ProductType_id end as ProductType_id  ,sum(nbr)as nbr from shopkeeper_realisations
      where month(dinsertion) = 11 and year(dinsertion) = 2022
       group by sshopid, case when ProductType_id = 2 then 1  when ProductType_id = 12 then 22 else ProductType_id end
	   union 
	   
       select shop.sShopId,33 as ProductType_id ,count(*) as nbr from REPORTING_CARDS r
 
left join shop on shop.nid =  r.agency
where month(createddate) = 11 and year(createddate) = 2022
group by  shop.sShopId
	     )r
	
	   on r.sShopId = o.code and o.product_id  = r.ProductType_id
	   where superviseur = 'ESMAIL EL BERRAD '
group by  superviseur ,o.type_product


)f
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>
--select   shop.sShopId ,count(*) from Transactions
--left join shop 
--on Transactions.nShopId = shop.nid

--where year(dInsertion) = 2022 and month(dinsertion) = 2 and nProductId in (1,19) and nTransactionStatusId in (8,26)
--group by shop.sShopId



select Customer.sCIN ,Customer.sLastName,Customer.sFirstName , TransactionsComplements.json , t.nid,  Convert(date,t.dInsertion,103) as date ,p.sName as produit ,t.nTransactionStatusId ,t.nAmount,t.nOperationFee com ,t.nservicefee as Fsms,s.sName as status , sh.sShopId as code ,nAfterStatusId ,TransactionChanges.dInsertion from transactions t
join TransactionStatus s
on s.nId = t.nTransactionStatusId
join Product p on p.nid = t.nProductId
join shop sh on sh.nid = t.nShopId
left join TransactionsComplements on TransactionsComplements.transactionId = t.nid

left join Customer on t.nReceiverId = Customer.nid

left join TransactionChanges on TransactionChanges.nTransactionId = t.nid 

where sh.nShopTypeId = 2 
and t.nProductId in (1) 
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>976</xloc>
      <yloc>704</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2 4</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>


select ShopKeeper_name,shopkeeper_id,sum(commission) as commission from (

select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (
select mois ,agent,type_product ,realisation,objectif ,tro,
   case when  tro > 1 then 1
	    else tro
      end as pl_tro  from tro_sales_general_arch ar
  where id =5  and type_product not in ('change') )z
join shop s 
on s.sShopId = z.agent 
join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
      where month(dInsertion) = 2 and year(dinsertion) =2022  and ShopKeeper_name is not null  
	   and Product ='wu' and Product is not null
        group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
on c.sShopId = agent
where bFranchise = 0     
group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id 
having   avg(pl_tro) >='0.80' 
 )f

 group by ShopKeeper_name,shopkeeper_id
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>864</xloc>
      <yloc>816</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission 2 5 non</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>


select ShopKeeper_name,shopkeeper_id,sum(commission) as commission from (

select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (
select mois ,agent,type_product ,realisation,objectif ,tro,
   case when  tro > 1 then 1
	    else tro
      end as pl_tro  from tro_sales_general_arch ar
  where id =5  and type_product not in ('change') )z
join shop s 
on s.sShopId = z.agent 
join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
      where month(dInsertion) = 8 and year(dinsertion) =2022  and ShopKeeper_name is not null  
	   and Product  not in  ('Achat','wu','Vente') and Product is not null
        group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
on c.sShopId = agent
where bFranchise = 1     
group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id 
having   avg(pl_tro) >='0.8' 

 )f

 group by ShopKeeper_name,shopkeeper_id
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>953</xloc>
      <yloc>759</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>commission par shop </name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (
select mois ,agent,type_product ,realisation,objectif ,tro,
   case when  tro > 1 then 1
	    else tro
      end as pl_tro  from tro_sales_general_arch ar
  where id =5  and type_product not in ('change') )z
join shop s 
on s.sShopId = z.agent 
join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
      where month(dInsertion) =11 and year(dinsertion) =2022  and ShopKeeper_name is not null  
	   and Product  not in  ('Achat','wu','Vente') and Product is not null
        group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
on c.sShopId = agent
where bFranchise = 0     
group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id 
 
order by commission desc</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>928</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>facturation</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql> select t.nid,Customer.dBirthday,Customer.sSex ,s.sname as Agence, City.sName as ville ,t.nReceiverId, convert(date, t.dInsertion,103)as date, t.dInsertion,t.nAmount,s.sShopId,
  case when bFranchise = 0 then 'propre' else 'franchise' end as type_agence,rib,businessDay,
   
   case when left(rib,3) =  835 then 'Compte Cashplus'
   when  left(rib,3)  &lt;&gt;   835  and rib is not null  then 'Autre Etablissement'
    when  rib is  null  then 'Sans Compte' end as Etablissement,rib,ya.datePaymentTransaction,ya.businessDay
	
  
  
   from transactions t
   join TAIHUB ta
  on t.nid =  ta.nTransactionsId
  left join mtoTayssirComplement ya
  on ya.sTrackingNumber = ta.sNeiCode
  left join shop s
  on s.nId = t.nShopId
  left join City on s.nCityId = City.nid 
  left join Customer on Customer.nid = t.nReceiverId


  where t.nProductId = 101


















</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>179</xloc>
      <yloc>1005</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>facturation 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select * from InterPartnerTransactions</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>364</xloc>
      <yloc>1155</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>facturation 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>sELECT bRejected, Versement.nId, Versement.nMontantAVerser, Versement.dInsertion, Versement.dDate, AlimentationEntity.refId, Versement.bManual AS bManual,
  AlimentationEntity.name AS sCompanyName, CONCAT(AlimentationEntity.refId, '-',AlimentationEntity.name) AS sCompany,
Versement.bActive AS bActive, Versement.bVersed AS bVersed, Versement.dVersed AS dVersed, 
Versement.nMontantVersed AS nMontantVersed, Versement.bValidated AS bValidated,
  CASE WHEN nVersementType IN (1,2) THEN CONCAT('FR:', AlimentationEntity.name) 
 WHEN nVersementType IN (3,4) THEN CONCAT('Shop:',initiateurShop.name,'-', initiateurShop.code)
 END AS sInitiateur, CASE WHEN nVersementType IN (1,3) THEN CONCAT(Alim_CP_BankAccount.sName,'-',Alim_Bank.sName,'-',Alim_CP_BankAccount.sRIB)      
   WHEN nVersementType IN (2,4) THEN CONCAT('Shop:',destinationShop.name,'-', destinationShop.code)
 END AS sDestinataire, Alim_VersementType.sLabel AS sVersementType,
 CASE WHEN nVersementType IN (3,4) THEN initiateurShop.code ELSE '-' END AS sInitiateurShop,
CASE WHEN nVersementType IN (3,4) THEN destinationShop.code ELSE '-' END AS sDestinationShop,Versement.dValidated ,dRejected,
ShopKeeper.sLogin,sRejectedReason

FROM t_Versement AS Versement
LEFT JOIN AlimentationEntity ON AlimentationEntity.id = Versement.entityId 
LEFT JOIN AlimentationEntity destinationShop ON Versement.entityDestinationId = destinationShop.id AND destinationShop.refType = 'shop'    
LEFT JOIN AlimentationEntity initiateurShop ON Versement.entityId = initiateurShop.id 
 LEFT JOIN Alim_VersementType ON Versement.nVersementType = Alim_VersementType.nId 
LEFT JOIN Alim_CP_BankAccount ON Versement.nCPBankAccountId = Alim_CP_BankAccount.nId
 LEFT JOIN Alim_Bank ON Alim_CP_BankAccount.nBankId = Alim_Bank.nId
  left join (select  [nId],[sLogin],[nShopId],sagent,nProfileId,[bActive]  from Access) ShopKeeper
  on ShopKeeper.nid = isnull(nRejectedByAccessId,nValidatedByAccessId)
 
   WHERE 1=1 

  AND 
Versement.dInsertion between '2023-07-01 00:12:01.120' and   '2023-08-15 23:12:01.120'





</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>416</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>--select Company.sname  as company ,shop.nCompanyId, max(t.dinsertion) max_date,nFinalBalance from transactions t
--left join shop 
--on shop.nid = t.nShopId
--left join Company
--on Company.nid = shop.nCompanyId
--left join 
--(select nCompanyId ,nFinalBalance  from DiaryCompany_Balance
--where convert(date,dinsertion,103) ='2021-04-13'
--group by nCompanyId,nFinalBalance) b
--on b.nCompanyId = Company.nId

--where shop.nid = 483 --and nCompanyId is not null-group by shop.nCompanyId,nFinalBalance, Company.sname

--select  cu.sFirstName,cu.sLastName,cu.sCIN, tr.nid as transactionid ,t.sNeiCode as code  ,p.sName as product

--,tr.dInsertion as date  ,s.sName as transactions_statut ,sh.sName as shop_name  ,sh.sShopId as code 
--,tr.nAmount  ,tr.nOperationFee,x.sTrackingNumber,codeOfficeChange
--from transactions tr
--left join TAOHUB t
--on tr.nid = t.ntransactionsid
--left join Product p 
--on p.nid = tr.nProductId
--join TransactionStatus s
--on s.nId = tr.nTransactionStatusId
--join shop sh on sh.nid = tr.nShopId
--join Customer cu 
--on cu.nid = t.nSenderId
--left join Partner_X x
--on x.nTransactionId = tr.nId

--where tr.nProductId in (4060,4059)
--and 

--tr.dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-107),' ','00:00:00.000') as datetime)

select  distinct  f.nid  ,convert(date,f.dInsertion,103)as date,f.nAmount,f.nServiceFees, p.sServiceProvider,f.status ,
   f.nbr_Creances, isnull(rr.retailer_code,s.sShopId) as code
from Facturiers_Transactions f
 join Shop s
on f.nShopId = s.nid
 left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
on p.sBillerId = f.sBillerId
left join VIEW_RETAILERS rr
on rr.shopkeeper_Id = f.nDetaillant
where  status = 'PAID' and dOperation is  not null
and f.sBillerId = 5555


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>128</xloc>
      <yloc>432</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql> 
select  p.id ,p.dateCreated ,p.reason,p.createdBy,p.dateEnd,p.endedBy,p.reasonEnd ,c.sLastName,c.sFirstName,c.sCIN from ProfilageBlackList p 
left join customer  c
on  c.nid = p.customerId
where year(dateCreated) = 2023











select  level,c.sLastName,c.sFirstName,c.sCIN,p.activity,p.reason,p.dateCreated , p.controledDate,p.nShopId from ProfilageCustomerLevel p
left join customer  c 
on  c.nid = p.customerId
where year(p.dateCreated) = 2023















select  transaction_id, 3 as 'bFranchise',  'Retailer' as  type_agence
, '' as ville,  VIEW_RETAILERS.retailer_code as  'sshopid',pos_type,title,name,variants.product,CAST(orders.created_at AS DATE)as date ,orders.amount as volume  from cpstore_orders  orders
left join  cpstore_variants variants
on variants.id = orders.variant
left join cpstore_products products
on products.id = variants.product



left join VIEW_RETAILERS 
on VIEW_RETAILERS.id = pos_id
where  status= 'completed' and  pos_type = 'Retailer'
and  CAST(orders.created_at AS DATE) = convert(date,GETDATE()-1,103)

union

select transaction_id, shop.bFranchise ,
CASE bFranchise
       WHEN 1 THEN 'Franchise'
       WHEN 0 THEN 'Propre'
       ELSE 'web'
       
END
as type_agence
, City.sName as ville,shop.sshopid,pos_type,title,name,variants.product,CAST(orders.created_at AS DATE)as date ,orders.amount from cpstore_orders  orders
left join  cpstore_variants variants
on variants.id = orders.variant
left join cpstore_products products
on products.id = variants.product
left join shop 
on shop.nid = orders.pos_id
left join City 
on City.nid = shop.nCityId
where  status= 'completed' and pos_type &lt;&gt; 'Retailer' and  CAST(orders.created_at AS DATE) = convert(date,GETDATE()-1,103)






--select  p.id ,p.dateCreated ,p.reason,p.createdBy,p.dateEnd,p.endedBy,p.reasonEnd ,c.sLastName,c.sFirstName,c.sCIN from ProfilageBlackList p 
--left join customer  c
--on  c.nid = p.customerId
--where dateCreated >'2023-02-01'


-- select  level,c.sLastName,c.sFirstName,c.sCIN,p.activity,p.reason,p.dateCreated , p.controledDate,p.nShopId from ProfilageCustomerLevel p
--left join customer  c 
--on  c.nid = p.customerId
--where p.dateCreated >'2023-02-01'






--select c.id_num as cin , r.id as id ,phone,last_name,first_name,rib,lvl,r.created_by from client_edp c
-- join REPORTING_ACCOUNTS r
-- on c.id_num = r.id_num
--where c.id_num in ('V282203',
--'JE217075',
--'X379882',
--'EB212992',
--)





--select EDP_COMFR.product,bFranchise ,sShopId,shop_id,sum(comfr_amount)as commission from EDP_COMFR
--left join shop on EDP_COMFR.shop_id = shop.nId
--where year(created_date) = 2022 and month(created_date)=3
--group by  shop.bFranchise ,sShopId,shop_id, EDP_COMFR.product






--select nid , sFirstName,sLastName, sCIN,sMatricule,sContrat from ShopKeeper
--select  t.nid , t.dInsertion ,t.nProductId ,nAmount ,nOperationFee,nTransactionStatusId
--,nShopId,s.sShopId,sReceiverFirstName,sReceiverLastName,sReceiverGsm,json  , Customer.sCIN ,Customer.sLastName ,Customer.sFirstName   from transactions t
--left join shop s
--on s.nid = t.nShopId
--left join company c
--on c.nid = s.nCompanyId
--left join TransactionsComplements
--on TransactionsComplements.transactionId = t.nid
--left join Customer
--on t.nReceiverId = Customer.nid
--where c.nid = 354

--order by  t.nid desc




--select  p.id ,p.dateCreated ,p.reason,p.createdBy,p.dateEnd,p.endedBy,p.reasonEnd ,c.sLastName,c.sFirstName,c.sCIN from ProfilageBlackList p 
--left join customer  c
--on  c.nid = p.customerId
--where year(dateCreated) = 2022  and month(dateCreated) =2


--select  * from ProfilageCustomerLevel
--where year(dateCreated) = 2022 






--select * from Facturiers_Transactions 


--where dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-3),' ','00:00:00.000') as datetime) and 
--dInsertion &lt; cast(CONCAT(CONVERT(DATE,GETDATE()-3),' ','23:59:59.000') as datetime) 






--select shop.sShopId ,count(*)as nbr from Facturiers_Transactions
--left join shop 
--on shop.nid = Facturiers_Transactions.nShopId
--where sBillerId = 1022   and nDetaillant is null 
--and dinsertion BETWEEN '2022-01-01 00:15:14.980' and '2022-02-05 23:55:14.980'
--and status ='PAID'
--group by shop.sShopId



--select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (
--select mois ,agent,type_product ,realisation,objectif ,tro,
 --  case when  tro > 1 then 1
	--     else tro
    --  end as pl_tro  from tro_sales_general_arch ar
 -- where id =5  and type_product not in ('change') )z
--join shop s 
---on s.sShopId = z.agent 
--join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
--      where month(dInsertion) = 1 and year(dinsertion) =2022  and ShopKeeper_name is not null and type_product not in ('change')
  --      group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
--on c.sShopId = agent
--where bFranchise = 0     
--group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id 
--having   avg(pl_tro) >='0.79' 
--order by commission desc









--select t.nid , t.dInsertion ,t.nProductId ,nAmount ,nOperationFee,nTransactionStatusId
--,nShopId,s.sShopId,sReceiverFirstName,sReceiverLastName,sReceiverGsm,json  , Customer.sCIN ,Customer.sLastName ,Customer.sFirstName   from transactions t
--left join shop s
--on s.nid = t.nShopId
--left join company c
--on c.nid = s.nCompanyId
---left join TransactionsComplements
--on TransactionsComplements.transactionId = t.nid
--left join Customer
--on t.nReceiverId = Customer.nid
--where c.nid = 1397

--order by  t.nid desc





--select  transactionsnId,sShopId,dinsertion, Product, idSender ,senderID ,  concat(receiverLastName ,' ',receiverFirstname) as nom , count(*)as nbr ,sum(namount) as volume  from Daily_transactions_extended
--where productId in  (4059, 4060, 58) and transactionStatus = 8
--and year(dinsertion) = 2021 and senderID &lt;&gt; 'cp1111'
--group by idSender, senderID , Product, concat(receiverLastName ,' ',receiverFirstname), transactionsnId,sShopId,dinsertion





--select * from Partner_WestionUnion  p 
--left join transactions  t
--on t.nid = p.nTransactionId
--left join shop s
--on s.nid = t.nShopId
--where sForeignSystemUserId = ''
--and     nTransactionId  not in  ( select nid from transactions where nShopId = 1242) and year(p.dinsertion) = 2021

--order by p.nid desc



--select  t.nid , t.dInsertion ,t.nProductId ,nAmount ,nOperationFee,nTransactionStatusId
--,nShopId,s.sShopId,sReceiverFirstName,sReceiverLastName,sReceiverGsm,json  , Customer.sCIN ,Customer.sLastName ,Customer.sFirstName   from transactions t
--left join shop s
--on s.nid = t.nShopId
--left join company c
--on c.nid = s.nCompanyId
--left join TransactionsComplements
--on TransactionsComplements.transactionId = t.nid
--left join Customer
--on t.nReceiverId = Customer.nid
--where c.nid = 1397

--order by  t.nid desc

--SELECT top 100
-- TANHUB.dInsertion
--, TANHUB.nAmount
--,kyc.phone as phone_emetteur
--,rec.phone as phone_recepteur
--,Customer.sFirstName as FirstName_emetteur
--,Customer.sLastName as LastName_emetteur
--,cus.sFirstName as FirstName_recepteur
--,cus.sLastName as LastName_recepteur
--select  s.sShopId as code  ,tr.nid,sNeiCode ,tr.nAmount,tr.dInsertion from transactions tr 
--left join TAIHUB ta
--on ta.nTransactionsId = tr.nid
--left join shop s
--on s.nid = tr.nShopId
--where tr.nProductId = 6 and nTransactionStatusId = 8
--and tr.dinsertion >'2021-01-01 00:01:58.827'


--FROM TANHUB
--left join [CP_CORE].[dbo].[KYC_DATA] kyc
--on kyc.client_id = TANHUB.nSenderId
--left join [CP_CORE].[dbo].[KYC_DATA] rec
--on rec.client_id = TANHUB.nReceiverId
--left join Customer on Customer.nid = TANHUB.nSenderId
--left join Customer cus on cus.nid = TANHUB.nReceiverId
--left join transactions tr
--on tr.nid = TANHUB.nTransactionCashInId

--where TANHUB.dinsertion between  '2021-04-27 00:29:58.827' and '2021-04-27 23:59:58.827'
--and bPaid =1 and  kyc.phone is not null and  rec.phone is not null 




------------------------commission cc---------------------
--select  z.agent,avg(pl_tro)as moyenne,ShopKeeper_name,shopkeeper_id,c.commission from (
--select mois ,agent,type_product ,realisation,objectif ,tro,
--   case when  tro > 1 then 1
--	     else tro
--       end as pl_tro  from tro_sales_general_arch ar
 -- where id =5  and type_product not in ('change') )z
--join shop s 
--on s.sShopId = z.agent 
--join ( select  shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
 --     where month(dInsertion) = 12 and year(dinsertion) =2021  and ShopKeeper_name is not null and type_product not in ('change')
 --       group by   shopkeeper_id ,ShopKeeper_name ,sShopId)c
--on c.sShopId = agent
--where bFranchise = 0     
--group by z.agent,c.commission,ShopKeeper_name,shopkeeper_id
--having   avg(pl_tro) >='0.79' and commission > 70
--order by commission desc






------------------------superviseur---------------------------------

--select sup as  nom_agent,id as id_agent  , mois,'  ' as type_product  ,0 as  'realisation' ,0 as 'objectif' , tro,commission_unitaire 
--,0as ShopKeeper_id ,0 as sshopid
--from (

--select rrr.id , mois, sup , tro,commission_unitaire from (

--select 3 as id,mois ,sup ,  AVG(pl_tro) tro from (

--select  mois ,sup, type_product , realisation ,objectif ,tro , 
--case
--    when  tro > 1.2 then 1.2
--else tro
--end as pl_tro  from tro_eligibilite_Superviseurs_archive t)as q

--group by   mois ,sup ) rrr

--left join ((select * from sales_agent_condition sa
--            join (select  id_agent as id, agent as ag ,max(debut_application) as agdebut_application from sales_agent_condition group by  id_agent,agent)ss
--             on ss.id = sa.id_agent and ss.agdebut_application = sa.debut_application)) sa
--         on rrr.id = sa.id_agent    and   tro  BETWEEN sa.condition_min and sa.condition_max
--	 )as s 

----------------------CCS------------------------------------
select cin as ccs ,sum(commission_unitaire)commission_sanscarte,sum(commission_unitaire)+150 as commissionavec_carte from (
select  ccs as cin, id_agent, mois , type_product , realisation ,objectif ,tro ,commission_unitaire ,0as ShopKeeper_id ,0 as sshopid
from(
select  rrr.id_agent, mois ,ccs, type_product , realisation ,objectif ,tro ,commission_unitaire
 from tro_eligibilite_ccs_archive rrr
 left join  (select * from sales_agent_condition sa
             join (select  id_agent as idd, agent as ag ,max(debut_application) as agdebut_application from sales_agent_condition group by  id_agent,agent)ss
               on ss.idd = sa.id_agent and ss.agdebut_application = sa.debut_application) saa
  
  on rrr.id_agent =saa.id_agent   and   tro  > saa.condition_min )  v  )f
where type_product&lt;&gt;'Facturiers'
 group by cin
--select  'facturation'as service, f.nid,f.sRecu as sNeiCode , isnull(retailer_code, ss.sShopId ) as sShopId,isnull(retailer_code, ss.Sname ) as agence,f.sBillerId as nProductId  ,p.sServiceProvider as Product, convert(date,f.dInsertion,103)as date,f.status,nAmount
--,CASE WHEN  f.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type , 0 as  'nOperationFee'  ,f.nServiceFees as nServiceFee ,Company.sName as Company
-- ,nbr_Creances ,identifiantPayment ,sMTC,sBillNumber from Facturiers_Transactions f

  --       left join (select DISTINCT(sBillerId),sServiceProvider  from PayExpress_Products) p 
--on p.sBillerId = f.sBillerId
 --         join shop ss
--on ss.nid = f.nShopId
--left join VIEW_RETAILERS rr
--on rr.shopkeeper_Id = f.nDetaillant
--left join Company 
-- on Company.nid = f.nShopId
 --is_transaction_cmi = 1 
--and 
--where year(f.dInsertion) = 2021  and  p.sBillerId = 5555
--order by  f.dInsertion asc


--select sshopid,firstName,lastname,smatricule2,count(*) as nbr from (

--select  id_account,isnull(shop3,shop2) as idcode ,s.sShopId,isnull(upload_date_3,upload_date_2) as date

--,isnull(shopkepper_sfirstName3,shopkepper_sfirstName2) as firstName
--,isnull(shopkepper_slastname3,shopkepper_slastname2)as lastname

--,isnull(smatricule3,smatricule2) as smatricule2

--from info_upgrades

  --    join shop s
 --on s.nid = isnull(shop3,shop2)
   --   join (select account_id ,min(createddate) as date from REPORTING_TRANSACTIONS 
     --        group by account_id) p_trx
--on info_upgrades.id_account= p_trx.account_id
 
-- where Month(isnull(upload_date_3,upload_date_2)) = 4
  --and Month(p_trx.date) = 4) ad
  
 -- group by  sshopid,firstName,lastname,smatricule2
--select  operation_type_id,sh.sShopId,sFirstName ,sLastName,sCIN , count(*)as nbr from [CP_CORE].[dbo].LOG_COREBANKING l
--left join [cash_plus].[dbo].[ShopKeeper] s
--on l.shop_keeper_id = s.nId
--left join  [cash_plus].[dbo].shop sh
--on sh.nid = l.shop_id
--where operation_type_id  = 13 and month(operation_date) = 4 and year(operation_date) =2021
--and status = 'Finished' 
--group by   operation_type_id,sh.sShopId,sFirstName ,sLastName,sCIN

--select cin as ccs ,sum(commission_unitaire)commission_sanscarte,sum(commission_unitaire)+150 as commissionavec_carte from (
--select  ccs as cin, id_agent, mois  type_product , realisation ,objectif ,tro ,commission_unitaire ,0as ShopKeeper_id ,0 as sshopid
--from(
--select  rrr.id_agent, mois ,ccs, type_product , realisation ,objectif ,tro ,commission_unitaire
--from tro_eligibilite_ccs_archive rrr
--left join  (select * from sales_agent_condition sa
  --            join (select  id_agent as idd, agent as ag ,max(debut_application) as agdebut_application from sales_agent_condition group by  id_agent,agent)ss
    --           on ss.idd = sa.id_agent and ss.agdebut_application = sa.debut_application) saa
  
--  on rrr.id_agent =saa.id_agent   and   tro  > saa.condition_min )  v  )f

--  group by cin









--select sup as  nom_agent,id as id_agent  , mois,'  ' as type_product  ,0 as  'realisation' ,0 as 'objectif' , tro,commission_unitaire 
--,0as ShopKeeper_id ,0 as sshopid
--from (

--select rrr.id , mois, sup , tro,commission_unitaire from (

--select 3 as id,mois ,sup ,  AVG(pl_tro) tro from (

--select  mois ,sup, type_product , realisation ,objectif ,tro , 
--case
  --  when  tro > 1.2 then 1.2
--	else tro
--end as pl_tro  from tro_eligibilite_Superviseurs_archive t)as q

--group by   mois ,sup ) rrr

--left join ((select * from sales_agent_condition sa
  --          join (select  id_agent as id, agent as ag ,max(debut_application) as agdebut_application from sales_agent_condition group by  id_agent,agent)ss
    --        on ss.id = sa.id_agent and ss.agdebut_application = sa.debut_application)) sa
      --    on rrr.id = sa.id_agent    and   tro  BETWEEN sa.condition_min and sa.condition_max
--		  )as s 


</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>944</xloc>
      <yloc>560</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>--select   pos_type, sshopid,producttype,date,count(*) as nbr ,sum(amount) as volume from (


--select pos_type, id ,s.sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b
--join [cash_plus].[dbo].[shop] s
--on s.nid = b.pos_id
--where     year(created_at) = 2023 and month(created_at)=5 and pos_type &lt;&gt; 'retailer'
--union 

--select pos_type,  b.id ,r.retailer_code as sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b

--join [cash_plus].[dbo].ShopKeeper s 
--on s.nid =  b.pos_id
--join [cp_core].[dbo].RETAILER  r
--on r.access_id = s.nAccessId

--where    year(created_at) = 2023   and month(created_at)=5 and pos_type = 'retailer')r
--group by   pos_type, sshopid,producttype,date




select  convert(date,r.dRecharge,103) as date,Recharge_Operateur.sName,  isnull(v.retailer_code,  ss.sShopId) as sShopId  , isnull(v.retailer_code, ss.sname)as agence  , year(r.dRecharge) as  year,sStatus
,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type, count(*) as nbr,sum(namount)as volume from Recharge r
join shop ss 
on ss.nid = r.nShopId
left join VIEW_RETAILERS v
on v.ShopKeeper_id = r.nDetaillant
left join Recharge_Operateur on Recharge_Operateur.nId = r.nRechargeOperateurId
 where   year(r.dRecharge) = 2023  and sStatus = 'COMPLETE'  and month(dRecharge) = 5
group by    isnull(v.retailer_code,  ss.sShopId), isnull(v.retailer_code, ss.sname),year(r.dRecharge),sStatus,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end,Recharge_Operateur.sName
,convert(date,r.dRecharge,103)







--select pos_type,r.retailer_code , producttype , convert(date,created_at,103)as date ,count(*) as nbr,sum(b.amount) as amount  from[cp_core].[dbo]. balance_audit b

--join [cash_plus].[dbo].ShopKeeper s 
--on s.nid =  b.pos_id
--join [cp_core].[dbo].RETAILER  r
--on r.access_id = s.nAccessId
--where     pos_type = 'retailer' and month(created_at)= 4 and year(created_at) = 2023
--group by  pos_type,r.retailer_code , producttype , convert(date,created_at,103)












select shop.sShopId as code_agnce_annule ,Action_Request.product_type, Action_Request.product ,Action_Request.date_created as date_annulation
,nTransactionsId,refunded_amount,refundTotalAmount,sNeiCode,cancelDate,TANHUB.nTransactionCashInId as id_cashin,shopp.sShopId,outt.nTransactionCashOutId
from Action_Request
left join shop on Action_Request.shop_id = shop.nid
join CashRefund on   Action_Request.id = CashRefund.action_request_id
join TAOHUB on TAOHUB.nTransactionsId = Action_Request.record_id
 left join TANHUB 
on TANHUB.nTransactionCashInId = refund_transaction_id
left join TANHUB outt
on outt.nTransactionCashInId = TANHUB.nTransactionCashInId
left join Transactions 
on Transactions.nid = TANHUB.nTransactionCashInId
left join shop shopp
on shopp.nid = Transactions.nShopId

where Action_Request.date_created > '2022-04-01 00:00:08.173' 

--select  convert(date,r.dRecharge,103) as date,Recharge_Operateur.sName,  isnull(v.retailer_code,  ss.sShopId) as sShopId  , isnull(v.retailer_code, ss.sname)as agence  , year(r.dRecharge) as  year,sStatus
--,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type, count(*) as nbr,sum(namount)as volume from Recharge r
--join shop ss 
--on ss.nid = r.nShopId
--left join VIEW_RETAILERS v
--on v.ShopKeeper_id = r.nDetaillant
--left join Recharge_Operateur on Recharge_Operateur.nId = r.nRechargeOperateurId

-- where   year(r.dRecharge) = 2023  and sStatus = 'COMPLETE'  and month(dRecharge) = 2
-- group by    isnull(v.retailer_code,  ss.sShopId), isnull(v.retailer_code, ss.sname),year(r.dRecharge),sStatus,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end,Recharge_Operateur.sName
--,convert(date,r.dRecharge,103)

















--select   pos_type, sshopid,producttype,date,count(*) as nbr ,sum(amount) as volume from (


--select pos_type, id ,s.sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b
--join [cash_plus].[dbo].[shop] s
--on s.nid = b.pos_id
--where     year(created_at) = 2022 and month(created_at)=12 and pos_type &lt;&gt; 'retailer'


--union 

--select pos_type,  b.id ,r.retailer_code as sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b

-- join [cash_plus].[dbo].ShopKeeper s 
--on s.nid =  b.pos_id
--join [cp_core].[dbo].RETAILER  r
--on r.access_id = s.nAccessId

--where    year(created_at) = 2022   and month(created_at)=12 and pos_type = 'retailer')r
--group by   pos_type, sshopid,producttype,date












--select 'transfert'as service, tr.nid,isnull(TAIHUB.sNeiCode,TAOHUB.sNeiCode)as sNeiCode , s.sShopId ,s.sName as agence ,tr.nProductId,pr.sName as Product, convert(date,tr.dinsertion,103) as date,trs.sName as 'Status',tr.namount as nAmount,'agence' as type
--,tr.nOperationFee,tr.nServiceFee,Company.sName as Company,tr.nComListId,TAOHUB.codeOfficeChange ,Customer.sCIN,Partner_X.dsent,Customer.slastname,Customer.sfirstname
-- ,TAOHUB.receiverFirstName,TAOHUB.receiverLastName   from transactions tr
--left join shop s
--   on s.nid = tr.nShopId
--left join Product pr
--   on pr.nid = tr.nProductId

--left join TAIHUB 
 --  on TAIHUB.nTransactionsId = tr.nid
--left join Company
--on Company.nid = s.nCompanyId
--left join TransactionStatus trs
--on tr.nTransactionStatusId = trs.nId
--left join TAOHUB
--on TAOHUB.nTransactionsId = tr.nid

--left join Customer 
--on Customer.nid = tr.nsenderid
--left join Partner_X 
--on Partner_X.nTransactionId = tr.nId
 
-- where   tr.dInsertion > cast(CONCAT(CONVERT(DATE,GETDATE()-3),' ','00:00:00.000') as datetime) and 
--tr.dInsertion &lt; cast(CONCAT(CONVERT(DATE,GETDATE()-1),' ','23:59:59.000') as datetime)  
-- and tr.nProductId in (4060,4059,58)





select co.sname as company , max(dinsertion) as max_date from Daily_transactions_extended d
left join shop s
on s.nid= d.nShopId
left join Company co
on co.nid= s.nCompanyId
group by  co.sname
















































select  convert(date,tr.dInsertion,103) as datee , s.sShopId , count(namount) as nbr , sum(namount) as volume , sum(nOperationFee) as commission 
 ,st.sname   from TransactionChanges tr
join transactions t
on t.nid = tr.nTransactionId
join shop s
on s.nid = t.nShopId
join TransactionStatus st
on st.nid = tr.nAfterStatusId


where nAfterStatusId in(26,28) and 

year(tr.dInsertion) = 2022 and month(tr.dInsertion) = 5
 group by convert(date,tr.dInsertion,103),s.sShopId ,st.sname

















select co.sname as company , max(dinsertion) as max_date from Daily_transactions_extended d
left join shop s
on s.nid= d.nShopId
left join Company co
on co.nid= s.nCompanyId
group by  co.sname


select  year(r.dRecharge)as year,month(r.dRecharge) as month,Recharge_Operateur.sName,  ss.sShopId, isnull(v.retailer_code, ss.sname)as agence  , year(r.dRecharge) as  year,sStatus
,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end as type, count(*) as nbr,sum(namount)as volume from Recharge r
join shop ss 
on ss.nid = r.nShopId
left join VIEW_RETAILERS v
on v.ShopKeeper_id = r.nDetaillant
left join Recharge_Operateur on Recharge_Operateur.nId = r.nRechargeOperateurId

 where   year(r.dRecharge) = 2022  and sStatus = 'COMPLETE' and month(r.dRecharge)= 8
 group by   ss.sShopId, isnull(v.retailer_code, ss.sname),year(r.dRecharge),sStatus,CASE WHEN  r.nDetaillant is not null THEN 'Detaillant' ELSE 'agence' end,Recharge_Operateur.sName
,year(r.dRecharge),month(r.dRecharge)





select shop.sShopId as code_agnce_annule ,Action_Request.product_type, Action_Request.product ,Action_Request.date_created as date_annulation
,nTransactionsId,refunded_amount,refundTotalAmount,sNeiCode,cancelDate,TANHUB.nTransactionCashInId as id_cashin,shopp.sShopId,outt.nTransactionCashOutId
from Action_Request
left join shop on Action_Request.shop_id = shop.nid
join CashRefund on   Action_Request.id = CashRefund.action_request_id
join TAOHUB on TAOHUB.nTransactionsId = Action_Request.record_id
 left join TANHUB 
on TANHUB.nTransactionCashInId = refund_transaction_id
left join TANHUB outt
on outt.nTransactionCashInId = TANHUB.nTransactionCashInId
left join Transactions 
on Transactions.nid = TANHUB.nTransactionCashInId
left join shop shopp
on shopp.nid = Transactions.nShopId

where Action_Request.date_created > '2022-01-01 00:01:58.173' 



















select   nRetailerId ,nShopId,nAmount,convert(date,dOperation,103) as date ,nOperationTypeId,
sShopId,retailer_code
 from RetailersCashAccount r
 join shop s 
on r.nShopId = s.nid
 join VIEW_RETAILERS rr
on rr.id = r.nRetailerId
where convert(date,dOperation,103) = '2022-06-20'
order by dOperation asc













select   pos_type, sshopid,producttype,date,count(*) as nbr ,sum(amount) as volume from (


select pos_type, id ,s.sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b
join [cash_plus].[dbo].[shop] s
on s.nid = b.pos_id
where     year(created_at) = 2022 and month(created_at)=7  and pos_type &lt;&gt; 'retailer'


union 

select pos_type,  b.id ,r.retailer_code as sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b

 join [cash_plus].[dbo].ShopKeeper s 
on s.nid =  b.pos_id
join [cp_core].[dbo].RETAILER  r
on r.access_id = s.nAccessId

where    year(created_at) = 2022   and month(created_at)=7 and pos_type = 'retailer')r
group by   pos_type, sshopid,producttype,date














select   s.sName,s.sShopId, code_partner ,code_marchand ,m.amount ,fees ,shop_id ,created_date ,token from Marchand_Transaction m
left join shop  s
on m.shop_id = s.nid
where convert(date,created_date,103) in ('2022-04-16','2022-04-17','2022-04-18','2022-06-20')













select pos_type, id ,s.sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b
join [cash_plus].[dbo].[shop] s
on s.nid = b.pos_id
where     year(created_at) = 2022   and pos_type &lt;&gt; 'retailer'


union 

select pos_type,  b.id ,r.retailer_code as sshopid, producttype , convert(date,created_at,103)as date ,b.amount from[cp_core].[dbo]. balance_audit b

 join [cash_plus].[dbo].ShopKeeper s 
on s.nid =  b.pos_id
join [cp_core].[dbo].RETAILER  r
on r.access_id = s.nAccessId

where    year(created_at) = 2022   and pos_type = 'retailer'


--select   convert(date,d.dInsertion,103) as date , ssss.sshopid,ssss.sname, t.nAmount ,  d.nid, t.nTransactionCashInId, t.nTransactionCashOutId , o.nid ,t.nAmount , city.sname as ville_out,cu.sLastName as RsLastName ,sFirstName as RsFirstName
--,cu.scin from  TANHUB t
-- join transactions d 
--on d.nid = t.nTransactionCashInId
--left join (select * from transactions where nProductId = 19 and nTransactionStatusId = 8 ) o
--on t.nTransactionCashOutId = o.nid 
--left join shop ss
--on ss.nid = o.nShopId
--left join city 
--on city.nid = ss.nCityId
--left join shop ssss 
--on ssss.nid  = d.nShopId
--left join Customer cu 
--on cu.nid  = o.nReceiverId
--where    d.nProductId = 1 and d.nTransactionStatusId = 8 
--and ssss.nShopTypeId = 2
--and d.dInsertion BETWEEN '2022-01-01 00:37:33.210' and '2022-03-31 23:37:33.210'



--select d.senderFirstname,d.senderLastname ,transactionsnId,TAOHUB.sNeiCode as Reference,sShopId as Agence_emission,d.dinsertion, Product, idSender ,senderID,senderMTOCountry as pays_de_reception,  concat(d.receiverLastName ,' ',d.receiverFirstname) as nom_Receveurs  ,sum(d.namount) as namount_et_fees  from Daily_transactions_extended d
--left join TAOHUB
--on TAOHUB.ntransactionsid = transactionsnId

--where productId in  (4059, 4060,58) and transactionStatus = 8
--and transactionsnId  in (select ntransactionsid from annulation_send_mg_ria)
--and month(d.dinsertion) in (1,2)  and year(d.dinsertion) in (2021,2022)
--group by  d.senderFirstname,d.senderLastname,idSender, senderID , Product, concat(d.receiverLastName ,' ',d.receiverFirstname), d.transactionsnId,sShopId,d.dinsertion,TAOHUB.sNeiCode,senderMTOCountry







--select   convert(date,d.dInsertion,103) as date , ssss.sshopid,ssss.sname, t.nAmount ,  d.nid, t.nTransactionCashInId, t.nTransactionCashOutId , o.nid ,t.nAmount , city.sname as ville_out,cu.sLastName as RsLastName ,sFirstName as RsFirstName
--,cu.scin from  TANHUB t
-- join transactions d 
--on d.nid = t.nTransactionCashInId
--left join (select * from transactions where nProductId = 19 and nTransactionStatusId = 8 ) o
--on t.nTransactionCashOutId = o.nid 
--left join shop ss
--on ss.nid = o.nShopId
--left join city 
--on city.nid = ss.nCityId
--left join shop ssss 
--on ssss.nid  = d.nShopId
--left join Customer cu 
--on cu.nid  = o.nReceiverId
--where    d.nProductId = 1 and d.nTransactionStatusId = 8 
--and ssss.nShopTypeId = 2
--and d.dInsertion BETWEEN '2021-10-01 00:37:33.210' and '2021-12-31 23:37:33.210'




--select 'transfert'as service, tr.nid,isnull(TAIHUB.sNeiCode,TAOHUB.sNeiCode)as sNeiCode , s.sShopId ,s.sName as agence ,tr.nProductId,pr.sName as Product, convert(date,tr.dinsertion,103) as date,trs.sName as 'Status',tr.namount as nAmount,'agence' as type
--,tr.nOperationFee,tr.nServiceFee,Company.sName as Company,tr.nComListId,TAOHUB.codeOfficeChange ,Customer.sCIN
-- from transactions tr
--left join shop s
--   on s.nid = tr.nShopId
--left join Product pr
--   on pr.nid = tr.nProductId

--left join TAIHUB 
--   on TAIHUB.nTransactionsId = tr.nid
--left join Company
--on Company.nid = s.nCompanyId
--left join TransactionStatus trs
--on tr.nTransactionStatusId = trs.nId
--left join TAOHUB
--on TAOHUB.nTransactionsId = tr.nid

--left join Customer 
--on Customer.nid = tr.nsenderid
 
-- where   month(tr.dInsertion) in (3,4,5)  and 
--year(tr.dInsertion) = 2021
--and tr.nProductId = 22



--select shop.sShopId, dInsertion, sType,nVolumeAmount,nComission, nComissionFranchise from Diary_ManualCorrection 
--left join shop 
--on shop.nid = Diary_ManualCorrection.nShopId
-- where year(dInsertion)= 2021
--and Diary_ManualCorrection.bActive = 1 and Diary_ManualCorrection.nProductRefId in (85,86)


--select  convert(date,d.dInsertion,103) as date , ssss.sshopid,ssss.sname, t.nAmount ,  d.nid, t.nTransactionCashInId, t.nTransactionCashOutId , o.nid ,t.nAmount , city.sname as ville_out,cu.sLastName as RsLastName ,sFirstName as RsFirstName
-- from  TANHUB t
-- join transactions d 
--on d.nid = t.nTransactionCashInId
--left join (select * from transactions where nProductId = 19 and nTransactionStatusId = 8 ) o
--on t.nTransactionCashOutId = o.nid 
--left join shop ss
--on ss.nid = o.nShopId
--left join city 
--on city.nid = ss.nCityId
--left join shop ssss 
--on ssss.nid  = d.nShopId
--left join Customer cu 
--on cu.nid  = o.nReceiverId
--where    d.nProductId = 1 and d.nTransactionStatusId = 8 
--and ssss.nShopTypeId = 2 and ssss.sname &lt;&gt;'Compte Paiement'
--and d.dInsertion BETWEEN '2021-07-01 01:37:33.210' and '2021-09-30 23:37:33.210'
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1040</xloc>
      <yloc>512</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>select Marchand_Token.code_marchand,token_code,state,Marchand_Token.amount,date_paid,shop.sShopId as code,
JSON_VALUE(cast(Marchand_Token.json_data as nvarchar(max)),'$.pos_name') AS pos_name from Marchand_Token
left join Marchand_Transaction
on Marchand_Transaction.token = Marchand_Token.token_code
left join shop 
on shop.nid = shop_id
where Marchand_Token.code_marchand = 'PE' and year(date_paid)  = 2023













--sELECT Versement.nId, Versement.nMontantAVerser, Versement.dInsertion, Versement.dDate, AlimentationEntity.refId, Versement.bManual AS bManual,
--  AlimentationEntity.name AS sCompanyName, CONCAT(AlimentationEntity.refId, '-',AlimentationEntity.name) AS sCompany,
--Versement.bActive AS bActive, Versement.bVersed AS bVersed, Versement.dVersed AS dVersed, 
--Versement.nMontantVersed AS nMontantVersed, Versement.bValidated AS bValidated,
--  CASE WHEN nVersementType IN (1,2) THEN CONCAT('FR:', AlimentationEntity.name) 
-- WHEN nVersementType IN (3,4) THEN CONCAT('Shop:',initiateurShop.name,'-', initiateurShop.code)
-- END AS sInitiateur, CASE WHEN nVersementType IN (1,3) THEN CONCAT(Alim_CP_BankAccount.sName,'-',Alim_Bank.sName,'-',Alim_CP_BankAccount.sRIB)      
 --  WHEN nVersementType IN (2,4) THEN CONCAT('Shop:',destinationShop.name,'-', destinationShop.code)
-- END AS sDestinataire, Alim_VersementType.sLabel AS sVersementType,
-- CASE WHEN nVersementType IN (3,4) THEN initiateurShop.code ELSE '-' END AS sInitiateurShop,
--CASE WHEN nVersementType IN (3,4) THEN destinationShop.code ELSE '-' END AS sDestinationShop,Versement.dValidated ,
--ShopKeeper.sLogin,sRejectedReason

--FROM t_Versement AS Versement
--LEFT JOIN AlimentationEntity ON AlimentationEntity.id = Versement.entityId 
--LEFT JOIN AlimentationEntity destinationShop ON Versement.entityDestinationId = destinationShop.id AND destinationShop.refType = 'shop'    
--LEFT JOIN AlimentationEntity initiateurShop ON Versement.entityId = initiateurShop.id 
-- LEFT JOIN Alim_VersementType ON Versement.nVersementType = Alim_VersementType.nId 
--LEFT JOIN Alim_CP_BankAccount ON Versement.nCPBankAccountId = Alim_CP_BankAccount.nId
-- LEFT JOIN Alim_Bank ON Alim_CP_BankAccount.nBankId = Alim_Bank.nId
--  left join (select  [nId],[sLogin],[nShopId],sagent,nProfileId,[bActive]  from Access) ShopKeeper
  --on ShopKeeper.nid = nRejectedByAccessId
 
   --WHERE 1=1 

 -- AND 
 --year(Versement.dInsertion) = 2023    and  bRejected = 1




















select    distinct(client_id),re.id as id_account ,f.shop_id as shop2, upload_date as  upload_date_2, shop3,upload_date_3 
,shp2.sFirstName as shopkepper_sFirstName2 ,shp2.sLastname as  shopkepper_sLastname2
,shp3.sFirstName as shopkepper_sFirstName3 ,shp3.sLastname as  shopkepper_sLastname3
,shp2.smatricule as smatricule2 
,shp3.smatricule as smatricule3


 from LOG_UPLOAD_FILE f
 left join (select shop_id as shop3, client_id as C3 ,upload_date as upload_date_3,shop_keeper from LOG_UPLOAD_FILE where type_upload = 'Domiciliation') d
on d.C3 = f.client_id
  join client_edp  edp
on edp.id = f.client_id
  join REPORTING_ACCOUNTS re
on re.id_num = edp.id_num

 left join ShopKeeper shp3
on shp3.nid = d.shop_keeper


 join ShopKeeper shp2
on shp2.nid = f.shop_keeper

where  type_upload = 'CIN'  and  re.lvl ='Merch'









--select   Convert(date,dInsertion,103) as date ,p.sName as produit  ,count(t.nAmount)as nbr,sum(t.nAmount) as amount,sum(t.nOperationFee) com , sum(t.nservicefee) as Fsms,s.sName as status , sh.sShopId as code from transactions t
--join TransactionStatus s
--on s.nId = t.nTransactionStatusId
--join Product p on p.nid = t.nProductId
--join shop sh on sh.nid = t.nShopId
--where
--convert(date,t.dInsertion,103) in ('2023-02-01','2023-02-02','2023-02-03')



--and t.nProductId in (1, 19) 
--group by  Convert(date,dInsertion,103),p.sName,s.sName,sh.sShopId



--select Marchand_Token.code_marchand,token_code,state,Marchand_Token.amount,date_paid,shop.sShopId as code,
--JSON_VALUE(cast(Marchand_Token.json_data as nvarchar(max)),'$.pos_name') AS pos_name from Marchand_Token
--left join Marchand_Transaction
--on Marchand_Transaction.token = Marchand_Token.token_code
--left join shop 
---on shop.nid = shop_id
--where Marchand_Token.code_marchand = 'PE'

















select  convert(date,tr.dInsertion,103) as datee , s.sShopId , count(namount) as nbr , sum(namount) as volume , sum(nOperationFee) as commission 
 ,st.sname   from TransactionChanges tr
join transactions t
on t.nid = tr.nTransactionId
join shop s
on s.nid = t.nShopId
join TransactionStatus st
on st.nid = tr.nAfterStatusId


where nAfterStatusId in(26,28) and 

convert(date,t.dInsertion,103) in ('2023-02-01','2023-02-02','2023-02-03')

 group by convert(date,tr.dInsertion,103),s.sShopId ,st.sname






--select s.sname as Agence, t.nReceiverId, convert(date, t.dInsertion,103)as date, t.dInsertion, t.nProductId,t.nAmount,t.nShopId,s.sShopId,
 -- case when bFranchise = 0 then 'propre' else 'franchise' end as type_agence,ya.rib,businessDay,
   
 --  case when left(ya.rib,3) =  835 then 'Compte Cashplus'
 --  when  left(ya.rib,3)  &lt;&gt;   835  and ya.rib is not null  then 'Autre Etablissement'
 --   when  ya.rib is  null  then 'Sans Compte' end as Etablissement,ss.id as accountid ,ss.lvl,client_edp.birth_date,client_edp.city,client_edp.title

  
  
--   from _transactions t
--   join TAIHUB ta
--  on t.nid =  ta.nTransactionsId
--  left join mtoTayssirComplement ya
--  on ya.sTrackingNumber = ta.sNeiCode
--   left join REPORTING_ACCOUNTS ss
-- on TRIM(ss.rib)  = ya.rib
 --left join client_edp
-- on client_edp.id_num = ss.id_num
--  left join shop s
 -- on s.nId = t.nShopId
 -- left join gps_agence   on gps_agence.code_agence = s.sShopId

 -- where t.nProductId = 101






--select Marchand_Token.code_marchand,token_code,state,Marchand_Token.amount,date_paid,shop.sShopId as code,
--JSON_VALUE(cast(Marchand_Token.json_data as nvarchar(max)),'$.pos_name') AS pos_name from Marchand_Token
--left join Marchand_Transaction
--on Marchand_Transaction.token = Marchand_Token.token_code
--left join shop 
--on shop.nid = shop_id
--where Marchand_Token.code_marchand = 'PE'

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>985</xloc>
      <yloc>454</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>SELECT
report.tp as Type_Produit,
report.pr as Produit,
report.nId,
report.codeOp as code_Operation,
report.dInsertion,
report.dDiaryDate as date_journal,
report.nShopId,Shop.sShopId, Shop.sName as sShopName,report.nCompanyId,
ISNULL(Company.sName, 'Cash+') as sCompanyName,
report.amount,
report.com, report.comFR, report.comId, report.comment,
report.var1, report.var2, report.var3, report.var4, report.var5
 FROM (

	SELECT

  'Transfert' as tp,
  Product.sName as pr,
  DR.nTransactionID as nId,
	CASE WHEN DR.nProductId = 1 THEN '-' ELSE DR.sCodeTransaction END as codeOp,
  DR.dInsertion,
  DR.dDiaryDate,
  DR.nShopId, DR.nCompanyId,
  DR.nAmountWithComission as amount,
  DR.nComission as com,
  DR.nComissionFranchise as comFR,
  DR.nComissionId as comId,
  '' as comment,
  CASE WHEN DR.bAjust=1 AND DR.bAjustementType=0 THEN 'ajustee (ajout)' 
       WHEN DR.bAjust=1 AND DR.bAjustementType=1 THEN 'ajustee (suppression)' 
       ELSE 'reguliere' END as var1,
  '' as var2, '' as var3, '' as var4, '' as var5

FROM Diary_DailyReport DR
LEFT JOIN Product ON DR.nProductId = Product.nId

UNION

SELECT
  'ALM' as tp,
  Comission_ProductId.sName as pr,
  DALM.nPayExpressAdviceId as nId,
	DALM.sMicroFilmReference as codeOp,
  DALM.dInsertion,DALM.dDiaryDate, DALM.nShopId, DALM.nCompanyId,
  DALM.nAmount, NULL as com, DALM.nComissionFranchise as comFR, DALM.nComissionId as comId,
  '' as comment,
  '' as var1, '' as var2, '' as var3, '' as var4, '' as var5

  FROM Diary_DailyALM DALM
  LEFT JOIN Comission_ProductId ON DALM.sBillerId = Comission_ProductId.sProductCode

UNION

SELECT
  'Change Devise' as tp,
   CASE WHEN nTypeOperation = 1 THEN 'Achat'
			  WHEN nTypeOperation = 2 THEN 'Vente'
				ELSE 'Cession' END as pr,
	DChange.nId,
  DChange.nIdOperation as codeOp,
  DChange.dInsertion, DChange.dDiaryDate,
	DChange.nShopId, DChange.nCompanyId,
	CASE WHEN nTypeOperation = 1
						AND ISNULL(Diary_ChangeDevise.nContreValeurAmount1, 0) &lt;&gt; 0 THEN DChange.nDeviseMad
			 WHEN nTypeOperation = 2
						AND ISNULL(Diary_ChangeDevise.nContreValeurAmount2, 0) &lt;&gt; 0 THEN DChange.nDeviseMad
			 WHEN nTypeOperation = 3
						AND ISNULL(Diary_ChangeDevise.nContreValeurAmount3, 0) &lt;&gt; 0 THEN DChange.nDeviseMad
			 ELSE 0
	END as nDeviseMad,
	NULL as com, DChange.nComissionFranchise as comFR, DChange.nComissionId as comId,
  'var1=initialDeviseAmount' as comment, CONVERT(varchar(10), DChange.nDeviseAmount) as var1, 'commission et commissionFR non Fiables Avant le 1er Novembre' as var2, '' as var3, '' as var4, '' as var5
  FROM Diary_DailyDevise DChange
	LEFT JOIN Diary_ChangeDevise
	ON CONVERT(DATE, DChange.dDiaryDate, 110) = CONVERT(DATE, Diary_ChangeDevise.dDiaryDate, 110)
		 AND DChange.nShopId = Diary_ChangeDevise.nShopId

UNION
   SELECT
    'SpeedBox' as tp, 'SpeedBox' as pr,
    DSpeed.nSpeedBoxListingId as nId,  '-' as codeOp,
    DSpeed.dInsertion, DSpeed.dDiaryDate, DSpeed.nShopId, DSpeed.nCompanyId,
    DSpeed.nAmount, NULL as com, DSpeed.nComissionFranchise as comFR, DSpeed.nComissionId as comId,
    '' as comment, '' as var1, '' as var2, '' as var3, '' as var4, '' as var5
    FROM Diary_DailySpeedBox DSpeed

UNION
SELECT
  'Correction' as tp, 
  Comission_ProductId.sName as pr,
  DCorr.nId as nId,  '-' as codeOp,
  DCorr.dInsertion, DCorr.dDate as dDiaryDate, DCorr.nShopId, DCorr.nCompanyId,
  DCorr.nVolumeAmount, DCorr.nComission as com, DCorr.nComissionFranchise as comFR, 0 as comId,
  DCorr.sComment as comment, '' as var1, '' as var2, '' as var3, '' as var4, '' as var5
  FROM Diary_ManualCorrection DCorr
  LEFT JOIN Comission_ProductId ON DCorr.nProductRefid = Comission_ProductId.nid

UNION

   SELECT
    'Alimentation company' as tp, 'alimentation company' as pr,
    DAlim.nAlimentationId as nId,  '-' as codeOp,
    DAlim.dInsertion, DAlim.dDiaryDate, 0 as nShopId, Dalim.nCompanyId,
    DAlim.nAmount, NULL as com, NULL as comFR, NULL as comId,
    '' as comment, '' as var1, '' as var2, '' as var3, '' as var4, '' as var5
    FROM Diary_Alimentation DAlim

UNION

   SELECT
    'Versement shop' as tp, 'versement shop' as pr,
    DV.nVersementId as nId,  '-' as codeOp,
    DV.dInsertion, DV.dDiaryDate, DV.nShopId as nShopId, Shop.nCompanyId,
    DV.nMontantVersed as nAmount, NULL as com, NULL as comFR, NULL as comId,
    '' as comment, Alim_VersementType.sLabel as var1, '' as var2, '' as var3, '' as var4, '' as var5
    FROM Diary_Versement DV
		LEFT JOIN Shop ON DV.nShopId=Shop.nId
		LEFT JOIN t_Versement ON DV.nVersementid = t_Versement.nId
		LEFT JOIN Alim_VersementType ON t_Versement.nVersementType = Alim_VersementType.nId

UNION

   SELECT
    'Versement company' as tp, 'versement company' as pr,
    DV.nVersementId as nId,  '-' as codeOp,
    DV.dInsertion, DV.dDiaryDate, 0 as nShopId, DV.nCompanyId,
    DV.nMontantVersed as nAmount, NULL as com, NULL as comFR, NULL as comId,
    '' as comment, Alim_VersementType.sLabel as var1, '' as var2, '' as var3, '' as var4, '' as var5
    FROM DiaryCompany_Versement DV
		LEFT JOIN t_Versement ON DV.nVersementid = t_Versement.nId
		LEFT JOIN Alim_VersementType ON t_Versement.nVersementType = Alim_VersementType.nId

UNION 
   SELECT
    'Recharge' as tp,
    Comission_ProductId.sName as pr,
    0 as nId,
    '' as codeOp,
    Diary_Recharge.dInsertion,
    Diary_Recharge.dDiaryDate, Diary_Recharge.nShopId, Diary_Recharge.nCompanyId,
    Diary_Recharge.nAmountRecharges, 
    NULL as com, 
    Diary_Recharge.nComissionFranchise as comFR, 
    0 as comId,
    'var1=nombreRecharges' as comment,
    CONVERT(varchar(10), Diary_Recharge.nRecharges) as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_Recharge
    LEFT JOIN Comission_ProductId ON Comission_ProductId.nid = 12

UNION
   SELECT
    'CTM' as tp,
    Comission_ProductId.sName as pr,
    Diary_DailyCTM.nTransactionCTMId as nId,
    '' as codeOp,
    Diary_DailyCTM.dInsertion,
    Diary_DailyCTM.dDiaryDate, Diary_DailyCTM.nShopId, Diary_DailyCTM.nCompanyId,
    Diary_DailyCTM.nAmount, 
    NULL as com, 
    Diary_DailyCTM.nComissionFranchise as comFR, 
    Diary_DailyCTM.nComissionId as comId,
    '' as comment,
    '' as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_DailyCTM
    LEFT JOIN Comission_ProductId ON Comission_ProductId.nid = 48

UNION
   SELECT
    'Detaillant' as tp,
    '' as pr,
    0 as nId,
    '' as codeOp,
    Diary_Detaillant.dInsertion,
    Diary_Detaillant.dDiaryDate, Diary_Detaillant.nShopId, Diary_Detaillant.nCompanyId,
    0 as nAmount, 
    NULL as com, 
    Diary_Detaillant.nComissionFranchise as comFR, 
    0 as comId,
    'var1=detaillantId&amp;var2=nombreOperations' as comment,
    CONVERT(varchar(10), Diary_Detaillant.nDetaillantId) as var1, CONVERT(varchar(10), Diary_Detaillant.nOperations) as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_Detaillant

UNION
  SELECT
    'Detaillant Cash' as tp,
    '' as pr,
    0 as nId,
    '' as codeOp,
    Diary_Detaillant_Cash.dInsertion,
    Diary_Detaillant_Cash.dDiaryDate, Diary_Detaillant_Cash.nShopId, Diary_Detaillant_Cash.nCompanyId,
    Diary_Detaillant_Cash.nAlimAmount as nAmount, 
    NULL as com, 
    0 as comFR, 
    0 as comId,
    'var1=detaillantId&amp;var2=operationType' as comment,
    CONVERT(varchar(10), Diary_Detaillant_Cash.nDetaillantId) as var1, 
    CONVERT(varchar(10), Diary_Detaillant_Cash.nOperationTypeId) as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_Detaillant_Cash

UNION
  SELECT
    'Alimentation' as tp,
    'MAD' as pr,
    Diary_MAD.nMADId as nId,
    '' as codeOp,
    Diary_MAD.dInsertion,
    Diary_MAD.dDate as dDiaryDate, AlimentationEntity.refId, 0 as nCompanyId,
    Diary_MAD.nAmount as nAmount, 
    NULL as com, 
    0 as comFR, 
    0 as comId,
    'var1=status' as comment,
    CONVERT(varchar(10), Diary_MAD.nstatus) as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_MAD
    LEFT JOIN Alim_MAD ON Diary_MAD.nMADId = Alim_Mad.nId
    LEFT JOIN t_Alimentation ON Alim_MAD.nAlimId = t_Alimentation.nId
    LEFT JOIN AlimentationEntity ON t_Alimentation.entityId = AlimentationEntity.id
    WHERE Diary_MAD.nstatus IN (1, 3, 0) AND AlimentationEntity.refType = 'shop'

UNION
  SELECT
    'Alimentation' as tp,
    'RMP' as pr,
    Alim_RMP.nid as nId,
    '' as codeOp,
    Alim_RMP.dInsertion,
    Alim_RMP.dDate as dDiaryDate, AlimentationEntity.refId, 0 as nCompanyId,
    Alim_RMP.nAmount as nAmount, 
    NULL as com,
    0 as comFR,
    0 as comId,
    '' as comment,
    '' as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Alim_RMP
    
    LEFT JOIN t_Alimentation ON Alim_RMP.nAlimId = t_Alimentation.nId
    LEFT JOIN AlimentationEntity ON t_Alimentation.entityId = AlimentationEntity.id
    WHERE AlimentationEntity.refType = 'shop'

UNION
  SELECT
    'Interagence' as tp,
    'Envoi' as pr,
    Interagence.nid as nId,
    '' as codeOp,
    Interagence.dInsertion,
    Interagence.dReceived as dDiaryDate, Interagence.nSenderShopId as entity_id, sendershop.ncompanyid as nCompanyId,
    Interagence.nAmount * (-1) as nAmount, 
    NULL as com,
    0 as comFR,
    0 as comId,
    'var1=receivershopid' as comment,
    CONVERT(varchar(10), Interagence.nreceivershopid) as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Interagence
    LEFT JOIN Shop sendershop ON interagence.nsendershopid = sendershop.nid

    WHERE Interagence.bReceived = 1

UNION
  SELECT
    'Interagence' as tp,
    'Reception' as pr,
    Interagence.nid as nId,
    '' as codeOp,
    Interagence.dInsertion,
    Interagence.dReceived as dDiaryDate, Interagence.nReceiverShopId as nshopid, receivershop.ncompanyid as nCompanyId,
    Interagence.nAmount as nAmount, 
    NULL as com,
    0 as comFR,
    0 as comId,
    'var1=sendershopid' as comment,
    CONVERT(varchar(10), Interagence.nSenderShopId) as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Interagence
    LEFT JOIN Shop receivershop ON interagence.nreceivershopid = receivershop.nid

    WHERE Interagence.bReceived = 1
UNION
  SELECT
    'Interagence' as tp,
    'Reception' as pr,
    Interagence.nid as nId,
    '' as codeOp,
    Interagence.dInsertion,
    Interagence.dReceived as dDiaryDate, Interagence.nReceiverShopId as nshopid, receivershop.ncompanyid as nCompanyId,
    Interagence.nAmount as nAmount, 
    NULL as com,
    0 as comFR,
    0 as comId,
    'var1=sendershopid' as comment,
    CONVERT(varchar(10), Interagence.nSenderShopId) as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Interagence
    LEFT JOIN Shop receivershop ON interagence.nreceivershopid = receivershop.nid

    WHERE Interagence.bReceived = 1

  UNION 
   SELECT
    'Neosurf' as tp,
    'Neosurf' as pr,
    0 as nId,
    '' as codeOp,
    Diary_DailyNeosurf.dInsertion,
    Diary_DailyNeosurf.dDiaryDate, Diary_DailyNeosurf.nShopId, Diary_DailyNeosurf.nCompanyId,
    Diary_DailyNeosurf.nAmount, 
    NULL as com, 
    Diary_DailyNeosurf.nComissionFranchise as comFR, 
    0 as comId,
    '' as comment,
    '' as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_DailyNeosurf
  
  UNION 
   SELECT
    'Transport' as tp,
    Transport_Product.name as pr,
    0 as nId,
    '' as codeOp,
    DD.dInsertion,
    DD.dDiaryDate, DD.nShopId, DD.nCompanyId,
    DD.nAmount, 
    NULL as com, 
    DD.nComissionFranchise as comFR, 
    0 as comId,
    '' as comment,
    '' as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_DailyTransport DD
    left join Transport_Transactions tt on DD.nTransportTransactionId = tt.id
		left join Transport_Product on tt.product_id = Transport_Product.id


  UNION 
   SELECT
    'Facturier' as tp,
    V_SUB_PRODUCT.sName as pr,
    0 as nId,
    '' as codeOp,
    DD.dInsertion,
    DD.dDiaryDate, DD.nShopId, DD.nCompanyId,
    DD.nAmount, 
    NULL as com, 
    DD.nComissionFranchise as comFR, 
    0 as comId,
    '' as comment,
    '' as var1, '' as var2, '' as var3, '' as var4, '' as var5

    FROM Diary_DailyFacturiers DD
		LEFT JOIN Facturiers_Transactions ON DD.nFacturierTransactionId = Facturiers_Transactions.nId
		LEFT JOIN V_SUB_PRODUCT ON Facturiers_Transactions.sBillerId = V_SUB_PRODUCT.nId
    LEFT JOIN Comission ON DD.nComissionId = Comission.nId
		LEFT JOIN Comission_ProductId ON Comission.nComissionProductId = Comission_ProductId.nid

  UNION 
    SELECT
      'Autre' as tp,
      Comission_ProductId.sName as pr,
      0 as nId,
      '' as codeOp,
      DD.dInsertion,
      DD.dDiaryDate, DD.nShopId, DD.nCompanyId,
      DD.nAmount, 
      NULL as com, 
      DD.nComissionFranchise as comFR, 
      nComissionId as comId,
      '' as comment,
      CONVERT(varchar(10),dd.nId) as var1, '' as var2, '' as var3, '' as var4, '' as var5

      FROM Diary_DailyExtBalance DD
      LEFT JOIN Comission ON DD.nComissionId = Comission.nId
      LEFT JOIN Comission_ProductId ON Comission.nComissionProductId = Comission_ProductId.nid
    
  UNION
    select
      'EDP' as tp,
      Comission_ProductId.sName as pr,
      0 as nId,
      '' as codeOp,
      LOG_COREBANKING.operation_date as dInsertion,
      CONVERT (DATE, LOG_COREBANKING.operation_date, 110) as dDiaryDate, LOG_COREBANKING.shop_id as nShopId, shop.nCompanyId,
      ISNULL(LOG_COREBANKING.total_amount,0 ) as nAmount, 
      NULL as com, 
      CASE WHEN Comission.nComissionTypeId = 1 THEN Comission.nPercentageOnVolume * ISNULL(LOG_COREBANKING.total_amount,0) / 100
              WHEN Comission.nComissionTypeId = 2 THEN 0
              ELSE ISNULL(Comission.nAmountByOperation, 0)
      END as comFR, 
      Comission.nid as comId,
      '' as comment,
      CONVERT(varchar(10),LOG_COREBANKING.id) as var1, '' as var2, '' as var3, '' as var4, '' as var5

  from CP_CORE.dbo.LOG_COREBANKING

  left join cash_plus.dbo.shop on LOG_COREBANKING.shop_id = shop.nid
  LEFT JOIN cash_plus.dbo.Comission_GroupShop ON Comission_GroupShop.nShopId = Shop.nId AND Comission_GroupShop.bActive = 1
  LEFT JOIN cash_plus.dbo.Comission_GroupGrid ON Comission_GroupGrid.nComissionGroupId = Comission_GroupShop.nComissionGroupId
  LEFT JOIN cash_plus.dbo.Comission_ProductId ON Comission_ProductId.nId = 74 -- depot
  LEFT JOIN cash_plus.dbo.Comission ON Comission.nComissionGridId = Comission_GroupGrid.nComissionGridId AND Comission.nComissionProductId = Comission_ProductId.nId
  
  WHERE LOG_COREBANKING.operation_type_id = 10 
    and LOG_COREBANKING.status = 'Finished'

  UNION
    select
      'EDP' as tp,
      Comission_ProductId.sName as pr,
      0 as nId,
      '' as codeOp,
      LOG_COREBANKING.operation_date as dInsertion,
      CONVERT (DATE, LOG_COREBANKING.operation_date, 110) as dDiaryDate, LOG_COREBANKING.shop_id as nShopId, shop.nCompanyId,
      ISNULL(LOG_COREBANKING.total_amount,0 ) as nAmount, 
      NULL as com, 
      CASE WHEN Comission.nComissionTypeId = 1 THEN Comission.nPercentageOnVolume * ISNULL(LOG_COREBANKING.total_amount,0) / 100
              WHEN Comission.nComissionTypeId = 2 THEN 0
              ELSE ISNULL(Comission.nAmountByOperation, 0)
      END as comFR, 
      Comission.nid as comId,
      '' as comment,
      CONVERT(varchar(10),LOG_COREBANKING.id) as var1, '' as var2, '' as var3, '' as var4, '' as var5

  from CP_CORE.dbo.LOG_COREBANKING

  left join cash_plus.dbo.shop on LOG_COREBANKING.shop_id = shop.nid
  LEFT JOIN cash_plus.dbo.Comission_GroupShop ON Comission_GroupShop.nShopId = Shop.nId AND Comission_GroupShop.bActive = 1
  LEFT JOIN cash_plus.dbo.Comission_GroupGrid ON Comission_GroupGrid.nComissionGroupId = Comission_GroupShop.nComissionGroupId
  LEFT JOIN cash_plus.dbo.Comission_ProductId ON Comission_ProductId.nId = 75 -- depot
  LEFT JOIN cash_plus.dbo.Comission ON Comission.nComissionGridId = Comission_GroupGrid.nComissionGridId AND Comission.nComissionProductId = Comission_ProductId.nId
  
  WHERE LOG_COREBANKING.operation_type_id = 4 
    and LOG_COREBANKING.status = 'Finished'

) report

LEFT JOIN Shop ON report.nShopId = Shop.nId
LEFT JOIN Company ON report.nCompanyId = Company.nId

WHERE 
   nshopid in (1507,1919,2028) or report.nCompanyId in (887)</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1117</xloc>
      <yloc>467</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>


















select  t.nid , t.dInsertion ,t.nProductId ,nAmount ,nOperationFee,nTransactionStatusId
,nShopId,s.sShopId,sReceiverFirstName,sReceiverLastName,sReceiverGsm,json  , Customer.sCIN ,Customer.sLastName ,Customer.sFirstName   from transactions t
left join shop s
on s.nid = t.nShopId
left join company c
on c.nid = s.nCompanyId
left join TransactionsComplements
on TransactionsComplements.transactionId = t.nid
left join Customer
on t.nReceiverId = Customer.nid
where c.nid = 1397

order by  t.nid desc</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1040</xloc>
      <yloc>656</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>
select status , convert(date,dInsertion,103) as date  ,count(*) as nbr,sum(nAmount) as volume from Facturiers_Transactions
where  convert(date,dInsertion,103) > '2021-01-01'
group by status , convert(date,dInsertion,103)











--select Type_product, shopkeeper_id ,ShopKeeper_name ,sShopId ,sum(commission)as commission from commission_shopkepper
---      where month(dInsertion) = 5 and year(dinsertion) =2022  and ShopKeeper_name is not null  
--	   and Type_product = 'marchand'
--        group by  Type_product, shopkeeper_id ,ShopKeeper_name ,sShopId




select annee,mois, tro_check, f.agent,nbr ,   
case 
when nbr>2000 then 600
when nbr BETWEEN  1200 and 1999 then 400
when nbr BETWEEN  500 and 1199 then 250
 end as commission
 from (
select annee,mois, ISNULL(AVG(pl_tro)*100,0) as tro_check ,agent
from
		(select annee,mois ,Tro, agent
			,case
			when Tro > 1 then 1
			else Tro
			end as pl_tro from tro_sales_general_arch t )tro

group by agent,annee,mois)f

left join (select agent ,sum(realisation) as nbr from tro_sales_general_arch
			where type_Product in ('national','international')
			group by annee, mois, agent) r
on r.agent = f.agent
where  tro_check >=80 
 </sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1136</xloc>
      <yloc>736</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>--select ph.last_name ,ph.first_name, lvl,ac.id_num as cin ,ph.phone,c.card_id from REPORTING_ACCOUNTS ac
-- left join REPORTING_CARDS c
-- on c.account_id = ac.id
--  left join client_edp ph
-- on ph.id_num = ac.id_num
--where
-- ac.created_by = 4292 and lvl in ('CPLVL3','CPLVL2')
-- and phone  in(select accountnumber from ACCOUNT_SHOP_LINK)


select Type_product,product , sShopId,year(dinsertion)as annee,month(dinsertion)as mois, shopkeeper_id ,shopkeeper_name ,sum(nbr) as total_trx from shopkeeper_realisations 
where ProductType_id in(3,23,1,2,22,12)  and  year(dinsertion)= 2022 and month(dinsertion) in (3)
group by  sShopId,shopkeeper_id ,shopkeeper_name, year(dinsertion),month(dinsertion),Type_product,product

--union 


--select Type_product,product, sShopId,year(dinsertion)as annee,month(dinsertion)as mois, shopkeeper_id ,shopkeeper_name ,sum(nbr) as total_trx from shopkeeper_realisations 
--where ProductType_id in(3,23,1,2,22,12)  and  year(dinsertion)= 2022 and month(dinsertion) in (1,2)
--group by  sShopId,shopkeeper_id ,shopkeeper_name, year(dinsertion),month(dinsertion),Type_product,product
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1120</xloc>
      <yloc>832</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select sShopId as code,sname,bFranchise as type_agence from shop




select 'transfert'as service, tr.nid,isnull(TAIHUB.sNeiCode,TAOHUB.sNeiCode)as sNeiCode , s.sShopId ,s.sName as agence ,tr.nProductId,pr.sName as Product, convert(date,tr.dinsertion,103) as date,trs.sName as 'Status',tr.namount as nAmount,'agence' as type
,tr.nOperationFee,tr.nServiceFee,Company.sName as Company,tr.nComListId,TAOHUB.codeOfficeChange ,Customer.sCIN,Partner_X.dsent,Customer.slastname,Customer.sfirstname
 from transactions tr
left join shop s
   on s.nid = tr.nShopId
left join Product pr
   on pr.nid = tr.nProductId

left join TAIHUB 
   on TAIHUB.nTransactionsId = tr.nid
left join Company
on Company.nid = s.nCompanyId
left join TransactionStatus trs
on tr.nTransactionStatusId = trs.nId
left join TAOHUB
on TAOHUB.nTransactionsId = tr.nid

left join Customer 
on Customer.nid = tr.nsenderid
left join Partner_X 
on Partner_X.nTransactionId = tr.nId
 
 where   tr.dInsertion > '2022-07-27 00:00:00.000' and 
tr.dInsertion &lt; '2022-07-27 23:59:50.000'


























select * from Transactions
left join TransactionChanges 
on Transactions.nid = TransactionChanges.nTransactionId
where nShopId = 749

















select product, YEAR(dinsertion)as year ,month(dinsertion) as mois , count(*)  as nbr ,sum(nAmount) as volume from Daily_transactions_extended d
left join shop s on s.sShopId = d.nShopId
 where nAmount &lt;= 100 and transactionStatus in (8,26) and dinsertion >='2020-11-01 00:01:03.567' and productId = 1
 and s.nShopTypeId= 1
 group by YEAR(dinsertion) ,month(dinsertion),product
  
  order by  YEAR(dinsertion) asc ,month(dinsertion) asc











--select product, YEAR(dinsertion)as year ,month(dinsertion) as mois , count(*) as nbr from Daily_transactions_extended
-- where nAmount >= 100 and transactionStatus in (8,26) and dinsertion >='2020-11-01 00:01:03.567' and productId = 1
-- group by YEAR(dinsertion) ,month(dinsertion),product
  
--  order by  YEAR(dinsertion) asc ,month(dinsertion) asc








--select * from Daily_transactions_extended

--where  productId  = 5059 
--and year(dinsertion) = 2022






select Company.sName as Company,s.bFranchise as type_agence, d.nShopId,sShopId,dDate,d.nInitialBalance,nFinalBalance from Diary_Balance d
left join shop s
on d.nShopId = s.nid
left join Company
on s.nCompanyId = Company.nid
where dDate > '2022-04-14 00:01:00.093'


--select year(created_date) as year,month(created_date) as mois ,product ,shop_id ,sShopId,sum(comfr_amount) from EDP_COMFR
--left join shop 
--on EDP_COMFR.shop_id = shop.nid 
--where year(created_date) = 2022 and month(created_date)= 4
--group by year(created_date) ,month(created_date)  ,product ,shop_id,sShopId</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1159</xloc>
      <yloc>917</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>

select * from cpstore_orders  orders
left join  cpstore_variants variants
on variants.id = orders.variant
left join cpstore_products products
on products.id = variants.product
left join shop 
on shop.nid = orders.pos_id
left join City 
on City.nid = shop.nCityId
left join edp_authorisation 
on edp_authorisation.request_id = orders.authorization_id
left join REPORTING_TRANSACTIONS
on edp_authorisation.ID = REPORTING_TRANSACTIONS.authorisation_id
left join REPORTING_ACCOUNTS 
on REPORTING_ACCOUNTS.id = REPORTING_TRANSACTIONS.account_id
where  orders.status= 'completed' and pos_type &lt;&gt; 'Retailer' and title = 'Razer Gold Pins - USD 500 (INT)'

order by orders.created_at desc

































select * from Daily_transactions_extended where sShopId in ( 90101,434801,410201)
and dinsertion > '2022-03-01 00:06:07.820'































select sShopId, created_by, code_agence, ville, type,title,question,bFranchise,lvl,

case
 when age &lt; 30 then 'Moins de 30 ans'
 when age between 30 and 39  then '30 ans &lt;= Age &lt; 40 ans'
 when age between 40 and 49  then '40 ans &lt;= Age &lt; 50 ans'
 when age between 50 and 59  then '50 ans &lt;= Age &lt; 60 ans'
 when age > 59  then '60 ans et plus'
end tranche,sum(nombre_de_compte) as nbr

  from (



select r.created_by,r.lvl, ss.sShopId,s.sShopId as code_agence,s.bFranchise,City.sName as ville,s.bFranchise as type,  2022- year(birth_date) as age,isnull(title,'MR') as title   ,count(r.id) as nombre_de_compte

  ,  c.question
FROM REPORTING_ACCOUNTS r
   
 
   left join  (select * from client_edp 
               join (select id_num as iid_num,  max(id) as  iid  from client_edp
                  group by  id_num)ma
          	      on client_edp.id =ma.iid) b

on b.id_num = r.id_num
 OUTER APPLY OPENJSON (b.interview) WITH  ( question VARCHAR(100) '$.question_6.r') c
left join shop s
on s.nid = r.created_by
left join City 
on City.nid = s.nCityId
left join (select distinct(id_account) as id_account ,shop2 from info_upgrades 
           join   (select id_account as iid_account,max(client_id) max_up from info_upgrades group by  id_account ) d
		  on info_upgrades.client_id = d.max_up   )i
on i.id_account = r.id
left join shop ss
on ss.nid =i.shop2

where r.open_date between '2020-08-01 00:00:03.567'  and '2022-06-30 23:56:03.567'



group by r.created_by, s.sShopId,City.sName,2022- year(birth_date),isnull(title,'MR'),r.lvl,s.bFranchise, c.question,ss.sShopId)f

group by code_agence, ville, type,title,sShopId, question,bFranchise,lvl,
case
 when age &lt; 30 then 'Moins de 30 ans'
 when age between 30 and 39  then '30 ans &lt;= Age &lt; 40 ans'
 when age between 40 and 49  then '40 ans &lt;= Age &lt; 50 ans'
 when age between 50 and 59  then '50 ans &lt;= Age &lt; 60 ans'
 when age > 59  then '60 ans et plus'
end ,created_by,sShopId





</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1171</xloc>
      <yloc>1023</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>
select  UN_SanctionsLog.nid,UN_SanctionsLog.dLog,UN_SanctionsLog.name,UN_SanctionsLog.passport,
UN_SanctionsLog.info,UN_SanctionsLog.source,UN_SanctionsLog.status,UN_SanctionsLog.customer_id,UN_SanctionsLog.dateControle,
Customer.sLastName,Customer.sFirstName
 from UN_SanctionsLog
join Customer on Customer.nid = UN_SanctionsLog.customer_id
where dLog > '2023-01-01'
















sELECT bRejected, Versement.nId, Versement.nMontantAVerser, Versement.dInsertion, Versement.dDate, AlimentationEntity.refId, Versement.bManual AS bManual,
  AlimentationEntity.name AS sCompanyName, CONCAT(AlimentationEntity.refId, '-',AlimentationEntity.name) AS sCompany,
Versement.bActive AS bActive, Versement.bVersed AS bVersed, Versement.dVersed AS dVersed, 
Versement.nMontantVersed AS nMontantVersed, Versement.bValidated AS bValidated,
  CASE WHEN nVersementType IN (1,2) THEN CONCAT('FR:', AlimentationEntity.name) 
 WHEN nVersementType IN (3,4) THEN CONCAT('Shop:',initiateurShop.name,'-', initiateurShop.code)
 END AS sInitiateur, CASE WHEN nVersementType IN (1,3) THEN CONCAT(Alim_CP_BankAccount.sName,'-',Alim_Bank.sName,'-',Alim_CP_BankAccount.sRIB)      
   WHEN nVersementType IN (2,4) THEN CONCAT('Shop:',destinationShop.name,'-', destinationShop.code)
 END AS sDestinataire, Alim_VersementType.sLabel AS sVersementType,
 CASE WHEN nVersementType IN (3,4) THEN initiateurShop.code ELSE '-' END AS sInitiateurShop,
CASE WHEN nVersementType IN (3,4) THEN destinationShop.code ELSE '-' END AS sDestinationShop,Versement.dValidated ,dRejected,
ShopKeeper.sLogin,sRejectedReason

FROM t_Versement AS Versement
LEFT JOIN AlimentationEntity ON AlimentationEntity.id = Versement.entityId 
LEFT JOIN AlimentationEntity destinationShop ON Versement.entityDestinationId = destinationShop.id AND destinationShop.refType = 'shop'    
LEFT JOIN AlimentationEntity initiateurShop ON Versement.entityId = initiateurShop.id 
 LEFT JOIN Alim_VersementType ON Versement.nVersementType = Alim_VersementType.nId 
LEFT JOIN Alim_CP_BankAccount ON Versement.nCPBankAccountId = Alim_CP_BankAccount.nId
 LEFT JOIN Alim_Bank ON Alim_CP_BankAccount.nBankId = Alim_Bank.nId
  left join (select  [nId],[sLogin],[nShopId],sagent,nProfileId,[bActive]  from Access) ShopKeeper
  on ShopKeeper.nid = isnull(nRejectedByAccessId,nValidatedByAccessId)
 
   WHERE 1=1 

  AND 
 year(Versement.dInsertion) = 2023  and   Versement.dInsertion   between '2023-06-16 00:00:23.000' and '2023-07-14 23:00:23.000'

</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1257</xloc>
      <yloc>1096</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 2 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>
select  t.nid ,t.dInsertion,Product.sName as product,t.nAmount,t.nOperationFee, shop.sShopId ,Company.sName as company,

xs.sReceiverLastName, xs.sReceiverFirstName,xs.sReceiverCountry,xs.sSendCurrency,xs.sSenderLastName,xs.sSenderFirstName,isnull(Country.iso2,'MA') as nationalite ,tao.sNeiCode,tao.codeOfficeChange from transactions t
left join TAOHUB tao
on tao.nTransactionsId = t.nId
left join Partner_xs xs
on xs.nTransactionId = t.nid
left join Product
on Product.nid = t.nProductId
left join shop 
on shop.nid = t.nShopId
left join Company 
on shop.nCompanyId = Company.nid
left join Customer 
on Customer.nid = t.nSenderId
left join Country
on Customer.nCountryId = Country.code


where t.nProductId in (4059,4060,58) and year(t.dInsertion ) = 2022 and month(t.dInsertion) = 1
and nTransactionStatusId = 8






















select type_product,ccs,tro,case when tro BETWEEN 0.8 and 0.89 then 150
 when tro BETWEEN 0.9 and 0.99 then 175
  when tro >=1 then 200 else 0 end as commission
 from (
select r.ProductType_id,ccs ,o.type_product ,sum(obj_reseau) as budget,sum(r.nbr) as realisation ,sum(r.nbr)/sum(obj_reseau)as Tro  from objectif_sales_reseau_aff o
 join (select sshopid, case when ProductType_id = 2 then 1  when ProductType_id = 12 then 2 else ProductType_id end as ProductType_id  ,sum(nbr)as nbr from shopkeeper_realisations
      where month(dinsertion) = 6 and year(dinsertion) = 2022
       group by sshopid, case when ProductType_id = 2 then 1  when ProductType_id = 12 then 2 else ProductType_id end
	   union 
	   
       select shop.sShopId,33 as ProductType_id ,count(*) as nbr from REPORTING_CARDS r
 
left join shop on shop.nid =  r.agency
where month(createddate) = 6 and year(createddate) = 2022
group by  shop.sShopId
	     )r
	   on r.sShopId = o.code and o.product_id  = r.ProductType_id
group by  ccs ,o.type_product,r.ProductType_id

)f














--select sShopId as code  , City.sName as ville  ,sum(ag.nbrr)as nbr_carte ,sum(c.nbrr)as total_carte, sum(com.nbr) as  nbr_trx,sum(com.volume) as volume,sum(com.commission) as commission    from shop 
 
--left join City 
--on City.nid = nCityId
--left join 
-- ( select agency ,count(*) as nbrr from REPORTING_CARDS where  month(createddate) in (4,5,6) and year(createddate) = 2022 group by agency) ag
-- on  ag.agency = shop.nid 



-- left join  ( select agency ,count(*) as nbrr from REPORTING_CARDS where createddate &lt;'2022-07-01 00:01:03.567'  group by agency) c
-- on  c.agency = shop.nid 


-- left join (select REPORTING_CARDS.agency ,sum(COMMISION_FRAIS_PORTEUR) as commission ,sum(MONTANT_TRANSACTION) as volume
--       , count(*) as nbr  from REPORTING_MONETIQUE 
--	    join REPORTING_CARDS on REPORTING_CARDS.card_id = REPORTING_MONETIQUE.CARD_ID
--                  where  month(DATE_PROCESSING) in (4,5,6) and  year(DATE_PROCESSING)= 2022 and code_operation in (05000,07000)  group by  REPORTING_CARDS.agency ) as com
--on com.agency = shop.nid

--  group by  sShopId, City.sName</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1394</xloc>
      <yloc>1144</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 2 2 2 2 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>cashplusmaster</connection>
    <sql>sELECT bRejected, Versement.nId, Versement.nMontantAVerser, Versement.dInsertion, Versement.dDate, AlimentationEntity.refId, Versement.bManual AS bManual,
  AlimentationEntity.name AS sCompanyName, CONCAT(AlimentationEntity.refId, '-',AlimentationEntity.name) AS sCompany,
Versement.bActive AS bActive, Versement.bVersed AS bVersed, Versement.dVersed AS dVersed, 
Versement.nMontantVersed AS nMontantVersed, Versement.bValidated AS bValidated,
  CASE WHEN nVersementType IN (1,2) THEN CONCAT('FR:', AlimentationEntity.name) 
 WHEN nVersementType IN (3,4) THEN CONCAT('Shop:',initiateurShop.name,'-', initiateurShop.code)
 END AS sInitiateur, CASE WHEN nVersementType IN (1,3) THEN CONCAT(Alim_CP_BankAccount.sName,'-',Alim_Bank.sName,'-',Alim_CP_BankAccount.sRIB)      
   WHEN nVersementType IN (2,4) THEN CONCAT('Shop:',destinationShop.name,'-', destinationShop.code)
 END AS sDestinataire, Alim_VersementType.sLabel AS sVersementType,
 CASE WHEN nVersementType IN (3,4) THEN initiateurShop.code ELSE '-' END AS sInitiateurShop,
CASE WHEN nVersementType IN (3,4) THEN destinationShop.code ELSE '-' END AS sDestinationShop,Versement.dValidated ,dRejected,
ShopKeeper.sLogin,sRejectedReason

FROM t_Versement AS Versement
LEFT JOIN AlimentationEntity ON AlimentationEntity.id = Versement.entityId 
LEFT JOIN AlimentationEntity destinationShop ON Versement.entityDestinationId = destinationShop.id AND destinationShop.refType = 'shop'    
LEFT JOIN AlimentationEntity initiateurShop ON Versement.entityId = initiateurShop.id 
 LEFT JOIN Alim_VersementType ON Versement.nVersementType = Alim_VersementType.nId 
LEFT JOIN Alim_CP_BankAccount ON Versement.nCPBankAccountId = Alim_CP_BankAccount.nId
 LEFT JOIN Alim_Bank ON Alim_CP_BankAccount.nBankId = Alim_Bank.nId
  left join (select  [nId],[sLogin],[nShopId],sagent,nProfileId,[bActive]  from Access) ShopKeeper
  on ShopKeeper.nid = isnull(nRejectedByAccessId,nValidatedByAccessId)
 
   WHERE 1=1 

  AND 

Versement.dInsertion between '2024-07-15 00:12:01.120' and   '2024-08-14 23:12:01.120'</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1267</xloc>
      <yloc>1198</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select  * from Daily_transactions_extended 
 join client_min_dinsertion
on Daily_transactions_extended.idReceiver =client_min_dinsertion.client and maxdate= dinsertion
join (select * from UN_SanctionsLog where source = 'CPMS') out
 on out.customer_id = client_min_dinsertion.client
 join  Customer_new cu
 on cu.nid = client_min_dinsertion.client 
 left join Country co
 on cu.nCountryId = co.code 
 where productId not in  (1,4060,4059,58) 

 union 

 select  * from Daily_transactions_extended 
 join client_min_dinsertion
on Daily_transactions_extended.idSender =client_min_dinsertion.client and maxdate= dinsertion
join (select * from UN_SanctionsLog where source = 'CPMS') out
 on out.customer_id = client_min_dinsertion.client
  join  Customer_new cu
 on cu.nid = client_min_dinsertion.client 
 left join Country co
 on cu.nCountryId = co.code 
 where productId  in  (1,4060,4059,58) 






--select   re.open_date,re.lvl,re.id_num,c.phone,re.interoperable from REPORTING_ACCOUNTs re
--left join client_edp c  on 
-- hashed_phone =  convert(varchar(256),HASHBYTES('SHA2_256',c.phone),2)
 
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1289</xloc>
      <yloc>538</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 3 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select * from (
select REPORTING_TRANSACTIONS.account_id ,min(createddate)as mindatte  from REPORTING_TRANSACTIONS

join (select REPORTING_ACCOUNTS.id ,dlog from UN_SanctionsLog   join client_edp  on UN_SanctionsLog.customer_id = client_edp.id  
            join REPORTING_ACCOUNTS on  REPORTING_ACCOUNTS.id_num = client_edp.id_num 
       where source = 'EDP')mi
on mi.id = REPORTING_TRANSACTIONS.account_id and REPORTING_TRANSACTIONS.createddate > dlog

where REPORTING_TRANSACTIONS.account_id in (select REPORTING_ACCOUNTS.id from client_edp
          join REPORTING_ACCOUNTS
             on client_edp.id_num = REPORTING_ACCOUNTS.id_num
             where client_edp.id in (select customer_id from UN_SanctionsLog where source = 'EDP'))



group by account_id )f
left join REPORTING_TRANSACTIONS
on REPORTING_TRANSACTIONS.account_id = f.account_id and createddate = mindatte






--select   re.open_date,re.lvl,re.id_num,c.phone,re.interoperable from REPORTING_ACCOUNTs re
--left join client_edp c  on 
-- hashed_phone =  convert(varchar(256),HASHBYTES('SHA2_256',c.phone),2)
 
</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1604</xloc>
      <yloc>732</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 2 3 2 2</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select * from InterPartnerTransactions  
where nPartnerId = 32 










select * from Daily_transactions_extended
left join Customer 
on Daily_transactions_extended.idReceiver  =  Customer.nid

where   productId not in  (1,4060,4059,58)  and Customer.sIdType = 'PP'
and Daily_transactions_extended.dinsertion BETWEEN '2022-01-01 00:01:03.567' and '2022-07-28 23:59:03.567'

 and
 transactionStatus =8 and
 sShopId in (28689,
28569,
397001,
430301,
28641,
397002,
417101,
95501,
448404,
448402,
95502,
2240,
433301,
448403,
448401,
451202,
395501,
388701,
395502,
451201,
210701,
1159,
433302,
2130,
66101,
442401,
442001,
382601,
28245,
28998,
28887,
416501,
2234,
428701,
309001,
425201,
1079,
215001,
216001,
214001,
167601,
472401,
28651,
404101,
28640,
403501,
201901,
167602,
386301,
403502,
341003,
341002,
494501,
420601,
1550,
28369,
28982,
425202,
214002,
216002,
445601,
466201,
466203,
466202,
149101,
28845,
422901,
83301,
469801,
28994,
471702)   




union 

select * from Daily_transactions_extended
left join Customer 
on Daily_transactions_extended.idSender  =  Customer.nid

where   productId  in  (1,4060,4059,58)  and Customer.sIdType = 'PP' and
 transactionStatus =8 and
  Daily_transactions_extended.dinsertion BETWEEN '2022-01-01 00:01:03.567' and '2022-07-28 23:59:03.567'
 and sShopId in (28689,
28569,
397001,
430301,
28641,
397002,
417101,
95501,
448404,
448402,
95502,
2240,
433301,
448403,
448401,
451202,
395501,
388701,
395502,
451201,
210701,
1159,
433302,
2130,
66101,
442401,
442001,
382601,
28245,
28998,
28887,
416501,
2234,
428701,
309001,
425201,
1079,
215001,
216001,
214001,
167601,
472401,
28651,
404101,
28640,
403501,
201901,
167602,
386301,
403502,
341003,
341002,
494501,
420601,
1550,
28369,
28982,
425202,
214002,
216002,
445601,
466201,
466203,
466202,
149101,
28845,
422901,
83301,
469801,
28994,
471702)   



</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1621</xloc>
      <yloc>858</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>n 2 3 3</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>bi</connection>
    <sql>select ph.last_name ,ph.first_name, lvl,ac.id_num as cin ,ph.phone,c.card_id from REPORTING_ACCOUNTS ac
 left join REPORTING_CARDS c
 on c.account_id = ac.id
  left join client_edp ph
 on ph.id_num = ac.id_num
where
 ac.created_by = 4292 --and lvl  in ('CPLVL3','CPLVL2')
 and phone  in(select accountnumber from ACCOUNT_SHOP_LINK)</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1132</xloc>
      <yloc>573</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
